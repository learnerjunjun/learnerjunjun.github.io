<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>访你 于有雾的春晨</title>
  
  <subtitle>Jing&#39;s Blog</subtitle>
  <link href="https://jingvc.com/atom.xml" rel="self"/>
  
  <link href="https://jingvc.com/"/>
  <updated>2023-09-12T00:00:00.000Z</updated>
  <id>https://jingvc.com/</id>
  
  <author>
    <name>Jing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>信息收集与文档管理写作</title>
    <link href="https://jingvc.com/post/719c.html"/>
    <id>https://jingvc.com/post/719c.html</id>
    <published>2023-04-25T00:00:00.000Z</published>
    <updated>2023-09-12T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="tip fa-envelope faa-parent animated-hover"><p class="faa-horizontal"><b>欲善其工，先利其器，但并非工具的奴隶😼</b></p></div><p>我一直以来都比较关注“生产力”工具领域，随着学习内容与需求的变化，自己也做了多次的升级迭代，从最初的 Office 套件到 Markdown，再到 obsidian、siyuan 类笔记管理软件，这些工具虽然一定程度上可以满足一段时期的需求，但多少有些差强人意的地方。</p><p>追求工具的极尽完美是不可取的，毕竟不是个人定制化而编写的工具，更多的是找寻一款适合自己的工具，融入自己的生活与学习当中，更多的是专注到内容生产与创造上来。</p><p>本文会把我近年来使用过的工具做一个使用体验小汇总，安装和获取方式会比较简洁，尽可能多的会包括一些使用案例。</p><h2 id="信息收集">信息收集</h2><p>当今网络时代信息很复杂也很多，很多信息很长但没有丝毫用处，会极大程度上分散注意力资源。这里呢主要推荐几个我的主要信息源，以及信息收集整理的 <code> 方式</code>。</p><h3 id="资讯类">资讯类</h3><h4 id="IT">IT</h4><ul><li><a href="https://www.ithome.com"><strong>IT Home</strong></a>，主要关注的领域是微软、鸿蒙更新信息以及其他业内关注度较高的咨询，也有一些业内人士做评论与解析，网站内有日榜与周榜的版面，基本会覆盖掉绝大多数 IT 界热点，主要是每天中午及晚上睡前做浏览，在此网站一般只是浏览，较少情况下会收集信息；</li></ul><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20135315.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h4 id="综合">综合</h4><ul><li><a href="https://sspai.com"><strong>少数派</strong></a>，这个网站呢以科技、软硬件内容为主，也有一些专业 pro 分享自己的工作流、技术栈、生活体验、兴趣爱好等，印象较深的有 siyuan 笔记开发者亲自撰写的文章，写自己的开发历程与理念，服务器玩家分享自己的技术栈、摄影大佬分享自己对镜头使用或光影捕捉的经验，总体来说内容比较有深度，比较贴合实际，如果是自己感兴趣领域的文章可以很好的为自己所借鉴。</li></ul><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20135854.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h4 id="软件">软件</h4><ul><li><p><a href="https://www.ghxi.com"><strong>果壳剥壳</strong></a>，是一个免费软件汇总的软件，提供 PC 与 Andriod 平台各类用途的软件，主流的 Adobe、Typora、Office 均可以在此网站上找到修改版，没有病毒及木马，使用也比较稳定，但目前对此网站的浏览及使用量正逐渐下降；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20151034.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p><strong>淘宝</strong>，一些付费的专业软件 Stata、Spss、Xmind 等，订阅价格好贵，不得已去淘宝找卖家购买，有条件的话还是要支持正版；</p></li></ul><h4 id="行业报告">行业报告</h4><p>做行研的时候需要阅读一些撰写好的行业研究报告，以快速地对某一行业进行了解，构建一个基础得知识面；</p><ul><li><p><a href="https://www.iresearch.com.cn/report.shtml"><strong>艾瑞咨询</strong></a>，行业覆盖很全面，时效性较高，主要是可以完全免费下载，极力推荐；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20143243.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p><a href="https://www.mob.com/mobdata/report"><strong>Mob 研究院</strong></a>，报告更新得周期较长，时效性略低，但也可以免费下载，主要是消费领域；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20143451.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p><a href="http://www.767stock.com/page/2"><strong>乐晴智库</strong></a>，网站更新周期比较长，但也是可以免费下载；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20143704.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li></ul><h3 id="文献类">文献类</h3><h4 id="Google-Scholar">Google Scholar</h4><p>一般需要写论文或者探讨学术问题时，咨询网站的观点可能由于是转述的原因，并不是很专业全面，这时候需要去读一些 Original 的内容，去构建自己的 Theory Line 与观点框架，推荐使用谷歌学术，源站或者镜像站均可，可以根据关键词进行检索，关键词中英文均可，新的期刊与过刊均可以检索到，筛选条件可以加上期刊名称或者日期。</p><p>检索到的结果，可以点进去 journal 的发布页，获取 DOI，粘贴到 <strong>Sci-Hub</strong> 进行下载；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20140138.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h4 id="JSTOR"><a href="https://www.jstor.org">JSTOR</a></h4><p><strong>JSTOR</strong>，是过刊的汇总数据库，一般被 JSTOR 收纳的文章，一般不是最新的但绝对是顶级的，是质量比较高的那一类，相对谷歌学术可以过滤掉一批不错期刊出版但水分较大的文章。</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20141947.png?x-oss-process=style/Comprass_Copyright" alt=""></p><p>比如都检索“Asset Pricing”这个关键词，谷歌学术检索结果向下滑动会出现较多的，引用量较少的文章；JSTOR 则基本上是该领域高质量的文章，比如 Merton、Fama、Sharpe 的，并不是谷歌学术检索不到高质量的文献，反而正是说谷歌学术检索的太全了，一些低质量的文章也混杂其中，我记得之前导师第一次安排文献综述的任务，在谷歌学术上只看标题，没看引用量，整理的内容很偏，质量也很差😖。</p><h3 id="收集">收集</h3><p>一些网页信息的收集，比如网页报道、公众号文章等</p><h4 id="Onenote">Onenote</h4><ul><li><p><strong>主要用途：</strong></p><p>网页剪辑 - 提取内容概要</p></li><li><p><strong>Tips:</strong></p><p>Onenote 没有什么上手难度，个人会将一些突然冒出来的想法或者日记、摘抄记在 OneNote 里面，它的同步功能还挺好用的，pc、iPad、移动端都可以打开和编辑；</p></li><li><p><strong>网页剪辑插件</strong>：🔜<a href="https://microsoftedge.microsoft.com/addons/detail/onenote-web-clipper/oogbnpmeihfgnccdnmmlgicknopghhma?hl=en-US"><font color=blue>OneNote Web Clipper</font></a></p><p>着重介绍一下它的网页插件，这个插件很赞，可以将一些网站以 <font color=blue> 截图 </font> 或者 <font color=blue>Article</font> 的形式保存下来，在网页搜索汇总信息时特别好用，可以先在 <font color=blue>onenote</font> 里面新建一个笔记本，然后将同一个主题的网站都剪辑在里面，写一些通识课论文或背景综述时使用。</p><p><img src="https://blog.jingvc.com/pic/af4ebd4d30d379cfc4ab8f230685295.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li></ul><h4 id="WebClipper">WebClipper</h4><p>​一个好用的网页剪辑浏览器插件，可以将主要内容以 <font color=blue>Markdown</font> 的形式保存，可以直接剪辑一部分的公式；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20141849.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h4 id="Siyuan">Siyuan</h4><p>​思源笔记的网页剪辑插件，打开 Siyuan 笔记运行时，可以使用该软件把网页内容直接剪切进本地的 Notes 中，方便整理与二次创作，可以剪辑文字及公式等；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20142627.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h4 id="Sci-hub">Sci-hub</h4><p>有好多的站点，进入网站后，可以通过 DOI、URL 等进行文献下载，下载得格式为 PDF；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20143903.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h2 id="内容整理">内容整理</h2><h3 id="文档浏览">文档浏览</h3><h4 id="稻壳阅读器 -DocBox">稻壳阅读器(DocBox)</h4><ul><li><p>稻壳阅读器是一款很轻量，功能却很丰富的 PDF 的阅读器，标注与笔记功能相较其他的软件强大不少，是日常主要的 PDF 的阅读器，对于 PDF 的编辑可以使用 <font color=blue>Adobe Acrobat DC</font></p></li><li><p><a href="http://www.daokeyuedu.com/">下载地址</a></p></li></ul><h3 id="文档精读">文档精读</h3><h4 id="Zotero">Zotero</h4><ul><li><p>主要优势在于搭建自己得文献库，分主题整理与学习文献</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20144151.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p>Zotero 可以直接通过插件识别网页导入参考文献条目；</p></li><li><p>利用 Zotero 可以直接进行 PDF 阅读、标注、英文文献翻译，还可以写 Markdown 格式得笔记</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20144206.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p>还有一系列得插件，丰富 Zotero 的功能，提升使用效率，这里放一个插件下载网站 <a href="https://pkmer.cn/products/zotero/zoteroMarket/"> 插件集市</a></p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20144413.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li></ul><h2 id="内容产出">内容产出</h2><p>接下来的部分是内容生产部分，主要是前期的思路整理，中期的内容创作及最后的内容发表；以最近的项目“Asset Pricing”主题的“Research Proposal”为例，介绍整个内容产出工作流</p><h3 id="Siyuan- 文字">Siyuan (文字)</h3><ul><li><p>使用思源笔记整理 <strong> 目标—框架—思路</strong></p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-13%20123549.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li></ul><h3 id="Typora- 公式">Typora (公式)</h3><p><font color=blue>一款支持实时预览、轻量化、可定制的 Markdown 文本编辑器</font></p><p>Typora 的公式编写体验相对 Siyuan 比较更好，会先使用 Typora 进行内容编写，最后导入到 Siyuan 笔记存档；</p><ul><li><p>使用 Typora 将 Zotero 的文献 <strong>阅读笔记汇总——编写草稿</strong></p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-13%20124939.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li></ul><h3 id="Lyx-TeXstudio">Lyx+TeXstudio</h3><p><font color=blue>排版 + Presentation</font></p><ul><li><p>使用 Typora 或者 Siyuan 笔记直接导出 PDF，排版的格式一般比较乱，也不太符合学术标准，这时候就需要使用到 Latex 了，由于前期的内容是 Markdown 格式的，后续直接粘贴复制进 Lyx 也十分的方便，在 Lyx 中可以直接切换文档模板，最后导出的 PDF 文档，比较标准也比较符合学术规范；</p><p>下图从左到右，依次是 <strong> 草稿 - 正式文稿 - 导出 PDF</strong></p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20145953.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p>有时候需要做 Presentation，阐述自己的观点，需要简洁的文字，辅助以图表解释，使用 office 编辑公式，再进行图表排版过于繁琐，这时也可以通过 Latex 实现；</p><p>主要使用的是编辑器是 TeXstudio，使用<a href="https://www.overleaf.com/learn/latex/Beamer">Beamer</a>，配置好模板之后，只专注于内容即可，排版会省不少力气；</p><p><img src="https://blog.jingvc.com/pic/Screenshot%202023-09-12%20150515.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li></ul><p>如文字及图片有不妥之处，欢迎批评指正~</p>]]></content>
    
    
    <summary type="html">基于个人经历与经验分享切实好用有帮助的文献与写作所需的工具，“欲善其工，先利其器”。</summary>
    
    
    
    <category term="Research" scheme="https://jingvc.com/categories/Research/"/>
    
    
    <category term="Workflow" scheme="https://jingvc.com/tags/Workflow/"/>
    
  </entry>
  
  <entry>
    <title>Fourier-Motzkin 消去法求解线性规划</title>
    <link href="https://jingvc.com/post/aa9c.html"/>
    <id>https://jingvc.com/post/aa9c.html</id>
    <published>2023-04-01T00:00:00.000Z</published>
    <updated>2023-08-24T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>参考书目：</strong></p><blockquote><p>[1] 数学规划与组合优化. 浙江大学出版社, 2001. [Online]. Available: <a href="https://books.google.com.sg/books?id=ZmSSAAAACAAJ">https://books.google.com.sg/books?id=ZmSSAAAACAAJ</a></p><p>[2] 组合优化与博弈论. 浙江大学出版社, 2015. [Online]. Available: <a href="https://books.google.com.sg/books?id=6w44swEACAAJ">https://books.google.com.sg/books?id=6w44swEACAAJ</a></p><p>[3] Lauritzen, Niels. Undergraduate Convexity: From Fourier And Motzkin To Kuhn And Tucker. Singapore: World Scientific Publishing Company, 2013. 👉 <a href="https://blog.jingvc.com/file/Undergraduate%20convexity.%20From%20Fourier%20and%20Motzkin%20to%20Kuhn%20and%20Tucker%20%28Niels%20Lauritzen%29.pdf">Download</a></p></blockquote><p><strong>Fourier–Motzkin Elimination</strong>, also known as <strong>FME method</strong> for eliminating variables from a system of liner inequalities.</p><h3 id="Gauss-Elimination">Gauss Elimination</h3><ul><li>通常使用高斯消元法 <strong> 求解线性方程组</strong>, 在有限个未知数的线性方程组中, 消去部分未知数后求解；</li><li>在线性代数中即是, 把矩阵转化为行阶梯形矩阵, 后求解未知数；</li></ul><h4 id="eg">eg:</h4><p>求解线性方程组<br>$$<br>\begin{cases}<br>x _1 + x _2 + x _3 + x _4 = 1 \ (L_1)\<br>x _1 + x _2 - x _3 - x _4 = 2 \ (L_2)\<br>x _1 - x _2 + x _3 - x _4 = 1 \ (L_3)\<br>x _1 - x _2 - x _3 + x _4 = 1 \ (L_4)<br>\end{cases}<br>$$</p><p><strong>解法一：</strong></p><p>$L_1+L_2$ , $L_3+L_4$ 得:<br>$$<br>\begin{cases}<br>2x _1 + 2x _2 = 3 \ (L_1)\<br>2x _1 - 2x _2 = 2 \ (L_2)<br>\end{cases}<br>$$<br>再次 $L_1+L_2$ 得 $4 x _ 1=5$ , 可解的 $x _ 1 = \frac {5} {4},x_2=\frac {1} {4}$</p><p>同理, $L_1-L_2$ , $L_3-L_4$ 得:<br>$$<br>\begin{cases}<br>2x _3 + 2x _4 = -1 \ (L_1)\<br>2x _3 - 2x _4 = 0 \ (L_2)<br>\end{cases}<br>$$<br>可解的 $x _ 3 = x _ 4 = - \frac {1} {4}$</p><p>综上, $x _ 1 = \frac {5} {4},x_2=\frac {1} {4},x _ 3 = x _ 4 = - \frac {1} {4}$</p><p><strong>解法二：</strong></p><p>系数增广矩阵:<br>$$<br>\overline{A}=<br>\begin{Bmatrix}<br>1&amp;1&amp;1&amp;1&amp;1\<br>1&amp;1&amp;-1&amp;-1&amp;2\<br>1&amp;-1&amp;1&amp;-1&amp;1\<br>1&amp;-1&amp;-1&amp;1&amp;1<br>\end{Bmatrix}<br>$$<br>矩阵变换化为行阶梯形矩阵, 得：<br>$$<br>\begin{Bmatrix}<br>1&amp;0&amp;0&amp;-1&amp;3/2\<br>0&amp;-2&amp;0&amp;-2&amp;0\<br>0&amp;0&amp;-2&amp;-2&amp;1\<br>0&amp;0&amp;0&amp;4&amp;-1<br>\end{Bmatrix}<br>$$<br>then:<br>$$<br>\begin{cases}<br>4x_4=-1\<br>-2x_3-2x_4=1\<br>-2x_2-2x_3=0\<br>x_1-x_4=3/2<br>\end{cases}<br>$$<br>由上到下求解方程, $x _ 4 = x _ 3 = - \frac {1} {4},x_2=\frac {1} {4},x _ 1 = \frac {5} {4}$</p><h4 id="Gauss-and-Ceres">Gauss and Ceres</h4><p>Gauss 在使用最小二乘法计算小行星帕拉斯 (Pallas) 的轨道时, 遇到了求解线性方程组的问题;</p><p>👉<a href="https://sites.math.rutgers.edu/~cherlin/History/Papers1999/weiss.html">故事阅读</a></p><p>👉<strong>概述</strong>：</p><p><img src="https://blog.jingvc.com/pic/gauss_draft.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h3 id="Fourier–Motzkin-Elimination">Fourier–Motzkin Elimination</h3><ul><li>求解简单线性不等式约束下的最优化目标</li><li>不等式可用来确认等式, 例如 $x \leq 1,x \geq 1 \Rightarrow x=1$</li><li>更高效的求解线性不等式的方式</li></ul><h4 id="Proposition-1：">Proposition 1：</h4><p>$\alpha_1,\alpha_2,\alpha_3,…,\alpha_r ,\ \ \beta_1,\beta_2,\beta_3,…,\beta_s \in \R$,</p><p>$\text{max} {\alpha_1,\alpha_2,\alpha_3,…,\alpha_r} \leq \text{min} {\beta_1,\beta_2,\beta_3,…,\beta _ s}$,</p><p>当且仅当任意 $i,j$ 满足 $1\leq i \leq r,1 \leq j \leq s$, 有 $\alpha _ i \leq \beta_j $；</p><p><strong>Proof :</strong></p><p>如果 $\text{max} {\alpha_1,\alpha_2,\alpha_3,…,\alpha_r} \leq \text{min} {\beta_1,\beta_2,\beta_3,…,\beta _ s}$ 成立,</p><p>则对于任意 $1\leq i \leq r,1 \leq j \leq s$ 有:<br>$$<br>\alpha_i \leq \text{max} {\alpha_1,\alpha_2,\alpha_3,…,\alpha_r} \leq \text{min} {\beta_1,\beta_2,\beta_3,…,\beta _ s} \leq \beta_j<br>$$</p><p><strong>Then:</strong></p><ul><li><p>对于同一不等式, 不等式左侧实值应小于等于右侧实值, 在此基础上不等式成立, 且可进一步求解；</p><p>当 $a \leq x , x \leq b$, 当且仅当 $a \leq b$ 时成立；</p></li></ul><h4 id="eg-1">eg 1:</h4><p>$$<br>\text{max} \ x+y\<br>\text{s.t.} \ x+2y\leq3\<br>2x+y \leq 3\<br>x \geq 0\<br>y \geq0<br>$$</p><p><strong>解：</strong></p><p>令 $x+y=z$, 则 $x=z-y$<br>带入原规划问题,<br>$$<br>\text{max} \ z\<br>\text{s.t.}\ z+y \leq 3\<br>2z-y \leq 3\<br>z-y \geq 0\<br>y \geq 0<br>$$<br>将 $y$ 视作不等式组的未知数:<br>$$<br>\begin{cases}<br>y\leq3-z\<br>2z-3 \leq y\<br>y \leq z\<br>0\leq y<br>\end{cases}<br>$$<br>then: 不等式左侧数值需要小于右侧数值, $\text{max}\ {0,2z-3} \leq \text{min}\ {3-z,z}$<br>$$<br>\begin{cases}<br>0\leq3-z\<br>2z-3 \leq 3-z\<br>2z-3 \leq z\<br>0\leq z<br>\end{cases}<br>$$<br>解的：$0\leq z \leq 2$, 则 $\text{max}\ z=2$</p><h4 id="eg-2">eg 2:</h4><p>$$<br>\text{max} \ x+y\<br>\text{s.t.} \ 8x+3y\leq 24\<br>5x+7y \leq 35\<br>-x+y \leq 4\<br>y \geq 2<br>$$</p><ul><li><p>求 $\text{max} \ x+y$</p><p>令 $x+y=z$, 则 $x=z-y$<br>带入原规划问题<br>$$<br>\text{max} \ z\<br>\text{s.t.} \ 8z-5y \leq 24\<br>5z+2y \leq 35\<br>-z+y \leq 4\<br>y \geq -2<br>$$<br>将 $y$ 视作不等式组的未知数:<br>$$<br>\begin{cases}<br>8/5z-24/5 \leq y\<br>y \leq 35/2-5/2z\<br>y \leq 2+z/2\<br>-2\leq y<br>\end{cases}<br>$$</p><p>then: $\text{max}\ {-2,8/5z-24/5} \leq \text{min}\ {35/2-5/2z,2+z/2}$<br>$$<br>\begin{cases}<br>-2 \leq 35/2-5/2z\<br>8/5z-24/5 \leq 35/2-5/2z\<br>8/5z-24/5 \leq 2+z/2\<br>-2 \leq 2+z/2<br>\end{cases}<br>$$</p><p>解的 $z \leq \frac{223}{41}$, 则 $\text{max} \ z = \frac{223}{41}$</p></li><li><p>第三个约束条件改为 $-x+y \leq -7$ , 是否有解</p></li></ul><p>$$<br>\begin{cases}<br>8/5z-24/5 \leq y\<br>y \leq 35/2-5/2z\<br>y \leq -7/2+z/2\<br>-2\leq y<br>\end{cases}<br>$$</p><p>​then: $\text{max}\ {-2,8/5z-24/5} \leq \text{min}\ {35/2-5/2z,-7/2+z/2}$<br>$$<br>\begin{cases}<br>-2 \leq 35/2-5/2z\<br>8/5z-24/5 \leq 35/2-5/2z\<br>8/5z-24/5 \leq -7/2+z/2\<br>-2 \leq -7/2+z/2<br>\end{cases}<br>$$<br>​得：$3 \leq z,z\leq 13/11$, 无解</p><p>推导及证明有误之处欢迎批评指正~</p>]]></content>
    
    
    <summary type="html">使用Fourier-Motzkin消去法解线性规划或不等式</summary>
    
    
    
    <category term="math" scheme="https://jingvc.com/categories/math/"/>
    
    
    <category term="数学规划" scheme="https://jingvc.com/tags/%E6%95%B0%E5%AD%A6%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>线性规划中的等价性证明</title>
    <link href="https://jingvc.com/post/efcb.html"/>
    <id>https://jingvc.com/post/efcb.html</id>
    <published>2023-03-27T00:00:00.000Z</published>
    <updated>2023-03-31T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>参考书目：</strong></p><blockquote><p>[1] 数学规划与组合优化. 浙江大学出版社, 2001. [Online]. Available: <a href="https://books.google.com.sg/books?id=ZmSSAAAACAAJ">https://books.google.com.sg/books?id=ZmSSAAAACAAJ</a></p><p>[2] 组合优化与博弈论. 浙江大学出版社, 2015. [Online]. Available: <a href="https://books.google.com.sg/books?id=6w44swEACAAJ">https://books.google.com.sg/books?id=6w44swEACAAJ</a></p></blockquote><h2 id="线性规划标准形转化">线性规划标准形转化</h2><h3 id="标准形及转化：">标准形及转化：</h3><ul><li><p><strong>目标函数最小化 $\min$</strong>, 若原规划问题为最大化 $\max$, 可取负号转化为 $\min$</p></li><li><p><strong>约束条件为等式约束 </strong>, <font color=blue> 若原规划问题的约束条件为不等式</font>, 可以通过引入松弛变量将不等式转化为等式；</p><p>$\leq$ 需加上引入的松弛变量, $\geq$ 需减去引入的松弛变量；</p><p>​$eg:$<br>$$<br>s.t. \  \   \sum_{j=1}^{n}a_{ij}x_j \leq b_i<br>$$<br>​$\Rightarrow$      引入松弛变量 $s_i$     $s.t. \  \   \sum_{j=1}^{n}a_{ij}x_j+s_i = b_i$    $s_i \geq 0 (i=1,2,3,…,m)$<br>$$<br>s.t. \  \   \sum_{j=1}^{n}d_{ij}y_j \geq b_i<br>$$<br>​$\Rightarrow$      引入松弛变量 $v_i$     $s.t. \  \   \sum_{j=1}^{n}d_{ij}y_j-v_i = b_i$    $s_i \geq 0 (i=1,2,3,…,m)$</p><p>约束条件右端常数项 $b_i\geq0$ , 若 $b_i \leq 0$, 可取 $-b_i$</p></li><li><p><strong>决策变量非负 </strong>, <font color=blue> 若决策变量 $x_i \leq 0$ </font> , 可定义新的决策变量 $x_j=-x_i$；<font color=blue>若决策变量无范围限制</font>, 可引入两个非负决策变量 $x_i^+$ , $x_i^-$ $\Rightarrow$ $x_i=x_j^±x_i^-$  , $s.t. \ \ x_i^+,x_i^- \geq 0$</p></li></ul><h3 id="实例">实例</h3><p>​$eg:$<br>​<em>一种商品在一年中四个季度的 <font color=blue> 单件价格分别为 $p_i\ , \ \ i=1,2,3,4$ , </font>一家仓库可容纳 $C$ 件商品。每件商品在仓库中每存放一个季度的存储费用为 $s$ 。现仓库准备通过低价买进、高价售出的方式获取最大利润。试建立数学规划模型, 确定仓库在 <font color=blue> 每年初 </font> 的存货量和每季度的买卖数量。若建立的数学规划为线性规划, 试将其转化为标准型。</em></p><p><strong>解：$</strong></p><p><em><font color=blue>Tips：</font></em></p><ul><li><p>$p_i$ 为市场价格, 该商品需要以此价格在市场进行买入和卖出, 题目中的利润最大化与“择时”有点像；</p></li><li><p>商品成本：购买成本 + 仓储成本 $Cost=\sum_{i=1}^4(x_{i-1}-y_{y-1})s+x_ip_i$, 其中 $y_0=0$；</p><p>商品营利：卖出所得 $Return=\sum_{i=1}^4 y_i p_i$;</p></li><li><p>约束条件：仓库容纳量 $C$ ;</p></li><li><p>隐含条件：年末剩余量与年初存量相等</p></li></ul><p>$\Rightarrow$ <strong>优化问题建模：</strong></p><p>设: 每年初存货量为 $x_0$, 每季度买入数量为 $x_i$, 卖出数量为 $y_i$, 利润为 $R$<br>$$<br>\max R=\sum_{i=1} ^4 y_i p_i-(x_ {i-1}-y_{i-1} )s-x_ip_i<br>$$<br>$$<br>s.t. \ \ x_0 \leq C<br>$$<br>$$<br>x_0+\sum_{i=1}^n(x_i-y_i) \leq C ,\ \ n=1,2,3,4<br>$$<br>$$<br>x_0+\sum_{i=1}^n(x_i-y_i) \geq 0 ,\ \ n=1,2,3,4<br>$$<br>$$<br>x_i,y_i \geq 0 ,\ \ i=1,2,3,4<br>$$<br>$$<br>x_0 \geq 0<br>$$<br>$$<br>y_0=0<br>$$<br>$\Rightarrow$ <strong>标准形转化：引入松弛变量 $z_i$</strong><br>$$<br>W=-R<br>$$<br>$$<br>\min W=(x_ {i-1}-y_{i-1} )s+x_ip_i-\sum_{i=1} ^4 y_i p_i<br>$$<br>$$<br>s.t. \ \ x_0+z_1 = C<br>$$<br>$$<br>x_0+\sum_{i=1}^n(x_i-y_i)+z_{i+1} = C ,\ \ n=1,2,3,4<br>$$<br>$$<br>x_0+\sum_{i=1}^n(x_i-y_i)-z_{i+4} = 0 ,\ \ n=1,2,3,4<br>$$<br>$$<br>x_i,y_i \geq 0 ,\ \ i=1,2,3,4<br>$$<br>$$<br>x_0 \geq 0<br>$$<br>$$<br>y_0=0<br>$$<br>$$<br>z_i \geq 0 , \ \ i=1,2,3,4,5,6,7,8,9<br>$$</p><blockquote><p><font color=skyblue><b>松弛变量：</b></font>指在线性规划中引入的一种人工变量, 用于将不等式约束转化为等式约束</p></blockquote><h2 id="标准形转化前后的等价性证明">标准形转化前后的等价性证明</h2><h3 id="证明两个线性规划等价">证明两个线性规划等价</h3><p>​<font color=blue>两个线性规划解的情况是相同的, 当且仅当约束条件和目标函数是等价的。</font></p><ul><li>两个规划问题的可行域相同, 即约束条件是等价的, 可以将一个问题的约束条件转化为另一个问题的约束条件；</li></ul><p>​$eg:$</p><p>​式约束转化为不等式</p><p>​不等式约束转化为等式约束 $\Rightarrow$  引入松弛变量或人工变量</p><p>​限制条件转化为非负条件$\Rightarrow$  将变量分解负部和正部</p><ul><li>两个规划问题的目标函数相同, 可以将一个问题的目标函数转化为另一个问题的目标函数；<br>​$eg:$</li></ul><p>​最大化目标函数与最小化目标函数之间的正负变换</p><h3 id="实例 -2">实例</h3><p>​<em>设有线性规划<br>​$\min \sum^n_{j=1} c_j x_j$<br>​$\text{s.t.} \sum^n_{j=1}a_{ij}x_j=b_i$    $i=1,2,…,m$<br>​试将其转化为含 <font color=skyblue>$n+1$</font> 个非负变量的等价线性规划</em></p><p><strong>解：</strong></p><p>​<em><font color=blue>Tips：</font></em></p><ul><li>该规划问题中决策变量缺少范围限制, 可将变量分解为正部与负部, 转化为非负约束, 但转化前后的变量数量需要进一步思考；</li><li>其次是需要说明转化前后的等价性；</li></ul><p>$\Rightarrow$ 引入新的决策变量 $x_j^+$ 及 $x^-$ , $then$  $x_j=x_j^{+} -x^-$ , n 个变量 $x_j^+$ 共用一个负部 $x^-$  , 其中 $x_j^+,x^- \geq 0$</p><p>​<em>(若不共用一个负部, 而是分解为 $x_j^+,x_j^-$ , 变量数量会变成 $2n$ 个, 与题目要求不符)</em><br>$$<br>x_j=x_j^{+} - x^-<br>$$</p><p>$$<br>\min \sum_{j=1}^n c_j(x_j^{+} - x^-)<br>$$</p><p>$$<br>s.t. \ \ \sum_{j=1}^n a_{ij} (x_j^{+} - x^-) = b_i , \ \ i=1,2,…,m<br>$$</p><p>$$<br>x_j^+ , x^- \geq 0<br>$$</p><p>$\Rightarrow$ 使用连加号不方便证明等价性</p><p>​<strong>原式：</strong><br>$$<br>\min  c_1 x_1+c_2 x_2+…+c_n x_n<br>$$<br>$$<br>s.t. \ \ a_{11}x_1+a_{12}x_2+…+a_{1n}x_n=b_1<br>$$<br>$$<br>a_{21}x_1+a_{22}x_2+…+a_{2n}x_n=b_2<br>$$<br>$$<br>…<br>$$<br>$$<br>a_{m1}x_1+a_{1m2}x_2+…+a_{mn}x_n=b_m<br>$$</p><p>​<strong>转化后：</strong><br>$$<br>\min c_1(x_1^{+} - x_1^-)+c_2(x_2^{+} - x_2^-)+…+c_n(x_n^{+} -x_n^-)<br>$$<br>$$<br>s.t. \ \ a_{11} (x_1^{+} - x_1^-)+a_{12}(x_2^{+} - x_2^-)+…+a_{1n}(x_n^{+} - x_n^-)=b_1<br>$$<br>$$<br>a_{21} (x_1^{+} - x_1^-)+a_{22}(x_2^ {+} - x_2^-)+…+a_{2n}(x_n^{+} - x_n^-)=b_2<br>$$<br>$$<br>…<br>$$<br>$$<br>a_{m1} (x_1^{+} - x_1^-)+a_{m2}(x_2^{+} - x_2^-)+…+a_{mn}(x_n^{+} - x_n^-)=b_m<br>$$</p><p>​<font color=blue>$Then$</font><br>$$<br>x_1^{+} - x^- = \frac{b_1-a_{12}x_2-…-a_{1n}x_n } {a_ {11} } = x_1<br>$$<br>$$<br>x_2^{+} - x^- = \frac{b_2-a_{21}x_1-…-a_{2n}x_n } {a_ {22} } = x_2<br>$$<br>$$<br>…<br>$$<br>$$<br>x_n^{+} - x^- = \frac{b_n-a_{n2}x_2-…-a_{nn}x_n } {a_ {nn} } = x_n<br>$$</p><p>​将其带入转化后的目标函数</p><p>$$<br>\min  c_1(\frac{b_1-a_{12}x_2-…-a_{1n}x_n } {a_ {11} } )+c_2(\frac{b_2-a_{21}x_1-…-a_{2n}x_n } {a_ {22} })+…+c_n(\frac{b_n-a_{n2}x_2-…-a_{nn}x_n } {a_ {nn} } )<br>$$<br>目标函数的最优值同时满足原始规划问题与转化后规划问题的可行域(约束条件), 转化后的最优值同时也是原始规划问题的最优值；</p><h4 id="变量共用一个负部">变量共用一个负部</h4><blockquote><p>在数学中, 如果多个变量共用一个负部, 通常意味着它们共享相同的约束条件或限制条件。这通常在线性规划或最优化问题中使用, 其中变量需要满足一些限制条件以使目标函数最小或最大化。共享相同的负部可以简化问题的表示和求解过程, 使得问题更容易理解和解决。</p></blockquote><p>推导及证明有误之处欢迎批评指正~</p>]]></content>
    
    
    <summary type="html">线性规划的标准形转化, 证明转化前后的等价性</summary>
    
    
    
    <category term="math" scheme="https://jingvc.com/categories/math/"/>
    
    
    <category term="数学规划" scheme="https://jingvc.com/tags/%E6%95%B0%E5%AD%A6%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>骑行记</title>
    <link href="https://jingvc.com/post/dbd4.html"/>
    <id>https://jingvc.com/post/dbd4.html</id>
    <published>2023-03-12T00:00:00.000Z</published>
    <updated>2023-05-02T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>2023 年 3 月份，入手了一辆迪卡侬 Riverside 500🚲，这辆车兼具了山地车（前轮减震）与公路车（窄轮）的部分特点，完全可以满足日常通勤与休闲骑行的需求，之前都是骑共享单车“小蓝”外出，最远的一次是西湖区骑到了萧山区，从晚上 21:00 到凌晨 1:00 大概是 27km，平常也偶尔从西湖或玉泉骑共享单车回紫金港。</p><p> 周末的户外骑行可以逐渐提上日程了嘞，以休闲为主，先按教程打卡一些成熟的线路，后面可能就是自由随心所欲的骑，做一些线路的开发。🤣</p><h2 id="1st">1st</h2><h3 id="华家池——紫金港校区休闲骑行线"> 华家池——紫金港校区休闲骑行线 </h3><p><strong> 线路：</strong> 环城北路—莫干山路—花园岗街—龙宇街（参考高德地图）</p><p><strong> 特点：</strong> 城市道路为主，环城北路与莫干书路红绿灯较多，非机动车道路上车也偏多，尤其是武林门附近；莫干山后半段及花园岗街都是路宽、人少，可快速通过。</p><p><strong> 缘起：</strong> 向华家池校区的前辈买的车，交易完便从华家池骑回紫金港了，全程 14km，用时大概 1h10min。</p><p>（骑了 3km 后才想起来手表记录😅）</p><p><img src="https://blog.jingvc.com/pic/1192f05d12af16a53550bf4c62abceb.jpg?x-oss-process=style/Comprass_Copyright" alt="户外骑行"></p><h2 id="2nd">2nd</h2><h3 id="环西溪湿地骑行线，可窥五常湿地与西湖群山之一角"> 环西溪湿地骑行线，可窥五常湿地与西湖群山之一角 </h3><p><strong> 全程：</strong> 19KM</p><p><strong> 线路：</strong> 蒋墩路——文二西路——荆长路——无常大道——天目山路——紫金港路——文二西路——蒋墩路 </p><p><strong> 体验：</strong> 零碎的风景，来也匆匆、去也匆匆，五常湿地旁的油菜花田、西溪路的樱花树、荆长路与天目山路的宽敞与自由，还有远处雾蒙蒙的西湖群山。</p><p> 不论多少公里，不论多少风雨，太阳照常升起。</p><p><img src="https://blog.jingvc.com/pic/de440fc126453cd12de3219d4b6c59f.jpg?x-oss-process=style/Comprass_Copyright" alt="户外骑行"></p><h2 id="3rd">3rd</h2><h3 id="环西湖线，览湖畔风光"> 环西湖线，览湖畔风光 </h3><p><strong> 全程：</strong> 40KM</p><p><strong> 线路：</strong> 紫金港——南山街——杨公堤——北山街——玉泉——紫金港 </p><p><strong> 体验：</strong> 整条线路还是城市风景为主，南山街附近的延安路等人多车多，只能慢慢骑，需要经常刹车；杨公堤和北山街骑行体验超级赞，虽然路比较窄，但也只是机动车在堵，沿途都是高大的古树，旁边便是西湖，速度也可以提上来，骑爽了。</p><p>（PS：中远程骑行一定要戴头盔，不仅是安全问题，更避免天上直接往脸上掉脏东西😅）</p><p><img src="https://blog.jingvc.com/pic/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230331193537.jpg?x-oss-process=style/Comprass_Copyright" alt="户外骑行"></p><h2 id="4th">4th</h2><h3 id="环湘湖线，沐浴风和阳光"> 环湘湖线，沐浴风和阳光 </h3><p><strong> 全程：</strong> 80KM</p><p><strong> 线路：</strong></p><p>​紫金港——玉泉——陆游纪念馆——西兴大桥——风情大道——湘浦路——湘湖路湘湖七彩绿道——越王路——钱塘江大桥——虎跑路——杨公堤——玉泉——紫金港 </p><p><strong> 体验：</strong></p><p> 五一西湖附近人很多，骑车的速度相对会慢一些；在钱塘江的跨江大桥上骑行体验很棒，骑车的空间很窄，但江上的视野很宽广，江岸的建筑与江上风景可尽收眼底；湘湖相对西湖，人就少很多了，湘湖也更加原生态一些，绿道骑行的体验很棒，值得秋天再去骑一次。</p><p><img src="https://blog.jingvc.com/pic/1c98347946b84a5e00ce2069016bc90.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p>]]></content>
    
    
    <summary type="html">休闲为主的骑行线路与骑行记录</summary>
    
    
    
    <category term="兴趣" scheme="https://jingvc.com/categories/%E5%85%B4%E8%B6%A3/"/>
    
    
    <category term="骑行" scheme="https://jingvc.com/tags/%E9%AA%91%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>花语小结🌷</title>
    <link href="https://jingvc.com/post/4fa1.html"/>
    <id>https://jingvc.com/post/4fa1.html</id>
    <published>2023-03-07T00:00:00.000Z</published>
    <updated>2023-03-08T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p> 三月八日女神节🎀要到了，正好妈妈也要来杭州出差，很幸运有此机会陪她过节，想为妈妈们准备些花，顺便整理下花语以备不时之需。</p><p> 我的选择是粉色康乃馨、太阳花混搭这两个组合😊</p><p><img src="https://blog.jingvc.com/pic/%E5%BA%B7%E4%B9%83%E9%A6%A81.jpg?x-oss-process=style/Comprass_Copyright"/><img src="https://blog.jingvc.com/pic/%E6%B7%B7%E5%90%88%E8%8A%B1%E6%9D%9F.jpg?x-oss-process=style/Comprass_Copyright"/></p><h2 id="康乃馨"> 康乃馨 </h2><p> 康乃馨体态玲珑、斑谰雅洁、端庄大方、芳香清幽，可以适应多种送花场景。康乃馨有各种各样的颜色，包括白色、粉色、黄色、红色等，每种颜色都有不同的潜在含义。</p><ul><li> 粉色康乃馨：感激、年轻、热爱等 </li><li> 淡红色康乃馨：钦佩 </li><li> 深红色康乃馨：深刻的爱 </li><li> 白色康乃馨：纯洁的爱和好运 </li><li> 条纹康乃馨：遗憾，拒绝 </li><li> 紫色康乃馨：反复无常 </li><li> 黄色康乃馨：失望，沮丧（朋友之间）</li></ul><p><img src="https://blog.jingvc.com/pic/463691.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p><h2 id="郁金香 -🌷"> 郁金香 🌷</h2><p><strong> 花语：爱的表白、荣誉、祝福、永恒 </strong></p><ul><li><p> 紫色：无尽的爱、最爱 </p></li><li><p> 白色：纯情、纯洁 </p></li><li><p> 粉色：美人、热爱、幸福 </p></li><li><p> 红色：爱的告白、喜悦 图片 </p></li><li><p> 黄色：高贵、珍重、财富 </p></li></ul><p><img src="https://blog.jingvc.com/pic/1-1678115194798-17.jpeg?x-oss-process=style/Comprass_Copyright" alt="郁金香"></p><h2 id="百合花"> 百合花 </h2><p><strong> 花语：顺利、心想事成、祝福 </strong></p><ul><li><p> 白色：象征百年好合、持久的爱 </p></li><li><p> 粉色：象征清纯、高雅 </p></li><li><p> 黄色：象征财富、高贵 </p></li></ul><p><img src="https://blog.jingvc.com/pic/b03533fa828ba61e2a4dd8a04b34970a314e5999.jpg?x-oss-process=style/Comprass_Copyright" alt="百合花"></p><h2 id="太阳花"> 太阳花 </h2><p><strong> 花语：</strong> 勇敢热烈、坚韧坚强、光明 </p><p> 太阳花是一年生的草本植物，每年的 6 到 9 月之间会开花。花色丰富多样，常见红色、白色、黄色、紫色、橙黄色等等。花朵虽小，但是花量大，花姿优美，花期有较高的观赏价值。</p><ul><li><p> 勇敢热烈：太阳花的花语为勇敢热烈。给人一种充满阳光、充满朝气、勇敢乐观的感觉。</p></li><li><p> 坚韧坚强：太阳花的生命力旺盛，适应能力强，即便处在恶劣的环境下依然能旺盛生长，还会开放美丽的花朵。</p></li><li><p> 向往光明：太阳花是非常喜欢太阳的，生长不能离开太阳，因此还代表了向往光明，向往太阳的意思。</p></li><li><p> 沉默的爱：太阳花的花语还为沉默的爱。因为它默默地生长在路边，默默发挥自己的价值。</p></li></ul><p><img src="https://blog.jingvc.com/pic/O1CN01yX4hK722OQcXclfZx_!!130397110.jpg?x-oss-process=style/Comprass_Copyright" alt="太阳花"></p><h2 id="玫瑰花🌹"> 玫瑰花🌹</h2><p> 玫瑰是不可缺席的老选手，送花不会出错的保险选项，不同颜色的玫瑰也有着不同的内涵。</p><ul><li> 红玫瑰：热烈的爱 </li></ul><p> 红玫瑰是表达爱意最为常见的花束了，但也因为常见，所以不容易出彩，属于比较稳重扎实的送花选项，更适合在重大节日如情人节、生日、求婚、结婚纪念日等场合赠送。</p><ul><li> 白玫瑰：纯洁无暇 </li></ul><p> 白玫瑰是玫瑰中的「白月光」，最为常见的场合是婚礼和葬礼，自带一种圣洁的美感。与红玫瑰相比，白玫瑰文静、秀丽、温柔。</p><p>👉👉👉<a href="https://sspai.com/post/78202"> 详见玫瑰花特辑 </a></p>]]></content>
    
    
    <summary type="html">从种类和颜色等方面了解花和花语</summary>
    
    
    
    <category term="兴趣" scheme="https://jingvc.com/categories/%E5%85%B4%E8%B6%A3/"/>
    
    
    <category term="花语" scheme="https://jingvc.com/tags/%E8%8A%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>二极管进阶之路</title>
    <link href="https://jingvc.com/post/78a6.html"/>
    <id>https://jingvc.com/post/78a6.html</id>
    <published>2023-03-03T00:00:00.000Z</published>
    <updated>2023-05-06T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>这学期选修了电子工程训练作为劳育课, 虽是全新领域但看着还是蛮好玩的, 希望可以坚持到底, 学到新的知识与技能~</p><h2 id="实验一 - 电子元器件识别">实验一 电子元器件识别</h2><details class="folding-tag"><summary> 知识汇总 </summary>              <div class='content'>              <p>讲义 &amp; 网络资料整理汇总, 实验报告主要也是 markdown 写的, 同步到网站也是很方便的 </p><h3 id="电子元件及特点"> 电子元件及特点 </h3><p> 电子元件通常指电阻器, 电容器, 电位器, 电感器, 变压器等无源元件。</p><h4 id="电阻器">电阻器 </h4><p> 电子器是电子电路中应用最多的元件之一 </p><p><strong> 主要用途 </strong></p><p> 稳定和调节电路中的电流和电压, 其次还可以作为分流器, 分压器和消耗电能的负载等；</p><p><strong>分类 </strong></p><ul><li><p> 按结构形式可分为：普通电阻器, 片形电阻器, 线绕电阻器, 可变电阻器 (电位器)。</p></li><li><p> 按材料可分为：合金型, 薄膜型和合成型。</p></li><li><p>按用途可分为：普通型, 精密型, 高频型, 高压型, 敏感型,</p></li></ul><p><strong>主要技术参数 </strong></p><ul><li><p> 标称阻值：为了便于生产与实际需要, 国家规定了一系列阻值作为产品标准, 称为电阻的标称值 $R_R$</p></li><li><p>允许误差（精度）：受生产工序影响, 电阻器与标称值无法完全一致, 存在一定离散性, 对此给出允许误差表示电阻器的阻值精度, 通常采用 E 系列；</p></li><li><p>额定功率：电阻器常温下所允许承受的最大功率, 实际使用不允许超过次功率, 避免升温被烧毁；</p></li><li><p>最高工作电压：电阻器能承受的最高电压；</p></li><li><p>温度：电阻值随温度的变化而变化, 电阻器的温度系数与电阻材料及基体材料的温度特性有关；</p></li><li><p>噪声：指产生于电阻中的一种不规则的电压起伏, 包括电流噪声与热噪声；</p></li></ul><p><strong>标注 </strong></p><ul><li><p> 直标法：文字直接标注型号, 功率, 阻值和误差；</p></li><li><p>色环标注法：四色环或五色环表示阻值和误差的大小；</p></li><li><p>数字倍乘法: $a,b,c=ab \times 10^c$</p></li></ul><h4 id="电位器">电位器 </h4><p> 是阻值可调的电阻用 RP 表示；</p><p><strong>主要参数 </strong></p><ul><li><p> 标称值：同上 </p></li><li><p> 额定功率：同上 </p></li><li><p> 阻值变化规律：滑动端与一固定端间的阻值随触点位置变化的规律, 有直线式, 指数式及对数式；</p></li><li><p>滑动噪声：滑动端与固定端的电压出现无规则的起伏现象；</p></li><li><p>分辨率；对输出量可实现的最精细的调节能力；</p></li></ul><h4 id="电容器">电容器 </h4><p> 储存电荷的容器。</p><p><strong>分类 </strong></p><ul><li><p> 气体介质电容器: 主要有空气电容器, 真空电容器等。</p></li><li><p>液体介质电容器: 主要有油浸电容器。</p></li><li><p>无机固体介质电容器: 云母电容器, 陶瓷电容器, 玻璃釉电容器。</p></li><li><p>有机固体介质电容器: 有纸质电容器, 涤纶电容器, 聚酯电容器等。</p></li><li><p>电解电容器: 按电解质的形态, 又分为液式和干式两种, 按阳极材料可分为铝电解, 钽电解, 铌电解等。电解电容的电极有 +,- 之分。</p></li></ul><p><strong>主要参数 </strong></p><ul><li><p> 标称容量 </p></li><li><p> 额定电压：耐压值, 电容长期工作的最高电压；</p></li><li><p>绝缘耐压 </p></li><li><p> 电容器的损耗 </p></li><li><p> 绝缘电阻 </p></li><li><p> 电容温度系数 </p></li></ul><p><strong> 标注 </strong></p><ul><li><p> 直接标注法 </p></li><li><p> 传统标注法：数值大于 1 的以 pF 为单位, 小于 1 是µF 为单位；</p></li><li><p>数码标注法：有效数字及倍率 </p></li></ul><p><strong> 常用功能 </strong></p><ul><li><p> 滤波：滤除直流电中的交流成分；</p></li><li><p>耦合：阻断直流, 仅让交流信号通过；</p></li><li><p>旁路：使支路交流短路, 或该节点交流对地短路；</p></li><li><p>中和：抑制三极管间造成的自然振荡；</p></li><li><p>退耦：防止由电源内阻形成的正反馈而引起的寄生振荡；</p></li><li><p>调谐：选择振荡频率的作用；</p></li><li><p>定时：时间常数电路中与电阻共同决定放电时间；</p></li></ul><h4 id="电感器">电感器 </h4><p> 在绝缘骨架上绕制单层或多层导线构成, 又叫电感线圈；</p><p><strong>分类 </strong></p><ul><li><p> 一类是应用自感作用的线圈 </p></li><li><p> 另一类是应用互感作用的变压器 </p></li></ul><p><strong> 作用 </strong></p><ul><li><p> 作为线圈: 主要作用是滤波, 聚焦, 偏转, 延迟, 补偿, 与电容配合用于调谐, 陷波, 选频, 震荡 </p></li><li><p> 作为变压器: 主要用于耦合信号, 变压, 阻抗匹配等 </p></li></ul><p><strong> 主要性能指标 </strong></p><ul><li><p> 电感量：指电感器通过变化电流时产生感应电动势的能力；</p></li><li><p>品质因数（Q 值）：反应传输能量的本领；</p></li><li><p>额定电流：线圈中允许通过的最大电流；</p></li><li><p>固有电容：线圈的匝与匝间, 线圈与底板间, 线圈与屏蔽罩间, 多层绕组的层与层间等存在着分布电容, 称为固有电容；</p></li></ul><p><strong>常用电感器 </strong></p><p> 色环电感, 扼流线圈, 贴片电感, 共模电感, 磁珠电感；</p><h3 id="电子器件及特点">电子器件及特点 </h3><p> 电子器件通常指半导体二极管, 三极管, 各类集成电路, 各类电子管等有源器件。</p><h4 id="晶体二极管">晶体二极管 </h4><p> 本质上就是一个 PN 结, 最主要特性是单向导电性: 加正偏电压, 导通, 加反偏电压, 截止。</p><p>此外, 由于二极管的结电容随反偏电压大小而变化, 可用于电调谐; 反向击穿电压几乎恒定不变, 可用于稳压。</p><p><strong>主要参数 </strong></p><ul><li><p> 最大整流电流 IoM：指允许通过的最大平均电流, 由制造材料和 PN 结面积决定 </p></li><li><p> 最大反向 (峰值) 工作电压 VRM：允许承受的最大反偏电压, 由半导体材料和掺杂浓度决定。</p></li><li><p>反向漏电流 I：反映二极管的单向导电性能, 受温度的影响较大。</p></li><li><p>最高工作频率：由于 PN 结存在结电容, 当信号频率高于某一值后, 信号通过结电容直通, 不再具有单向导电性。</p></li><li><p>结电容：二极管的极间电容, 包括势垒电容和扩散电容。</p></li></ul><p><strong>分类 </strong></p><ul><li><p> 按材料不同可分为: 锗二极管, 硅二极管, 砷化镓二极管等;</p></li><li><p>按结构特点不同可分为: 点接触型, 面接触型, 平面型等;</p></li><li><p>按用途不同可分为: 整流二极管, 检波二极管, 稳压二极管, 变容二极管, 开关二极管, 隧道二极管, 发光二极管等。</p></li></ul><h4 id="晶体三极管">晶体三极管 </h4><p> 晶体三极管又称双极型晶体管或半导体三极管。在模拟电子电路中三极管主要作为放大元件来使用, 而在数字电路中三极管主要作为开关元件来应用。</p><p>三极管工作状态：截止, 放大, 饱和；</p><p><strong>分类 </strong></p><ul><li><p> 三极管按结构分为点接触型和面接触型;</p></li><li><p>按材料分为硅管和锗管; 按工作频率分为低频管, 高频管等;</p></li><li><p>按功率分为小功率, 中功率, 大功率 3 类;</p></li><li><p>按功能和用途分为放大管, 开关管, 高反压管, 低噪声管等;</p></li><li><p>按内部极性结构分为 PNP 型和 NPN 型 2 类。</p></li></ul><p><strong>主要参数 </strong></p><ul><li><p> 电流放大系数：包括直流电和交流电放大系数；</p></li><li><p>特征频率：三极管共发射极电流下降到 1 时的频率值；</p></li><li><p>极间反向电流 </p></li><li><p> 极限参数 </p></li></ul><h4 id="集成电路"> 集成电路 </h4><p> 在一个芯片上制作了很多个电子元器件, 并连接成一个具有一定功能的电子电路。</p><p>按处理信号形式分为模拟 IC , 数字 IC 和混合 IC 。</p><p>按功能可分为多类: 如运算放大器, 计数器, 译码器, 等等。</p><p>集成电路的有多种封装形式: 单列直插式 (SIP), 双列直插式(DIP), 贴片封装等。</p><h3 id="电阻色环标注方法及各色环的含义"> 电阻色环标注方法及各色环的含义 </h3><p> 小功率碳膜和金属膜电阻, 一般都用四色环或五色环表示其阻值和精度（误差）；单位：欧Ω</p><ul><li>四色环：电阻上共有 4 条色环, 前 2 条表示阻值的有效数字, 第 3 条表示倍率, 最后 1 条表示误差大小；</li></ul><p>有效数字 a, b 倍率 c 及误差 d, 阻值为：<br>$$<br>ab \times 10^c \pm d \ \ persent<br>$$</p><ul><li>五色环：前 3 条表示阻值的有效数字, 第 4 条表示倍率, 最后 1 条表示误差大小。</li></ul><p>有效数字 a, b, c  倍率 d 及误差 e, 阻值为：<br>$$<br>abc \times 10^d \pm e \ \ persent<br>$$<br>不同颜色代表不同的数字, 通常使用金色或棕色代表精度（误差）</p><p><img src="https://blog.jingvc.com/pic/clip_image011.jpg?x-oss-process=style/Comprass_Copyright" alt="img"></p><h3 id="电容数字标注方法">电容数字标注方法 </h3><p> 通常采用三位数码表示, 前两位表示有效数字, 第三位数表示有效数字乘以 10 的幂次, 单位为 pF, 如 201 表示 200pF。容量有小数的电容一般用字母表示小数点, 如 lp5 表示 1.5pF。</p><p>数码表示法有一种特例, 就是第三位若是 9, 则电容量是前两位有效数字乘以 $10^{-1}$, 如 229 表示 $22 \times 10^{-1}$</p>              </div>            </details><details class="folding-tag"><summary> 器件识别 </summary>              <div class='content'>              <h4 id="指出下列元件为何种元件 - 参数如何">指出下列元件为何种元件, 参数如何 </h4><p>(1)</p><p><img src="https://blog.jingvc.com/pic/image-20230303202431262.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303202431262"></p><p> 瓷片电容, 容量 $300pF$</p><p>(2)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203229304.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203229304"></p><p>瓷片电容, 容量 $220pF$</p><p>(3)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203240227.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203240227"></p><p>瓷片电容, 容量 $68 \times 10^3pF$</p><p>(4)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203252855.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203252855"></p><p>瓷片电容, 容量 $22 \times 10^2pF$</p><p>(5)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203302279.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203302279"></p><p>瓷片电容, 容量 $15 \times 10^2pF$</p><p>(6)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203312080.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203312080"></p><p>瓷片电容, 容量 $10^5pF$</p><p>(7)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203323054.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203323054"></p><p>瓷片电容, 容量 $56 \times 10^2pF$</p><p>(8)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203336160.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203336160"></p><p>瓷片电容, 容量 $10^4pF$</p><p>(9)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203355195.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203355195"></p><p>云母电容, 容量 $0.47 \mu F$, 只能在交直流 $63V$ 下使用（工作电压）</p><p>(10)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203406572.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203406572"></p><p>电解电容, 容量 $22 \mu F$, 工作电压 $16V$</p><p>(11)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203417414.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203417414"></p><p>电解电容, 容量 $2.2 \mu F$, 工作电压 $50V$</p><p>(12)</p><p><img src="https://blog.jingvc.com/pic/image-20230303203426266.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303203426266"></p><p>电解电容, 容量 $33 \mu F$, 工作电压 $25V$</p><h4 id="读出电阻的阻值及误差">读出电阻的阻值及误差 </h4><p>persent 为百分号, 代表精度</p><p>(1)</p><p><img src="https://blog.jingvc.com/pic/image-20230303204611003.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303204611003"></p><p> 阻值: $330 \times 10^0=330 \pm 1 \ persent \  \Omega$</p><p>(2)</p><p><img src="https://blog.jingvc.com/pic/image-20230303204912622.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303204912622"></p><p>阻值: $560 \times 10^0=560 \pm 1  \ \ persent\  \Omega$</p><p>(3)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205212525.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205212525"></p><p>阻值: $300 \times 10^{-2}=3 \pm 1 \ \ persent\  \Omega$</p><p>(4)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205359087.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205359087"></p><p>阻值: $430 \times 10^3=430 \pm 1 \ \ persent\  K\Omega$</p><p>(5)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205408787.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205408787"></p><p>阻值: $620 \times 10^{-1}=62 \pm 1 \ \ persent\  \Omega$</p><p>(6)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205418508.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205418508"></p><p>阻值: $510 \times 10^2=51 \pm 1 \ \ persent\  K\Omega$</p><p>(7)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205429108.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205429108"></p><p>阻值: $910 \times 10^0=910 \pm 1 \ \ persent\  \Omega$</p><p>(8)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205438241.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205438241"></p><p>阻值: $221 \times 10=2210 \pm 1 \ \ persent\  \Omega$</p><p>(9)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205448756.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205448756"></p><p>阻值: $680 \times 10^2=68 \pm 1 \ \ persent\  K\Omega$</p><p>(10)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205502814.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205502814"></p><p>阻值: $240 \times 10^3=240 \pm 1 \ \ persent \  K\Omega$</p><p>(11)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205510546.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205510546"></p><p>阻值: $820 \times 10^3=820 \pm 1 \ \ persent \  K\Omega$</p><p>(12)</p><p><img src="https://blog.jingvc.com/pic/image-20230303205518040.png?x-oss-process=style/Comprass_Copyright" alt="image-20230303205518040"></p><p>阻值: $270 \times 10^0 = 270 \pm 1 \ \ persent \  \Omega$</p>              </div>            </details><h2 id="实验二 - 电路板焊接（直插器件）">实验二 电路板焊接（直插器件）</h2><p>学习使用焊接工具, 焊接材料, 在焊盘焊接元器件引脚。</p><details class="folding-tag"><summary> 幸运转盘焊接 </summary>              <div class='content'>              <h3 id="原始器件">原始器件 </h3><p><img src="https://blog.jingvc.com/pic/image-20230311000419159.png?x-oss-process=style/Comprass_Copyright" alt="image-20230311000419159"></p><h3 id="成品"> 成品 </h3><p> 拿着焊枪和锡线焊接的时候手会抖, 锡脚最终有点大小不一, 不是很美观, 不过好在功能正常。</p><p><img src="https://blog.jingvc.com/pic/b608bd45fcba58c78575e7c3956a3ab.jpg?x-oss-process=style/Comprass_Copyright"/><img src="https://blog.jingvc.com/pic/85e5b92162d7ca668e6a83cd1f66e98.jpg?x-oss-process=style/Comprass_Copyright"/><img src="https://blog.jingvc.com/pic/f519a458fa7b9f518eabba72199775e.jpg?x-oss-process=style/Comprass_Copyright"/></p><p>成品效果大概就是按开关后, 随机亮一盏 LED 灯, 随后会旋转依次闪烁, 最后随机在一个 LED 灯处停下。</p>              </div>            </details><h2 id="实验三 - 常用电子仪器的使用">实验三 常用电子仪器的使用</h2><p>电源 | 信号源 | 示波器 | 万用表这四个电子仪器的学习使用略花费了些时间（同组的人也是外专业的都不太会用）, 在老师和周边大佬的指导下, 超时 1h 完成操作练习。🤣</p><details class="folding-tag"><summary> 电源 | 信号源 | 示波器 | 万用表 </summary>              <div class='content'>              <h3 id="简述直流电源 - 信号源 - 示波器的使用方法。">简述直流电源, 信号源, 示波器的使用方法。</h3><h4 id="直流电源">直流电源 </h4><p> 直流电源是一种将交流电转换为稳定直流电的设备, 其具体使用方法如下：</p><ul><li><p>确定需要的电压和电流：根据所需的电路和设备的电压和电流需求, 选择合适的直流电源。</p></li><li><p>连接电源：将直流电源的输入端连接到交流电源, 通常使用插头或电源线进行连接。需要注意的是, 要确保电源的输入电压和频率符合要求。</p></li><li><p>调整输出电压和电流：根据需要的电压和电流, 调整直流电源的输出电压和电流限制。通常可以使用旋钮或按钮来进行调节。</p></li><li><p>连接电路：将待供电的电路或设备连接到直流电源的输出端, 通常使用插头或电源线进行连接。</p></li><li><p>开启电源：启动直流电源并等待其稳定输出稳定的电压和电流。需要注意的是, 一些电源可能需要一段时间来达到稳定状态。</p></li><li><p>监测电源输出：使用万用表或示波器等测量设备, 监测直流电源的输出电压和电流, 确保其符合要求。</p></li><li><p>对于双路可调电源独立, 串联或并联使用, 需要调节电源的状态控制开关。</p></li></ul><h4 id="信号源">信号源 </h4><p> 信号源是一种用于产生电信号的设备, 其具体使用方法如下：</p><ul><li><p>确定所需的信号类型和参数：根据需要的实验或应用, 确定所需的信号类型和参数, 例如正弦波, 方波, 三角波等, 并确定其频率, 幅度, 相位等参数。</p></li><li><p>连接信号源：将信号源的输出端连接到待测试的电路或设备, 通常使用 BNC 接口或电源线进行连接。需要注意的是, 要确保信号源的输出符合待测试设备的要求。</p></li><li><p>调整信号参数：使用信号源的控制器或旋钮, 调整信号的频率, 幅度, 相位等参数, 以获得所需的信号形式和特性。</p></li><li><p>开始测试：启动待测试的电路或设备, 并监测信号源的输出, 观察信号的波形, 频率, 幅度等特性, 并进行相关的实验或测试。</p></li><li><p>分析结果：根据测试结果, 分析信号的特性和性能, 并进行相关的数据处理和分析。</p></li></ul><h4 id="示波器">示波器 </h4><p> 示波器是一种用来观察电信号的仪器, 它可以显示电信号的波形, 频率, 幅度等信息。下面是示波器的具体使用方法：</p><ul><li><p>连接电路：将待测电路的信号端连接到示波器的输入通道, 通常使用 BNC 接口连接, 需要选择合适的探头以获得正确的测量结果。</p></li><li><p>调整示波器的垂直和水平控制：示波器的垂直控制可以调整显示信号的幅度或电压, 而水平控制可以调整显示信号的时间或频率。这些控制通常由旋钮或按钮来进行调节。</p></li><li><p>调整触发控制：示波器的触发控制可以帮助稳定显示的信号, 通常可以选择不同的触发模式和触发电平。</p></li><li><p>开始测量：启动电路并开始测量信号, 观察信号的波形, 频率, 幅度等信息, 可以进行调整以获取更准确的测量结果。</p></li><li><p>分析结果：根据测量结果, 可以进行信号分析和处理, 例如计算信号的频率, 幅度等参数, 或者比较不同信号的差异和相似性。</p></li></ul><h3 id="说明使用数字万用表的注意事项。">说明使用数字万用表的注意事项。</h3><ul><li>测试前先明确所要进行测量的项目, 将功能（量程）开关旋置于正确档位。</li><li>根据将进行的测试项目, 把测试表笔插入相应的测试插孔中。</li><li>如果事先不知被测电量的大概范围, 则应将量程开关置于最大量程档, 并根据测量值逐渐下降量程 </li><li> 当仪表处于电流测量档位时, 严禁将测试表笔跨接于存在电压差的电路两端, 否则将造成短路而损坏仪表和被测电路。</li><li>在使用数字万用表时, 如果显示器上显示 1, 说明被测值超过该档量程最大值, 应将量程开关置于更高量程 </li><li> 万用表交流档的使用频率是 40-400Hz。</li></ul><h3 id="阐述用示波器测量交流信号时如何在屏幕上稳定地显示出信号波形（各信号的选择 - 各功能开关的操作与选择等）。">阐述用示波器测量交流信号时如何在屏幕上稳定地显示出信号波形（各信号的选择, 各功能开关的操作与选择等）。</h3><ul><li><p>选择合适的探头：根据信号的频率和幅度选择合适的探头, 通常示波器会配备不同类型的探头。</p></li><li><p>选择合适的信号输入方式：示波器可以通过不同的输入方式（如 AC/DC 耦合）来适应不同的信号类型。</p></li><li><p>调整垂直和水平控制：通过垂直和水平控制来调整信号的放大倍数和位置, 以使信号在屏幕上完整且合适的显示。</p></li><li><p>选择合适的触发方式：通过选择合适的触发方式, 如自动触发或外部触发, 以确保信号在屏幕上稳定显示。</p></li><li><p>调整触发电平和触发边沿：通过调整触发电平和触发边沿来确保信号在正确的位置和时间被捕捉并在屏幕上稳定显示。</p></li></ul><h3 id="在进行电子电路测量时 - 各仪器的信号连接线应该如何连接到电路上。">在进行电子电路测量时, 各仪器的信号连接线应该如何连接到电路上。</h3><ul><li><p>示波器探头：示波器探头应该连接到电路中需要观察的信号点。通常, 示波器探头的接地端应该连接到电路的一个地点, 例如电路板上的 GND 接线端子。</p></li><li><p>万用表探头：多用表探头可以用于测量电路中的电压, 电流等参数。在测量电压时, 一个探头应该连接到电路中的测量点, 另一个探头应该连接到电路的一个地点。在测量电流时, 可以将探头插入电路中的电流传感器或测量点, 然后连接到多用表的电流测量端口。</p></li><li><p>信号发生器输出线：信号发生器的输出线应该连接到电路中需要输入信号的位置。例如, 在测试滤波器时, 可以将信号发生器的输出线连接到滤波器的输入端。</p></li><li><p>电源连接线：电源连接线应该连接到电路中需要供电的位置。例如, 在测试放大器时, 应该将电源连接线连接到放大器的电源输入端。</p></li><li><p>在连接信号线时, 需要注意保持信号线的干净和整洁, 避免线路短路或其他损坏。确保连接线与电路中的连接端紧密接触, 避免信号失真或干扰。确保线路连接正确, 避免在测量过程中对电路造成损坏。</p></li><li><p>仪器间的相互连接 </p><ul><li><p> 如果被测量或被观察的信号幅度较小（如毫伏数量级）, 为了防止干扰, 一般需要采用屏蔽线连接。</p></li><li><p>在电子测量中, 各仪器的保护接地端（通常为仪器的外壳, 常使用黑色接线柱）必须连在一起, 而且屏蔽线的外屏敲层应接在保护接地端上。</p></li></ul></li></ul><h3 id="如何设置 - 连接直流电源以获得 -5V—OV——9V- 的电压输出。">如何设置, 连接直流电源以获得 + 5V—OV——9V 的电压输出。</h3><ul><li><p>选择一台符合要求的直流电源。通常, 直流电源可以通过旋钮或开关来选择输出电压, 也可以通过调节变压器或电阻来调整电压。</p></li><li><p>将直流电源的正极连接到 +5V 输出端, 将负极连接到 0V 输出端。这将提供一个 +5V-0V 的电压输出。</p></li><li><p>如果需要 +9V 的电压输出, 可以连接一个降压稳压器。连接稳压器时, 将稳压器的输入端连接到 +5V 输出端, 将输出端连接到 0V 输出端, 同时将稳压器的地端连接到电源输出端的地端。</p></li><li><p>根据稳压器的规格, 调整其电阻或其他参数, 以获得 +9V 的输出电压。</p></li><li><p>检查连接是否正确, 启动电源并进行测试, 确保电路工作正常。</p></li></ul><h3 id="讲义 -P-28～29- 使用操作练习。">讲义 P 28～29, 使用操作练习。</h3><h4 id="填空：">填空：</h4><p>（1）当显示示波器自身的“校准信号（1kHz 方波, Vp-p=0.5V）”时, 若要求在荧光屏上得到一个周期且幅度占据约 2div 的稳定波形, 应怎样选择下列开关的位置？注：示波器屏幕水平共 10div, 垂直共 8div。<br>A. Y 轴电压灵敏度开关置于 0.1 V/div 档位置。</p><p>​B. 扫描速度开关置于 0.1ms/div 档位置。</p><p>​C. 触发信号选择开关置于 CH1 位置。</p><p><img src="https://blog.jingvc.com/pic/ed97a081a28fed490f3ab42fc3fb955.jpg?x-oss-process=style/Comprass_Copyright" alt="ed97a081a28fed490f3ab42fc3fb955"></p><p>（2）万用表测量交流信号的适用频率范围是 40-400 Hz, 能否用来测量音频信号的大小？</p><ul><li>音频信号的频率范围大致 20HZ-20kHZ</li><li>其可用于测量 低频 (40-150Hz) 及中低频 (150-400Hz)</li></ul><h4 id="用万用表测试常用电子元件电阻 - 电容的参数 - 并记录所测数据。"> 用万用表测试常用电子元件电阻, 电容的参数, 并记录所测数据。</h4><center> 表 2.5.1 电子元件参数测量数据 </center><table><thead><tr><th style="text-align:center"> 电阻标称值 </th><th style="text-align:center"> 实际测量值 </th><th style="text-align:center"> 电容标称值 </th><th style="text-align:center"> 实际测量值 </th></tr></thead><tbody><tr><td style="text-align:center">$41\pm1%K\Omega$</td><td style="text-align:center">$43.4K\Omega$</td><td style="text-align:center">$3.3\mu F$</td><td style="text-align:center">$3.12\mu F$</td></tr><tr><td style="text-align:center">$0.56\pm1%K\Omega$</td><td style="text-align:center">$0.54K\Omega$</td><td style="text-align:center">$27\times10^2pF$</td><td style="text-align:center">$29\times10^2pF$</td></tr><tr><td style="text-align:center">$0.36\pm1%M\Omega$</td><td style="text-align:center">$0.34M\Omega$</td><td style="text-align:center">$22\times 10^4pF$</td><td style="text-align:center">$20\times10^4 pF$</td></tr><tr><td style="text-align:center">$27\pm1%\Omega$</td><td style="text-align:center">$27\Omega$</td><td style="text-align:center">$0.47\mu F$</td><td style="text-align:center">$0.51\mu F$</td></tr></tbody></table><p><img src="https://blog.jingvc.com/pic/image-20230317203903301.png?x-oss-process=style/Comprass_Copyright" alt="image-20230317203903301"></p><p><img src="https://blog.jingvc.com/pic/86f20ca1b468d5095bef400cb6898e8.jpg?x-oss-process=style/Comprass_Copyright" alt="86f20ca1b468d5095bef400cb6898e8"></p><h4 id="用万用表测量二极管和三极管的参数 - 并判断出各引脚的名称。"> 用万用表测量二极管和三极管的参数, 并判断出各引脚的名称。</h4><ul><li>二极管正向导通电压为 0.587V</li><li>三极管的放大倍数为 282</li></ul><p><img src="https://blog.jingvc.com/pic/13834aab056006fb7a672b06181d8a3.jpg?x-oss-process=style/Comprass_Copyright" alt="13834aab056006fb7a672b06181d8a3"></p><p><img src="https://blog.jingvc.com/pic/175180833ae16dec49d19959e519477.jpg?x-oss-process=style/Comprass_Copyright" alt="175180833ae16dec49d19959e519477"></p><h4 id="用示波器的“校准信号”对示波器进行自检 - 测量下列参数并记入表 2-5-2 中。">用示波器的“校准信号”对示波器进行自检, 测量下列参数并记入表 2.5.2 中。</h4><p>（1）测量校准信号的幅度。</p><p>（2）测量校准信号的频率。<br>（3）测量校准信号的上升时间和下降时间。</p><center>表 2.5.2 “校准信号”的幅度, 频率, 边沿时间测量 </center><table><thead><tr><th style="text-align:center"> 测量项目 </th><th style="text-align:center"> 标称值 </th><th style="text-align:center"> 原始读数 </th><th style="text-align:center"> 原始读数 </th><th style="text-align:center"> 计算所得实测值 </th></tr></thead><tbody><tr><td style="text-align:center"> 幅度 </td><td style="text-align:center"></td><td style="text-align:center">2.5 div</td><td style="text-align:center">0.2 V/div</td><td style="text-align:center">0.496 V</td></tr><tr><td style="text-align:center"> 频率 </td><td style="text-align:center"></td><td style="text-align:center">5.0 div</td><td style="text-align:center">0.2 ms/div</td><td style="text-align:center">993.4 Hz</td></tr><tr><td style="text-align:center"> 上升时间 </td><td style="text-align:center">————</td><td style="text-align:center">0.04 div</td><td style="text-align:center">100 $\mu s/div$</td><td style="text-align:center">4.0 $\mu s$</td></tr><tr><td style="text-align:center"> 下降时间 </td><td style="text-align:center">————</td><td style="text-align:center">0.08 div</td><td style="text-align:center">50 $\mu s/div$</td><td style="text-align:center">4.0 $\mu s$</td></tr></tbody></table><p> 注：标称值是指仪器说明书中给出的技术指标, 一般标示于信号输出端旁。原始读数是指从仪器刻度上直接读取且未加任何处理的数据。实测值是指根据原始读数计算得到的测量值。</p><p><img src="https://blog.jingvc.com/pic/a8fb1cd97076f3ebd4a15d154d5505f.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p><h4 id=" 用示波器测量信号发生器输出信号 - 正弦 - 的频率和幅度 - 并将数据记入表 2-5-3 中。">用示波器测量信号发生器输出信号 (正弦) 的频率和幅度, 并将数据记入表 2.5.3 中。</h4><center>表 2.5.3 测量信号发生器输出的频率和幅度值 </center><table><thead><tr><th style="text-align:center"> 刻度值 </th><th style="text-align:center"> 周期原始读数 </th><th style="text-align:center"> 周期原始读数 </th><th style="text-align:center"> 测量值 </th><th style="text-align:center"> 幅度原始读数 </th><th style="text-align:center"> 幅度原始读数 </th><th style="text-align:center"> 峰值测量值 </th><th style="text-align:center"> 有效值 </th></tr></thead><tbody><tr><td style="text-align:center">100Hz,2V</td><td style="text-align:center">5 div</td><td style="text-align:center">2 ms/div</td><td style="text-align:center">100.0 Hz</td><td style="text-align:center">4.6 div</td><td style="text-align:center">1 V/div</td><td style="text-align:center">2.32 V</td><td style="text-align:center">1.64V</td></tr><tr><td style="text-align:center">1kHz,1V</td><td style="text-align:center">5 div</td><td style="text-align:center">0.2 ms/div</td><td style="text-align:center">1 kHz</td><td style="text-align:center">5 div</td><td style="text-align:center">0.5 V/div</td><td style="text-align:center">1.27V</td><td style="text-align:center">0.89V</td></tr><tr><td style="text-align:center">10kHz,1V</td><td style="text-align:center">5 div</td><td style="text-align:center">20 $\mu s/div$</td><td style="text-align:center">10 kHz</td><td style="text-align:center">5 div</td><td style="text-align:center">0.5 V/div</td><td style="text-align:center">1.27V</td><td style="text-align:center">0.89V</td></tr><tr><td style="text-align:center">100kHz,1V</td><td style="text-align:center">5 div</td><td style="text-align:center">2 $\mu s/div$</td><td style="text-align:center">100 kHz</td><td style="text-align:center">5 div</td><td style="text-align:center">0.5 V/div</td><td style="text-align:center">1.27V</td><td style="text-align:center">0.89V</td></tr></tbody></table><p><img src="https://blog.jingvc.com/pic/d1284cb5a2902f4f70b11556719f497.jpg?x-oss-process=style/Comprass_Copyright"alt=""></p><h4 id="如何设置电源的工作状态？"> 如何设置电源的工作状态？</h4><p>把电源分别连接成 2 路独立的 +5V,+12V 输出；串联的 $\pm$12V 输出；并联的 +15V 输出, 用万用表测量其实际输出电压值, 测量结果记录于表 2.5.4。</p><center>表 2.5.4 电源电压测量数据右按键状态 </center><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"> 左按键状态 </th><th style="text-align:center"> 右按键状态 </th><th style="text-align:center"> 电源 1 显示值 </th><th style="text-align:center"> 实际测量值 1</th><th style="text-align:center">电源 2 显示值 </th><th style="text-align:center"> 实际测量值 2</th></tr></thead><tbody><tr><td style="text-align:center">2 路独立 </td><td style="text-align:center"> 关</td><td style="text-align:center">开 </td><td style="text-align:center">5.0</td><td style="text-align:center">4.96</td><td style="text-align:center">12.0</td><td style="text-align:center">12.0</td></tr><tr><td style="text-align:center"> 串联 $\pm$12V</td><td style="text-align:center">开 </td><td style="text-align:center"> 关</td><td style="text-align:center">12.0</td><td style="text-align:center">11.94</td><td style="text-align:center">12.0</td><td style="text-align:center">11.94</td></tr><tr><td style="text-align:center">并联 +15V</td><td style="text-align:center">关 </td><td style="text-align:center"> 开</td><td style="text-align:center">15.0</td><td style="text-align:center">14.95</td><td style="text-align:center">15.0</td><td style="text-align:center">14.95</td></tr></tbody></table><p><img src="https://blog.jingvc.com/pic/77555c093c764b9fd4ed29142c3c18b.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p>              </div>            </details><h2 id="实验四 - 放大电路焊接与测试">实验四 放大电路焊接与测试</h2><p>焊接比较简单, 电路测试需要理解 + 老师指导才逐渐上手🥲<br>老师甚至讲了 P-P(peak)及增益的含义🤣（又是特菜的一次）</p><details class="folding-tag"><summary> 放大电路 </summary>              <div class='content'>              <h3 id="实验目的：">实验目的：</h3><ul><li>巩固元件参数读取, 焊接技术和常用仪器使用方法, 对电路进行测试 </li></ul><h3 id="实验内容："> 实验内容：</h3><ul><li>放大电路焊接, 并测试焊接：</li><li>单电源运放放大电路。</li><li>测试静态工作点, 测量并计算电压增益等 </li></ul><h3 id="实验原理"> 实验原理 </h3><p><img src="https://blog.jingvc.com/pic/clip_image001.png?x-oss-process=style/Comprass_Copyright" alt="原理"><br>$$ A_{v1}=\frac{V_ {OUT1} } {V_{IN} }=-\frac{R_4}{R_3}=-\frac{100k\Omega} {10k\Omega}=-10V/V $$<br>$$ A_{v1}=\frac{V_ {OUT} } {V_{OUT1} }=-\frac{R_6}{R_5}=-\frac{10k\Omega} {2k\Omega}=-5V/V $$<br>$$ A_{v1}=\frac{V_ {OUT} } {V_{IN} }=A_{v1}\times A_{v2}=(-10)\times(-5)=+50V/V $$</p><h3 id="实验步骤"> 实验步骤 </h3><h4 id="参数读取与焊接"> 参数读取与焊接 </h4><h5 id="材料"> 材料 </h5><ul><li> 瓷片电容：$103, 104$</li><li>电解电容：$4.7uF \times 2, 10uF , 100uF$</li><li>电阻：$1k, 2k \times 2, 5.1k \times 3, 10k \times 2,100k$</li><li>运放 LM 358 及 IC 座 </li><li> 芯插座及排针：</li></ul><p><img src="https://blog.jingvc.com/pic/%E9%9B%B6%E4%BB%B6.png?x-oss-process=style/Comprass_Copyright" alt="零件"></p><h5 id="焊接方法">焊接方法 </h5><ul><li> 五步焊接法 </li><li> 由低到高的顺序 </li><li> 将电阻, 电容和芯片底座由从矮到高的顺序焊入电路板的的相应位置。</li><li>将排针焊入 IN,OUT,OUT1, 处作为输入端, 输出端, 做后将排针焊入 GND 处, 焊接完成, 得到以下电路。</li></ul><h5 id="成品">成品 </h5><p><img src="https://blog.jingvc.com/pic/20ed2e617077e88014961fc97615bc2.jpg?x-oss-process=style/Comprass_Copyright" alt="成品"></p><h4 id="静态测试"> 静态测试 </h4><h5 id="步骤"> 步骤 </h5><ul><li><p> 调节电源电压为 9V 接入电路的电源输入端（暂时不加交流输入信号）</p></li><li><p>用万用表直流电压档, 测量并记录运放 $LM 358$ 两电源端的对地电压：$V4,V8$。</p></li><li><p>用万用表直流电压档, 测量并记录运放 $U 1A$ 两输入端和一输出端的对地电压：$V2,V3$ 和 $V1$。</p></li><li><p>用万用表直流电压档, 测量并记录运放 $U 1B$ 两输入端和一输出端的对地电压：$V5,V6$ 和 $V7$。</p></li></ul><h5 id="方法">方法 </h5><p><img src="https://blog.jingvc.com/pic/%E9%9D%99%E6%80%81%E6%B5%8B%E8%AF%95.jpg?x-oss-process=style/Comprass_Copyright" alt="静态测试"></p><h5 id="数据"> 数据 </h5><table><thead><tr><th style="text-align:center"> 引脚 </th><th style="text-align:center"> 对地电压 (V)</th><th style="text-align:center"> 引脚 </th><th style="text-align:center"> 对地电压 (V)</th></tr></thead><tbody><tr><td style="text-align:center">V4</td><td style="text-align:center">0.00</td><td style="text-align:center">V1</td><td style="text-align:center">4.47</td></tr><tr><td style="text-align:center">V8</td><td style="text-align:center">8.96</td><td style="text-align:center">V5</td><td style="text-align:center">4.46</td></tr><tr><td style="text-align:center">V2</td><td style="text-align:center">4.46</td><td style="text-align:center">V6</td><td style="text-align:center">4.46</td></tr><tr><td style="text-align:center">V3</td><td style="text-align:center">4.46</td><td style="text-align:center">V7</td><td style="text-align:center">4.46</td></tr></tbody></table><h4 id="动态测试"> 动态测试 </h4><ul><li> 调节电源电压为 $9V$ 接入电路的电源输入端, 并调节信号源, 使信号源输出 $2.5kHz,20mV$ 的正弦波, 接入电路的 $IN$ 信号输入端, 开始测试。</li></ul><p><img src="https://blog.jingvc.com/pic/25kHz%20&amp;%2020mv.jpg?x-oss-process=style/Comprass_Copyright" alt="25kHz &amp; 20mv"></p><h5 id="测试内容">测试内容 </h5><ul><li><p> 测量输入信号的波形和大小, 并用示波器的另一通道测量 OUT1 的输出波形和电压值, 比较两信号的波形和相位, 计算第一级数放大倍数。</p></li><li><p>同时测量输入和 OUT 的输出波形与电压值。比较输入和输出两信号的波形和相位, 计算总的放大倍数。</p></li><li><p>同时测量 OUT1 与 OUT 的输出波形与电压值。比较量信号的波形和相位, 计算第二级放大倍数。</p></li><li><p>测量输入信号和输出信号, 并将输入信号缓慢升至 0.2V, 观测并记录输出信号的变化。</p></li></ul><h5 id="步骤与结果">步骤与结果 </h5><ul><li><p> 将示波器的金属钩子钩住输入端 IN 和输出端 OUT1, 调节示波器得到稳定图像, 调节电压灵敏度 </p><p> 测量得：</p></li></ul><p>​IN 输入端信号 $Vip-p=46.4mv$</p><p>​输出端 OUT1 电压为 $Vo1p-p=0.464V$</p><p>​两信号的相位相差半个周期。</p><p>​$A_V=\frac{Vo1p-p}{Vip-p}=-10$, 第一级放大倍数约为 10 倍,</p><p><img src="https://blog.jingvc.com/pic/in%20&amp;%20out1.jpg?x-oss-process=style/Comprass_Copyright" alt="in &amp; out1"></p><p><img src="https://blog.jingvc.com/pic/-10%E5%80%8D.jpg?x-oss-process=style/Comprass_Copyright" alt="-10 倍"></p><ul><li><p>将示波器的金属钩子钩住输入端 IN 和输出端 OUT 调节示波器得到稳定图像, 调节电压灵敏度 </p><p> 测量得：</p></li></ul><p>IN 输入端信号电压为  $Vip-p=46.4mv$</p><p>输出端 OUT 电压为  $Vop-p=2.32V$</p><p>两信号相位相同 </p><p>$A_V=-50$, 放大倍数约为 50 倍</p><p><img src="https://blog.jingvc.com/pic/in%20&amp;%20out.jpg?x-oss-process=style/Comprass_Copyright" alt="in &amp; out"></p><p><img src="https://blog.jingvc.com/pic/-50%E5%80%8D.jpg?x-oss-process=style/Comprass_Copyright" alt="-50 倍"></p><ul><li><p>③将示波器的金属钩子钩住输出端 OUT1 和输出端 OUT 调节示波器得到稳定图像, 调节电压灵敏度</p><p> 测量得：</p></li></ul><p>OUT1 输出端信号电压为  $Out_1=0.46V$</p><p>OUT 输出端信号电压为 $Out=2.3V$</p><p>两信号相位相差半个周期, 第二级放大倍数约为 5 倍 </p><p><img src="https://blog.jingvc.com/pic/out%20&amp;%20out1.jpg?x-oss-process=style/Comprass_Copyright" alt="out &amp; out1"></p><ul><li> 将示波器的金属钩子钩住输入端 IN 和输出端 OUT 调节示波器得到稳定图像, 逐渐增大信号源输出信号的电压值, 观察图像发现波形幅度逐渐增大, 当电压达到 0.14V 左右时, 正弦波波峰波谷处产生类似于方波的图像, 即削波现象, 原因是信号电平过强, 超过电路允许范围, 导致信号无法顺利通过。</li></ul><p><img src="https://blog.jingvc.com/pic/25kHz%20&amp;%200.2V.jpg?x-oss-process=style/Comprass_Copyright" alt="25kHz &amp; 0.2V"></p><p><img src="https://blog.jingvc.com/pic/%E6%96%B9%E6%B3%A2.jpg?x-oss-process=style/Comprass_Copyright" alt="方波"></p>              </div>            </details><h2 id="实验五 - 贴片器件焊接（呼吸灯焊接）">实验五 贴片器件焊接（呼吸灯焊接）</h2><details class="folding-tag"><summary> 呼吸灯 </summary>              <div class='content'>              <h3 id="零件">零件 </h3><p><img src="https://blog.jingvc.com/pic/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230331193545.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p><h3 id=" 成品 "> 成品 </h3><p><img src="https://blog.jingvc.com/pic/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230331193542.jpg?x-oss-process=style/Comprass_Copyright"alt=""></p><p> 先在焊盘上点锡, 之后需要用镊子将细小的零件贴上去, 成品还有点小 bug🥲, 使用万用表测了短路, 又加焊了一下锡脚, 但还是有点问题, 需要用示波器再看看了。</p>              </div>            </details><h2 id="实验六 -Arduino 入门">实验六 Arduino 入门</h2><details class="folding-tag"><summary> Arduino </summary>              <div class='content'>              <h3 id="简介">简介 </h3><p><strong>Arduino：</strong> 一块基于开放源代码的 USB 接口单片机开发板, 包括 20 多个模拟, 数字,PWM 等的输入输出通道, 具有类似 C 语言的 IDE 集成开发环境。<br><strong>Arduino 可以使用的电子元件：</strong> Switch ,Sensors , 其他控制器, LED , 步进马达或其他输出装置, 等。<br><em> 这个开源硬件项目, 诞生于意大利的一所设计学校。Arduino 的核心开发团队成员包括：Massimo Banzi,  , David Cuartielles , David Mellis 等 6 人。</em></p><h3 id="主要器件">主要器件 </h3><h4 id="套件"> 套件 </h4><p><img src="https://blog.jingvc.com/pic/yuan.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p><h4 id="Arduino-UNO 开发板 ">Arduino UNO 开发板</h4><p><img src="https://blog.jingvc.com/pic/UNO.png?x-oss-process=style/Comprass_Copyright"alt=""></p><h5 id="数字 -I-O- 口"> 数字 I/O 口 </h5><img src="https://blog.jingvc.com/pic/ba6a48debe76c00cae0534894a08ce3.png?x-oss-process=style/Comprass_Copyright" style="zoom:50%;" /><ul><li> 可以输入和输出数字信号 </li><li> 数字信号两种形态：高电平, 低电平 </li><li> 数字接口：DIGITAL （PWM~ ）0~13 既可用作输入, 也可用作输出 </li><li> 输出高电平时, 可提供 40mA 的 5V 电压；这足够点亮普通 LED , 不足以驱动电机 </li><li>0 ,1 复用：RX ,TX</li><li>3 ,5 ,6 ,9 ,10 ,11 复用：PWM~（模拟输出）</li></ul><h5 id="模拟 -I-O- 口"> 模拟 I/O 口 </h5><img src="https://blog.jingvc.com/pic/41c77d4d0b1dd25771ea02833e3cde5.png?x-oss-process=style/Comprass_Copyright" style="zoom:50%;" /><ul><li> 模拟输入：A0~A5 默认为模拟输入,  可测量电压供程序使用；</li><li>不能输出模拟信号, 只能用 PWM；</li><li>也可用作数字输入, 输出：14~19；</li></ul><h5 id="电源输出接口 POWER">电源输出接口 POWER</h5><ul><li>IOREF</li><li>RESET</li><li>3.3V 和 5V</li><li>两个 GND</li><li>Vin</li><li>Reset 与 与 重置按钮相连, 将其瞬间接至 0V , 能重启单片机, 使程序从头开始运行 </li><li>GND 地线, 即 0V , 是板上其他电压的参考点</li></ul><h3 id="Arduino">Arduino</h3><p> 官网下载安装, windows10/11 不用另外装驱动, 在界面选择开发板及端口即可；</p><p><code>Tool-board/port</code></p><p><img src="https://blog.jingvc.com/pic/f1114f84d0a7a42acf5230b56afe0d2.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h3 id="Hello-World 实验 ">Hello World 实验 </h3><h4 id=" 编写程序 "> 编写程序 </h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> val;</span><br><span class="line"><span class="built_in">int</span> ledpin=<span class="number">13</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  pinMode(ledpin,OUTPUT); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  val=Serial.read();</span><br><span class="line">  <span class="keyword">if</span>(val==<span class="string">&#x27;R&#x27;</span>) </span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(ledpin,HIGH); </span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    digitalWrite(ledpin,LOW);</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id=" 连接开发板 "> 连接开发板 </h4><p><img src="https://blog.jingvc.com/pic/proj1.jpg?x-oss-process=style/Comprass_Copyright"alt=""></p><h4 id="上传 - 运行"> 上传 &amp; 运行 </h4><p> 串口监视器输入 <code>R</code> 返回 <code>Hello World</code></p><p><img src="https://blog.jingvc.com/pic/eece44868db8a39597cff46b2dc04ad.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h3 id="LED 闪烁实验 ">LED 闪烁实验</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> ledPin=<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(ledPin,OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  digitalWrite(ledPin,HIGH);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  digitalWrite(ledPin,LOW);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id=" 开发板连接 "> 开发板连接 </h4><p><img src="https://blog.jingvc.com/pic/proj2.jpg?x-oss-process=style/Comprass_Copyright"alt=""></p><h3 id="交通灯设计"> 交通灯设计 </h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> redled= <span class="number">10</span>;</span><br><span class="line"><span class="built_in">int</span> yellowled=<span class="number">7</span>;</span><br><span class="line"><span class="built_in">int</span> greenled=<span class="number">4</span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(redled,OUTPUT); </span><br><span class="line">  pinMode(yellowled,OUTPUT);</span><br><span class="line">  pinMode(greenled,OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  digitalWrite(redled,HIGH);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  digitalWrite(redled,LOW); </span><br><span class="line">  digitalWrite(yellowled,HIGH); </span><br><span class="line">  delay(<span class="number">200</span>);</span><br><span class="line">  digitalWrite(yellowled,LOW); </span><br><span class="line">  digitalWrite(greenled,HIGH); </span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  digitalWrite(greenled,LOW);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="开发板"> 开发板 </h4><p><img src="https://blog.jingvc.com/pic/proj3.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p><h3 id=" 广告灯效果实验 "> 广告灯效果实验 </h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> BASE= <span class="number">2</span>;   <span class="comment">// 第一颗 LED 接的 I/O 脚</span></span><br><span class="line"><span class="built_in">int</span> NUM =<span class="number">6</span>;    <span class="comment">//LED 的总数</span></span><br><span class="line"><span class="built_in">int</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="built_in">int</span> i= BASE;i&lt;BASE + NUM;i++)</span><br><span class="line">  &#123;  </span><br><span class="line">    pinMode(i,OUTPUT);   <span class="comment">// 设定数字 I/0 脚为输出</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span>(i= BASE;i&lt;BASE+NUM;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  digitalWrite(i,LOW);   <span class="comment">// 设定数字 1/0 脚出为“低“, 即顺序熄灭</span></span><br><span class="line">  delay(<span class="number">200</span>);     <span class="comment">// 延时</span></span><br><span class="line">  &#125;           </span><br><span class="line">  <span class="keyword">for</span>(i= BASE;i&lt;BASE+ NUM;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  digitalWrite(i,HIGH); <span class="comment">// 设定数字 I/0 脚输出为“低“, 即顺序点亮</span></span><br><span class="line">  delay(<span class="number">200</span>);  <span class="comment">// 延时</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id=" 开发板 -2"> 开发板 </h4><p><img src="https://blog.jingvc.com/pic/proj4.jpg?x-oss-process=style/Comprass_Copyright"alt=""></p><h3 id="按键控制 LED 实验"> 按键控制 LED 实验 </h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> ledpin = <span class="number">11</span>;  <span class="comment">// 定义数字 11 接口</span></span><br><span class="line"><span class="built_in">int</span> inpin = <span class="number">7</span>;    <span class="comment">// 定义数字 7 接口</span></span><br><span class="line"><span class="built_in">int</span> val;   <span class="comment">// 定义变量 val</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(ledpin,OUTPUT); <span class="comment">// 定义小灯接口为输出接口</span></span><br><span class="line">  pinMode(inpin,INPUT);   <span class="comment">// 定义按键接口为输入接口</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">val = digitalRead(inpin); <span class="comment">// 读取数字 7 口电平值赋给 val</span></span><br><span class="line"><span class="keyword">if</span>(val == LOW)  <span class="comment">// 检测按键是否按下, 按键按下时小灯亮起</span></span><br><span class="line">  digitalWrite(ledpin,LOW);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  digitalWrite(ledpin,HIGH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="开发板 -3"> 开发板 </h4><p>​<code> 记得接地线 </code></p><p><img src="https://blog.jingvc.com/pic/proj5.jpg?x-oss-process=style/Comprass_Copyright" alt=""></p><h3 id=" 抢答器设计实验 "> 抢答器设计实验 </h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> redled=<span class="number">10</span>;    <span class="comment">//set IO 10 to red LED </span></span><br><span class="line"><span class="built_in">int</span> yellowled=<span class="number">9</span>;  <span class="comment">//set IO 8 to yellow LED </span></span><br><span class="line"><span class="built_in">int</span> greenled=<span class="number">8</span>;   <span class="comment">//set IO 8 to green LED</span></span><br><span class="line"><span class="built_in">int</span> redpin=<span class="number">7</span>;     <span class="comment">//red key pin IO7 </span></span><br><span class="line"><span class="built_in">int</span> yellowpin=<span class="number">6</span>;  <span class="comment">//yellow key pin IO6 </span></span><br><span class="line"><span class="built_in">int</span> greenpin=<span class="number">5</span>;   <span class="comment">//green key pin IO5 </span></span><br><span class="line"><span class="built_in">int</span> red;   <span class="comment">// 变量声明</span></span><br><span class="line"><span class="built_in">int</span> yellow;  <span class="comment">// 变量声明</span></span><br><span class="line"><span class="built_in">int</span> green;  <span class="comment">// 变量声明</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(redled,OUTPUT);<span class="comment">//set as output </span></span><br><span class="line">  pinMode(yellowled,OUTPUT);<span class="comment">//set as output </span></span><br><span class="line">  pinMode(greenled,OUTPUT);<span class="comment">//set as output</span></span><br><span class="line">  pinMode(redpin,INPUT);  </span><br><span class="line">  pinMode(yellowpin,INPUT);<span class="comment">//set as input</span></span><br><span class="line">  pinMode(greenpin,INPUT);<span class="comment">//set as input</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  red = digitalRead(redpin);  <span class="comment">// 读取按键状态</span></span><br><span class="line">  <span class="keyword">if</span> (red == LOW)   <span class="comment">// 按键状态为低</span></span><br><span class="line">    digitalWrite(redled,LOW);  <span class="comment">//LED 熄灭</span></span><br><span class="line">  <span class="keyword">else</span>    <span class="comment">// 按键状态为高</span></span><br><span class="line">    digitalWrite(redled,HIGH);  <span class="comment">//LED 点亮</span></span><br><span class="line"></span><br><span class="line">  yellow= digitalRead(yellowpin); </span><br><span class="line">  <span class="keyword">if</span>(yellow == LOW)</span><br><span class="line">    digitalWrite(yellowled,LOW); </span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    digitalWrite(yellowled,HIGH); </span><br><span class="line">  green = digitalRead(greenpin); </span><br><span class="line">  <span class="keyword">if</span>(green == LOW)</span><br><span class="line">    digitalWrite(greenled,LOW); </span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    digitalWrite(greenled,HIGH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id=" 开发板 -4"> 开发板 </h4><p><img src="https://blog.jingvc.com/pic/proj6.jpg?x-oss-process=style/Comprass_Copyright"alt=""></p><h3 id="模拟值实验"> 模拟值实验 </h3><p><strong> 任务：</strong> 使用外部模拟量传感器, 通过编写程序实现模拟量数据的读取和处理。 要求：设计合适的电路连接图, 编写程序实现模拟量数据的读取和处理, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/7.jpg?x-oss-process=style/Comprass_Copyright" alt="7"></p><p> 需要正确连接 5V 电源及接地线；</p><p>调节电位器时, LED 灯的亮度及 IED 的串口监视器数值会同时发生变化；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> potpin = <span class="number">0</span>; <span class="comment">// 指定模拟端口 A0</span></span><br><span class="line"><span class="built_in">int</span> ledpin = <span class="number">13</span>; <span class="comment">// 指定 LED 端口 13</span></span><br><span class="line"><span class="built_in">int</span> val= <span class="number">0</span>; <span class="comment">// 声明临时变量 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(ledpin,OUTPUT);<span class="comment">// 设置端口 13 为输出模式</span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);  <span class="comment">// 设置串口波特率为 9600</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  digitalWrite(ledpin,HIGH); <span class="comment">// 拉高端口 13, LED 点亮</span></span><br><span class="line">  delay(<span class="number">50</span>);   <span class="comment">// 延时 0.05 秒</span></span><br><span class="line">  digitalWrite(ledpin,LOW); <span class="comment">// 拉低端口 13, 关闭 LED</span></span><br><span class="line">  delay(<span class="number">50</span>);<span class="comment">// 延时 0.05 秒</span></span><br><span class="line">  val = analogRead(potpin); <span class="comment">// 读取 AO 口的电压值并赋值到 val</span></span><br><span class="line">  Serial.println(val);<span class="comment">// 串口发送 val 值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://blog.jingvc.com/pic/7-2.png?x-oss-process=style/Comprass_Copyright" alt="7-2"></p><h3 id="PWM 调控灯光亮度实验">PWM 调控灯光亮度实验</h3><p><strong> 任务：</strong> 使用 PWM 技术, 通过编写程序实现 LED 灯的亮度调节。 要求：设计合适的电路连接图, 编写程序实现 PWM 调控 LED 灯的亮度, 记录测试数据并进行分析。</p><p>PWM （Pulse Width Modulation） 通常所说的脉冲宽度调制, 简称脉宽调制。脉宽调制是一种对模拟信号电平进行数字编码的方法。Arduino 不能直接产生模拟电压, 只能输出 0V 或 5V 高低电平。PWM 就是一种利用数字方法得到模拟输出电压的技术。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板, 及示波器连接使用 </strong></p><p><img src="https://blog.jingvc.com/pic/8.png?x-oss-process=style/Comprass_Copyright" alt="8"></p><p> 可以使用跳线连接拓展版与示波器信号接入端, 示波器信号输入端的黑色小夹子通过条线, 与拓展板接地端口连接；</p><p>调节示波器, 使波形趋于平稳；</p><p>PWM 的三个基本参数：</p><ul><li>脉冲宽度 </li><li> 脉冲周期（脉冲频率的倒数）</li><li>电压高度（例如：0V-5V</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> potpin=<span class="number">0</span>;  <span class="comment">// 定义模拟接口 O</span></span><br><span class="line"><span class="built_in">int</span> ledpin=<span class="number">11</span>; <span class="comment">// 定义数字接口 11（PWM 输出）</span></span><br><span class="line"><span class="built_in">int</span> val=<span class="number">0</span>;      <span class="comment">// 暂存来自传感器的变量数值。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  pinMode(ledpin,OUTPUT);  <span class="comment">// 定义数字接口 11 为输出 </span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);     <span class="comment">// 设置波特率为 9600  </span></span><br><span class="line">                         <span class="comment">// 注意：模拟接口自动设置为输入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  val=analogRead(potpin);  <span class="comment">// 读取传感器的模拟值并赋值给 val</span></span><br><span class="line">  Serial.println(val);    <span class="comment">// 显示 val 变量 —</span></span><br><span class="line">  analogWrite(ledpin,val/<span class="number">4</span>); <span class="comment">// 打开 LED 并设置亮度（PWM 输出最大值 255）</span></span><br><span class="line">  delay(<span class="number">10</span>);   <span class="comment">// 延时 10ms</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="温度传感器实验"> 温度传感器实验 </h3><p><strong> 任务：</strong> 使用外部温度传感器, 通过编写程序实现温度数据的读取和显示。 要求：设计合适的电路连接图, 编写程序实现温度数据的读取和显示, 记录测试数据并进行分析。</p><p>需要使用到温度传感器 </p><p><img src="https://blog.jingvc.com/pic/04b3fb66818e87cc675190f700b2058.png?x-oss-process=style/Comprass_Copyright" alt="温度传感器"></p><p><strong> 连接 UNO 板与电脑,UNO 板与面包板 </strong></p><p><img src="https://blog.jingvc.com/pic/9.jpg?x-oss-process=style/Comprass_Copyright" alt="9"></p><p>IDE 的串口监视器会显示温度传感器测得的温度数据；</p><p><img src="https://blog.jingvc.com/pic/9-2.png?x-oss-process=style/Comprass_Copyright" alt="9-2"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Program 8：用温度传感器测量您周边的温度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);  <span class="comment">// 使用 9600 速率进行串口通讯</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">int</span> n=analogRead(A0);   <span class="comment">// 读取 AO 口的电压值</span></span><br><span class="line">  <span class="built_in">float</span> vol=n*(<span class="number">5.0</span>/<span class="number">1023.0</span>*<span class="number">100</span>); <span class="comment">// 将传感器得到的电压数值换算成温度</span></span><br><span class="line">  Serial.println(vol);  <span class="comment">// 串口输出温度数据</span></span><br><span class="line">  delay(<span class="number">2000</span>);      <span class="comment">// 等待 2 秒, 控制刷新速度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="蜂鸣器实验"> 蜂鸣器实验 </h3><p><strong> 任务：</strong> 使用外部蜂鸣器, 通过编写程序实现蜂鸣器的控制。 要求：设计合适的电路连接图, 编写程序实现蜂鸣器的控制, 记录测试数据并进行分析。</p><p>最常见发声元件是蜂鸣器和喇叭, 两者比较蜂鸣器更简单易用, 本实验采用蜂鸣器。有源蜂鸣器与无源蜂鸣器的区别：是否带震荡源。有源蜂鸣器内部带震荡源 , 加上合适的直。 流电源就会鸣叫。其控制方法与 与 LED 类 类 似, 相应数字接口输出高低电平。 即可控制其鸣停。无源蜂鸣器内部不带震荡源,  只加直 流电源无法令其鸣叫。须用音频信号驱动才能鸣叫。注意：有源蜂鸣器有正负极之分, 长脚正, 短脚负。还有驱动电压之分,  5V ,12V 等。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/10.jpg?x-oss-process=style/Comprass_Copyright" alt="10"></p><p> 一首乐曲有若干音符组成, 一个音符对应一个频率。让 arduino 输 输 出相应频 率信号到 无源蜂 鸣器 , 蜂鸣器就会发出相应声音。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> buzzer = <span class="number">8</span>;   <span class="comment">// 设置控制蜂鸣器的数字脚 </span></span><br><span class="line"><span class="built_in">int</span> i=<span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(buzzer,OUTPUT); <span class="comment">// 设置数字 1O 脚模式, OUTPUT 为输出</span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span>(i= <span class="number">0</span>;i&lt;<span class="number">80</span>;i++) <span class="comment">// 输出一个频率的声音</span></span><br><span class="line">  &#123; </span><br><span class="line">    digitalWrite(buzzer,HIGH); <span class="comment">// 发声音</span></span><br><span class="line">    delay(<span class="number">1</span>); <span class="comment">// 延时 1ms</span></span><br><span class="line">    digitalWrite(buzzer,LOW); <span class="comment">// 不发声音</span></span><br><span class="line">    delay(<span class="number">1</span>);  <span class="comment">// 延时 1ms</span></span><br><span class="line">  &#125;    </span><br><span class="line">  <span class="keyword">for</span>(i= <span class="number">0</span>;i&lt;<span class="number">100</span>;i++)  <span class="comment">// 输出另一个频率的声音</span></span><br><span class="line">  &#123;  </span><br><span class="line">    digitalWrite(buzzer,HIGH); <span class="comment">// 发声音</span></span><br><span class="line">    delay(<span class="number">2</span>); <span class="comment">// 延时 2ms</span></span><br><span class="line">    digitalWrite(buzzer,LOW);<span class="comment">// 不发声音</span></span><br><span class="line">    delay(<span class="number">2</span>); <span class="comment">// 延时 2ms</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D0 -1         // 把每个音符和频率值对应起来, 其实不用打这么多。</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D1 294        // 但是都打上了, 后面可以随意编写 D 调的各种歌。</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D2 330        // 我这里用 NOTE_D+ 数字表示音符, </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D3 350        //NOTE_DH+ 数字表示上面有点的那种音符, </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D4 393        //NOTE_DL+ 数字表示下面有点的那种音符。</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D5 441</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D6 495</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_D7 556</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DL1 147</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DL2 165</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DL3 175</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DL4 196</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DL5 221</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DL6 248</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DL7 278</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DH1 589</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DH2 661</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DH3 700</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DH4 786</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DH5 882</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DH6 990</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOTE_DH7 112</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WHOLE 1               // 这部分是用英文对应了拍子, 这样后面也比较好看</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HALF 0.5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> QUARTER 0.25</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EIGHTH 0.25</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIXTEENTH 0.625</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> tune[] =                  <span class="comment">// 这部分就是整首曲子的音符部分, 用了一个序列定义为 tune, 整数</span></span><br><span class="line">&#123;</span><br><span class="line">  NOTE_DH1, NOTE_D6, NOTE_D5, NOTE_D6, NOTE_D0,</span><br><span class="line">  NOTE_DH1, NOTE_D6, NOTE_D5, NOTE_DH1, NOTE_D6, NOTE_D0, NOTE_D6,</span><br><span class="line">  NOTE_D6, NOTE_D6, NOTE_D5, NOTE_D6, NOTE_D0, NOTE_D6,</span><br><span class="line">  NOTE_DH1, NOTE_D6, NOTE_D5, NOTE_DH1, NOTE_D6, NOTE_D0,</span><br><span class="line">  NOTE_D1, NOTE_D1, NOTE_D3,</span><br><span class="line">  NOTE_D1, NOTE_D1, NOTE_D3, NOTE_D0,</span><br><span class="line">  NOTE_D6, NOTE_D6, NOTE_D6, NOTE_D5, NOTE_D6,</span><br><span class="line">  NOTE_D5, NOTE_D1, NOTE_D3, NOTE_D0,</span><br><span class="line">  NOTE_DH1, NOTE_D6, NOTE_D6, NOTE_D5, NOTE_D6,</span><br><span class="line">  NOTE_D5, NOTE_D1, NOTE_D2, NOTE_D0,</span><br><span class="line">  NOTE_D7, NOTE_D7, NOTE_D5, NOTE_D3,</span><br><span class="line">  NOTE_D5,</span><br><span class="line">  NOTE_DH1, NOTE_D0, NOTE_D6, NOTE_D6, NOTE_D5, NOTE_D5, NOTE_D6, NOTE_D6,</span><br><span class="line">  NOTE_D0, NOTE_D5, NOTE_D1, NOTE_D3, NOTE_D0,</span><br><span class="line">  NOTE_DH1, NOTE_D0, NOTE_D6, NOTE_D6, NOTE_D5, NOTE_D5, NOTE_D6, NOTE_D6,</span><br><span class="line">  NOTE_D0, NOTE_D5, NOTE_D1, NOTE_D2, NOTE_D0,</span><br><span class="line">  NOTE_D3, NOTE_D3, NOTE_D1, NOTE_DL6,</span><br><span class="line">  NOTE_D1,</span><br><span class="line">  NOTE_D3, NOTE_D5, NOTE_D6, NOTE_D6,</span><br><span class="line">  NOTE_D3, NOTE_D5, NOTE_D6, NOTE_D6,</span><br><span class="line">  NOTE_DH1, NOTE_D0, NOTE_D7, NOTE_D5,</span><br><span class="line">  NOTE_D6,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">float</span> duration[] =       <span class="comment">// 这部分是整首曲子的节拍部分, 也定义个序列 duration, 浮点</span></span><br><span class="line">&#123;                        <span class="comment">//（数组的个数和前面音符的个数是一样的, 一一对应么）</span></span><br><span class="line">  <span class="number">1</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> + <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span> + <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span> + <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span> + <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span> + <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span> + <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span> + <span class="number">1</span> + <span class="number">1</span> + <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span> + <span class="number">0.25</span>, <span class="number">0.25</span>, <span class="number">0.5</span> + <span class="number">0.25</span>, <span class="number">0.25</span>, <span class="number">0.5</span> + <span class="number">0.25</span>, <span class="number">0.25</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span> + <span class="number">0.25</span>, <span class="number">0.25</span>, <span class="number">0.5</span> + <span class="number">0.25</span>, <span class="number">0.25</span>, <span class="number">0.5</span> + <span class="number">0.25</span>, <span class="number">0.25</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span> + <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span> + <span class="number">1</span> + <span class="number">1</span> + <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">1</span> + <span class="number">1</span>,</span><br><span class="line">  <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">1</span> + <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span> + <span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">  <span class="number">1</span> + <span class="number">1</span> + <span class="number">1</span> + <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> length;<span class="comment">// 这里定义一个变量, 后面用来表示共有多少个音符</span></span><br><span class="line"><span class="built_in">int</span> tonePin = <span class="number">5</span>; <span class="comment">// 蜂鸣器的 pin</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(tonePin, OUTPUT); <span class="comment">// 设置蜂鸣器的 pin 为输出模式</span></span><br><span class="line">  length = <span class="keyword">sizeof</span>(tune) / <span class="keyword">sizeof</span>(tune[<span class="number">0</span>]); <span class="comment">// 这里用了一个 sizeof 函数, 可以查出 tone 序列里有多少个音符</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">int</span> x = <span class="number">0</span>; x &lt; length; x++) <span class="comment">// 循环音符的次数</span></span><br><span class="line">  &#123;</span><br><span class="line">    tone(tonePin, tune[x]); <span class="comment">// 此函数依次播放 tune 序列里的数组, 即每个音符</span></span><br><span class="line">    delay(<span class="number">400</span> * duration[x]); <span class="comment">// 音符持续时间, 400 是调整时间, 越大曲子速度越慢, 越小曲子速度越快</span></span><br><span class="line">    noTone(tonePin);<span class="comment">// 停止当前音符, 进入下一音符</span></span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">5000</span>);<span class="comment">// 等待 5 秒后, 循环重新开始</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="光控声音实验"> 光控声音实验 </h3><p><strong> 任务：</strong> 使用外部光敏传感器和声音传感器, 通过编写程序实现光控声音的控制。 要求：设计合适的电路连接图, 编写程序实现光控声音的控制, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/11.jpg?x-oss-process=style/Comprass_Copyright" alt="11"></p><p> 本实验可以借鉴 PWM 调控 LED 实验, 将电位器换成光敏电阻实现光强对 LED 亮度的控制。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> potpin=<span class="number">0</span>;  <span class="comment">// 定义模拟口 0 接光敏电阻 </span></span><br><span class="line"><span class="built_in">int</span> ledpin=<span class="number">11</span>; <span class="comment">// 定义数字口 11 调节 LED 亮度</span></span><br><span class="line"><span class="built_in">int</span> val=<span class="number">0</span>;      <span class="comment">// 定义变量 val</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  pinMode(ledpin,OUTPUT); <span class="comment">// 定义数字接口 11 为输出</span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);    <span class="comment">// 设置波特率为 9600</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  val=analogRead(potpin);  <span class="comment">// 读取模拟值并赋值给 val</span></span><br><span class="line">  Serial.println(val);     <span class="comment">// 显示 val 变量数值</span></span><br><span class="line">  analogWrite(ledpin,val/<span class="number">4</span>);<span class="comment">// 打开 LED 并设置亮度</span></span><br><span class="line">  delay(<span class="number">10</span>);     <span class="comment">// 延时 0.01 秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="火焰报警实验"> 火焰报警实验 </h3><p><strong> 任务：</strong> 使用外部火焰传感器, 通过编写程序实现火焰报警功能。 要求：设计合适的电路连接图, 编写程序实现火焰报警功能, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/12.jpg?x-oss-process=style/Comprass_Copyright" alt="12"></p><p> 火焰传感器, 通常是红外光敏二极管或红外光敏三极管, 是机器人专门用来搜寻火源的传感器。该传感器利用火焰发出的光中含有一定量的红外光而得以实现。火焰传感器通过对火焰中红外线强度的检测, 把火焰的亮度转化为高低变化的电平信号, 输入到 Arduino , Arduino 根据信号的变化做出相应的程序处理。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> flame = A5;</span><br><span class="line"><span class="built_in">int</span> Beep = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">int</span> val = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> &#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  pinMode(Beep,OUTPUT);</span><br><span class="line">  pinMode(flame,INPUT);</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  val = analogRead(flame);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> &#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">  Serial.println(analogRead(flame));</span><br><span class="line">  <span class="keyword">if</span>((analogRead(flame)-val)&gt;=<span class="number">600</span>)</span><br><span class="line">    digitalWrite(Beep,HIGH);</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    digitalWrite(Beep,LOW);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="感热灯实验">感热灯实验 </h3><p><strong> 任务：</strong> 使用外部感热传感器, 通过编写程序实现感热灯的控制。 要求：设计合适的电路连接图, 编写程序实现感热灯的控制, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/13.jpg?x-oss-process=style/Comprass_Copyright" alt="13"></p><p> 热敏电阻特点是对温度敏感, 不同温度下表现出不同的电阻值。</p><p>按照温度系数不同, 热敏电阻分为正温度系数热敏电阻（PTC） 和负温度系数热敏电阻（NTC ）。</p><p>正温度系数热敏电阻（PTC ）：温度越高电阻值越大；</p><p>负温度系数热敏电阻（NTC）：温度越高电阻值越小。</p><p><img src="https://blog.jingvc.com/pic/13-2.png?x-oss-process=style/Comprass_Copyright" alt="13-2"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> potpin= <span class="number">0</span>;   <span class="comment">// 设置模拟端口 AO</span></span><br><span class="line"><span class="built_in">int</span> ledpin = <span class="number">11</span>; <span class="comment">// 设置数字端口 11, 后面用作 PWM 输出 </span></span><br><span class="line"><span class="built_in">int</span> val= <span class="number">0</span>;      <span class="comment">// 声明变量 val</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(ledpin,OUTPUT); <span class="comment">// 设置数字 11 为输出模式</span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);    <span class="comment">// 设定波特率为 9600</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  val=analogRead(potpin); <span class="comment">// 读取 AO 的模拟电压值, 并赋值到 val</span></span><br><span class="line">  val= <span class="number">245</span> - val/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span>(val&lt;<span class="number">0</span>) </span><br><span class="line">    val=<span class="number">0</span>; </span><br><span class="line">    Serial.println(val);</span><br><span class="line">    analogWrite(ledpin,val); <span class="comment">//PWM 输出驱动 LED</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 100ms</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="倾斜开关实验"> 倾斜开关实验 </h3><p><strong> 任务：</strong> 使用外部倾斜开关, 通过编写程序实现倾斜开关的控制。 要求：设计合适的电路连接图, 编写程序实现倾斜开关的控制, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/14.jpg?x-oss-process=style/Comprass_Copyright" alt="14"></p><p> 本实验用倾斜开关控制 LED 灯的亮灭, 并在串口监视器显示。</p><p>倾斜开关也叫滚珠开关。 垂直悬挂的倾斜开关探头在受到外力作用偏离垂直位置 17 度以上时, 倾斜开关内部的金属球触点动作, 常闭触点断开。当外力撤消后, 倾斜开关回复到垂直状态, 金属球触点又闭合。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> switchpin = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">int</span> ledpin = <span class="number">8</span>; </span><br><span class="line"><span class="built_in">int</span> val=<span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(ledpin,OUTPUT); <span class="comment">// 数字 I08 输出模式 </span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);     <span class="comment">// 设置串口波特率为 9600</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  val = analogRead(switchpin);</span><br><span class="line">  <span class="keyword">if</span>(val&gt;<span class="number">512</span>)  <span class="comment">// 模拟电压值 512 正好电压是 2.5V</span></span><br><span class="line">    digitalWrite(ledpin,HIGH); <span class="comment">// 大于 2.5V, 拉高</span></span><br><span class="line">  <span class="keyword">else</span>  <span class="comment">// 小于等于</span></span><br><span class="line">  digitalWrite(ledpin,LOW); <span class="comment">// 拉低</span></span><br><span class="line">  Serial.println(val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="74HC595 实验">74HC595 实验</h3><p><strong> 任务：</strong> 使用 74HC595 芯片, 通过编写程序实现多个 LED 灯的控制。 要求：设计合适的电路连接图, 编写程序实现多个 LED 灯的控制, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/15%E2%80%943%E4%B8%AA%E7%AB%AF%E5%8F%A3%E6%8E%A7%E5%88%B68%E4%B8%AA%E8%BE%93%E5%87%BA.jpg?x-oss-process=style/Comprass_Copyright" alt="15—3 个端口控制 8 个输出"></p><p>74595 含有一个 8 位移位寄存器和一个 8 位存储器, 具有三态输出功能。 本实验用它来扩充 I/O 口控制 8 个 LED 。</p><p> 用 Arduino 直接控制 8 个 LED 要占用 8 个 I/O 口。但 UNO 总共只有 20 个 I/O 口（包含模拟口 A0 ~ A5 ）, 8 个 LED 占用太多资源, 用 74595 后只需 3 个 I/O 口就可以控制 8 个 LED。</p><p>连接跳线时, 需要将存储寄存器端口对应连接正确。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> latchPin=<span class="number">5</span>;   <span class="comment">//to 595 pin12 </span></span><br><span class="line"><span class="built_in">int</span> clockPin=<span class="number">4</span>;    <span class="comment">//to 595 pin 11</span></span><br><span class="line"><span class="built_in">int</span> dataPin=<span class="number">2</span>;   <span class="comment">//to 595 pin14</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(latchPin,OUTPUT); </span><br><span class="line">  pinMode(clockPin,OUTPUT);</span><br><span class="line">  pinMode(dataPin,OUTPUT);<span class="comment">// 让三个脚都是输出状态 &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="built_in">int</span> a=<span class="number">0</span>;a&lt;<span class="number">256</span>;a++) <span class="comment">// 让 a 这个变量 + 1 一直加到到 256, 每次循环都进行下面的活动。</span></span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(latchPin,LOW);<span class="comment">// 将 ST_CP 口上面加低电平让芯片准备好接收数据 </span></span><br><span class="line">    shiftOut(dataPin,clockPin,MSBFIRST,a);</span><br><span class="line">    <span class="comment">/* dataPin：数据输出引脚, 数据每一位逐次输出。引脚模式需要设置成输出。</span></span><br><span class="line"><span class="comment">        clockPin：时钟输出引脚, 为数据输出提供时钟, 引脚模式需要设置成输出。</span></span><br><span class="line"><span class="comment">        bitOrder：数据位移顺序选择位, 为 byte 类型。</span></span><br><span class="line"><span class="comment">          两种类型可选, 高位先入 MSBFIRST, 低位先入 LSBFIRST。</span></span><br><span class="line"><span class="comment">          a：所要输出的数据值。*/</span></span><br><span class="line">  digitalWrite(latchPin,HIGH);<span class="comment">// 将 ST_CP 这个针脚恢复到高电平。</span></span><br><span class="line">  delay(<span class="number">1000</span>);<span class="comment">// 暂停 1 秒钟让你看到效果</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8 乘 8 点阵实验">8 乘 8 点阵实验</h3><p><strong> 任务：</strong> 使用 8 乘 8 点阵, 通过编写程序实现图案的显示。 要求：设计合适的电路连接图, 编写程序实现图案的显示, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/16_88%E7%82%B9%E9%98%B5.jpg?x-oss-process=style/Comprass_Copyright" alt="16_88 点阵"></p><p>8*8 点阵由 64 个 LED 组成, 每个 LED 位于行, 列交叉点上。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row1 = <span class="number">2</span>;<span class="comment">//UNO Pin 2 接点阵 9 脚(行 1)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row2 = <span class="number">3</span>;<span class="comment">//UNO Pin 3 接点阵 14 脚(行 2)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row3 = <span class="number">4</span>;<span class="comment">//UNO Pin 4 接点阵 8 脚(行 3)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row4 = <span class="number">5</span>;<span class="comment">//UNO Pin 5 接点阵 12 脚(行 4)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row5 = <span class="number">17</span>;<span class="comment">// UNO Pin 17 接点阵 1 脚(行 5)  (A3)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row6 = <span class="number">16</span>;<span class="comment">//UNO Pin 16 接点阵 7 脚(行 6)   (A2)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row7 = <span class="number">15</span>;<span class="comment">// UNO Pin 15 接点阵 2 脚(行 7)  (A1)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> row8 = <span class="number">14</span>;<span class="comment">//UNO Pin 14 接点阵 5 脚(行 8)   (A0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col1 = <span class="number">6</span>;<span class="comment">//UNO Pin 6 接点阵 13 脚(列 1)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col2 = <span class="number">7</span>;<span class="comment">//UNO Pin 7 接点阵 3 脚(列 2)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col3 = <span class="number">8</span>;<span class="comment">//UNO Pin 8 接点阵 4 脚(列 3)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col4 = <span class="number">9</span>;<span class="comment">// UNO Pin 9 接点阵 10 脚(列 4)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col5 = <span class="number">10</span>;<span class="comment">//UNO Pin 10 接点阵 6 脚(列 5)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col6 = <span class="number">11</span>;<span class="comment">//UNO Pin 11 接点阵 11 脚(列 6)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col7 = <span class="number">12</span>;<span class="comment">//UNO Pin 12 接点阵 15 脚(列 7)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> col8 = <span class="number">13</span>;<span class="comment">//UNO Pin 13 接点阵 16 脚(列 8)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">int</span> i= <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">2</span>;i&lt;<span class="number">18</span>;i++)</span><br><span class="line">    pinMode(i,OUTPUT);<span class="comment">// 设置为输出</span></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">2</span>;i&lt;<span class="number">18</span>;i++)</span><br><span class="line">    digitalWrite(i,LOW);<span class="comment">// 拉低, 全灭</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">int</span> i;</span><br><span class="line">    <span class="comment">//the first LED turns on </span></span><br><span class="line">digitalWrite(row1,HIGH); </span><br><span class="line">digitalWrite(row2,LOW); </span><br><span class="line">digitalWrite(row3,LOW); </span><br><span class="line">digitalWrite(row4,LOW); </span><br><span class="line">digitalWrite(row5,LOW); </span><br><span class="line">digitalWrite(row6,LOW); </span><br><span class="line">digitalWrite(row7,LOW); </span><br><span class="line">digitalWrite(row8,LOW);</span><br><span class="line">digitalWrite(col1,LOW); </span><br><span class="line">digitalWrite(col2,HIGH); </span><br><span class="line">digitalWrite(col3,HIGH); </span><br><span class="line">digitalWrite(col4,HIGH); </span><br><span class="line">digitalWrite(col5,HIGH); </span><br><span class="line">digitalWrite(col6,HIGH); </span><br><span class="line">digitalWrite(col7,HIGH); </span><br><span class="line">digitalWrite(col8,HIGH); </span><br><span class="line">delay(<span class="number">1000</span>);</span><br><span class="line">      <span class="comment">//turn off all </span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">2</span>;i&lt;<span class="number">18</span>;i++) </span><br><span class="line">  digitalWrite(i,LOW); </span><br><span class="line">delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数码管实验"> 数码管实验 </h3><p><strong> 任务：</strong> 使用数码管, 通过编写程序实现数字的显示。 要求：设计合适的电路连接图, 编写程序实现数字的显示, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/17.jpg?x-oss-process=style/Comprass_Copyright" alt="17"></p><p> 本实验要求数码管循环显示 1 ～ 9 , 每隔 1 秒显示一个数字, 用共阴数码管。</p><p>数码管显示数字时, 只要将相应笔段点亮即可。每个数字对应一个子程序。在主程序中每隔 1 秒调用相应子程序, 让数码管循环显示 1 ～9 数字, 每一个数字显示的时间由延时时间来决定。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">int</span> z = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> a = <span class="number">7</span>; <span class="comment">// 数字 IO 口 7 连接数码管 a 段 </span></span><br><span class="line"><span class="built_in">int</span> b = <span class="number">6</span>; <span class="comment">// 数字 IO 口 6 连接数码管 b 段</span></span><br><span class="line"><span class="built_in">int</span> c = <span class="number">5</span>; <span class="comment">// 数字 IO 口 5 连接数码管 c 段</span></span><br><span class="line"><span class="built_in">int</span> d = <span class="number">11</span>; <span class="comment">// 数字 IO 口 11 连接数码管 d 段</span></span><br><span class="line"><span class="built_in">int</span> e = <span class="number">10</span>; <span class="comment">// 数字 IO 口 10 连接数码管 e 段</span></span><br><span class="line"><span class="built_in">int</span> f = <span class="number">8</span>; <span class="comment">// 数字 IO 口 8 连接数码管 f 段</span></span><br><span class="line"><span class="built_in">int</span> g = <span class="number">9</span>; <span class="comment">// 数字 IO 口 9 连接数码管 g 段</span></span><br><span class="line"><span class="built_in">int</span> dp = <span class="number">4</span>; <span class="comment">// 数字 IO 口 4 连接数码管小数点段</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_1</span>(<span class="params"><span class="keyword">void</span></span>)<span class="comment">// 显示数字 1</span></span></span><br><span class="line">&#123;</span><br><span class="line">  unsigned <span class="built_in">char</span> j;</span><br><span class="line">  digitalWrite(c, HIGH); <span class="comment">// 点亮 c 段</span></span><br><span class="line">  digitalWrite(b, HIGH); <span class="comment">// 点亮 b 段</span></span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">7</span>; j &lt;= <span class="number">11</span>; j++) <span class="comment">//7~11 口相应段拉低：a,f,g,e,d</span></span><br><span class="line">    digitalWrite(j, LOW);</span><br><span class="line">  digitalWrite(dp, LOW); <span class="comment">// 小数点不点亮</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_2</span>(<span class="params"><span class="keyword">void</span></span>) <span class="comment">// 显示数字 2</span></span></span><br><span class="line">&#123;</span><br><span class="line">  unsigned <span class="built_in">char</span> j;</span><br><span class="line">  digitalWrite(b, HIGH);</span><br><span class="line">  digitalWrite(a, HIGH);</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">9</span>; j &lt;= <span class="number">11</span>; j++)</span><br><span class="line">    digitalWrite(j, HIGH);</span><br><span class="line">  digitalWrite(dp, LOW);</span><br><span class="line">  digitalWrite(c, LOW);</span><br><span class="line">  digitalWrite(f, LOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_3</span>(<span class="params"><span class="keyword">void</span></span>) <span class="comment">// 显示数字 3</span></span></span><br><span class="line">&#123;</span><br><span class="line">  unsigned <span class="built_in">char</span> j;</span><br><span class="line">  digitalWrite(g, HIGH);</span><br><span class="line">  digitalWrite(d, HIGH);</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">5</span>; j &lt;= <span class="number">7</span>; j++)</span><br><span class="line">    digitalWrite(j, HIGH);</span><br><span class="line">  digitalWrite(dp, LOW);</span><br><span class="line">  digitalWrite(f, LOW);</span><br><span class="line">  digitalWrite(e, LOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_4</span>(<span class="params"><span class="keyword">void</span></span>) <span class="comment">// 显示数字 4</span></span></span><br><span class="line">&#123;</span><br><span class="line">  digitalWrite(c, HIGH);</span><br><span class="line">  digitalWrite(b, HIGH);</span><br><span class="line">  digitalWrite(f, HIGH);</span><br><span class="line">  digitalWrite(g, HIGH);</span><br><span class="line">  digitalWrite(dp, LOW);</span><br><span class="line">  digitalWrite(a, LOW);</span><br><span class="line">  digitalWrite(e, LOW);</span><br><span class="line">  digitalWrite(d, LOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_5</span>(<span class="params"><span class="keyword">void</span></span>) <span class="comment">// 显示数字 5</span></span></span><br><span class="line">&#123;</span><br><span class="line">  unsigned <span class="built_in">char</span> j;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">7</span>; j &lt;= <span class="number">9</span>; j++)</span><br><span class="line">    digitalWrite(j, HIGH);</span><br><span class="line">  digitalWrite(c, HIGH);</span><br><span class="line">  digitalWrite(d, HIGH);</span><br><span class="line">  digitalWrite(dp, LOW);</span><br><span class="line">  digitalWrite(b, LOW);</span><br><span class="line">  digitalWrite(e, LOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_6</span>(<span class="params"><span class="keyword">void</span></span>) <span class="comment">// 显示数字 6</span></span></span><br><span class="line">&#123;</span><br><span class="line">  unsigned <span class="built_in">char</span> j;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">7</span>; j &lt;= <span class="number">11</span>; j++)</span><br><span class="line">    digitalWrite(j, HIGH);</span><br><span class="line">  digitalWrite(c, HIGH);</span><br><span class="line">  digitalWrite(dp, LOW);</span><br><span class="line">  digitalWrite(b, LOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_7</span>(<span class="params"><span class="keyword">void</span></span>) <span class="comment">// 显示数字 7</span></span></span><br><span class="line">&#123;</span><br><span class="line">  unsigned <span class="built_in">char</span> j;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">5</span>; j &lt;= <span class="number">7</span>; j++)</span><br><span class="line">    digitalWrite(j, HIGH);</span><br><span class="line">  digitalWrite(dp, LOW);</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">8</span>; j &lt;= <span class="number">11</span>; j++)</span><br><span class="line">    digitalWrite(j, LOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_8</span>(<span class="params"><span class="keyword">void</span></span>)<span class="comment">// 显示数字 8</span></span></span><br><span class="line">&#123;</span><br><span class="line">  unsigned <span class="built_in">char</span> j;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">5</span>; j &lt;= <span class="number">11</span>; j++)</span><br><span class="line">    digitalWrite(j, HIGH);</span><br><span class="line">  digitalWrite(dp, LOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digital_9</span>(<span class="params"><span class="keyword">void</span></span>) <span class="comment">// 显示数字 9</span></span></span><br><span class="line">&#123;</span><br><span class="line">  digitalWrite(a, HIGH);</span><br><span class="line">  digitalWrite(b, HIGH);</span><br><span class="line">  digitalWrite(c, HIGH);</span><br><span class="line">  digitalWrite(d, HIGH);</span><br><span class="line">  digitalWrite(e, LOW);</span><br><span class="line">  digitalWrite(f, HIGH);</span><br><span class="line">  digitalWrite(g, HIGH);</span><br><span class="line">  digitalWrite(dp, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">int</span> i;<span class="comment">// 变量声明</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">4</span>; i &lt;= <span class="number">11</span>; i++)</span><br><span class="line">    pinMode(i, OUTPUT); <span class="comment">// 设置 4-11 为输出口</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    digital_1();<span class="comment">// 显示数字 1</span></span><br><span class="line">    delay(<span class="number">1000</span>);<span class="comment">// 延时 1s</span></span><br><span class="line">    digital_2();<span class="comment">// 显示数字 2</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">    digital_3();<span class="comment">// 显示数字 3</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">    digital_4();<span class="comment">// 显示数字 4</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">    digital_5();<span class="comment">// 显示数字 5</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">    digital_6();<span class="comment">// 显示数字 6</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">    digital_7();<span class="comment">// 显示数字 7</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">    digital_8();<span class="comment">// 显示数字 8</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">    digital_9();<span class="comment">// 显示数字 9</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时 1s</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四位数码管实验"> 四位数码管实验 </h3><p><strong> 任务：</strong> 使用四位数码管, 通过编写程序实现数字的显示。 要求：设计合适的电路连接图, 编写程序实现数字的显示, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/18-5467%E5%AD%A6%E5%8F%B7.jpg?x-oss-process=style/Comprass_Copyright" alt="18-5467 学号"></p><p> 本实验用 UNO 驱动一块四位共阴数码管。使第一位显示 5 , 第二位显示 4, 第三位显示 6, 第四位显示 7, 每次只显示一位, 显示间隔 0.5 秒。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_A 2  //Arduino Pin2---&gt;SegLed Pin11</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_B 3  //Arduino Pin3---&gt;SegLed Pin7</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_C 4  //Arduino Pin4---&gt;SegLed Pin4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_D 5  //Arduino Pin5---&gt;SegLed Pin2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_E 6  //Arduino Pin6---&gt;SegLed Pin1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_F 7  //Arduino Pin7---&gt;SegLed Pin10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_G 8  //Arduino Pin8---&gt;SegLed Pin5    </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_H 9  //Arduino Pin9---&gt;SegLed Pin3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COM1 10  //Arduino Pin10---&gt;SegLed Pin12</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COM2 11  //Arduino Pin11---&gt;SegLed Pin9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COM3 12  //Arduino Pin12---&gt;SegLed Pin8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COM4 13  //Arduino Pin13---&gt;SegLed Pin6</span></span><br><span class="line">unsigned <span class="built_in">char</span> table[<span class="number">10</span>][<span class="number">8</span>] =</span><br><span class="line">&#123;</span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,<span class="comment">//0</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,<span class="comment">//1</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,<span class="comment">//2</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,<span class="comment">//3</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,<span class="comment">//4</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,<span class="comment">//5</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,<span class="comment">//6</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,<span class="comment">//7</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,<span class="comment">//8</span></span><br><span class="line">  &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;<span class="comment">//9</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(SEG_A, OUTPUT);<span class="comment">// 设置为输出引脚 </span></span><br><span class="line">  pinMode(SEG_B, OUTPUT);</span><br><span class="line">  pinMode(SEG_C, OUTPUT);</span><br><span class="line">  pinMode(SEG_D, OUTPUT);</span><br><span class="line">  pinMode(SEG_E, OUTPUT);</span><br><span class="line">  pinMode(SEG_F, OUTPUT);</span><br><span class="line">  pinMode(SEG_G, OUTPUT);</span><br><span class="line">  pinMode(SEG_H, OUTPUT);</span><br><span class="line">  pinMode(COM1, OUTPUT);</span><br><span class="line">  pinMode(COM2, OUTPUT);</span><br><span class="line">  pinMode(COM3, OUTPUT);</span><br><span class="line">  pinMode(COM4, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  Display(<span class="number">1</span>, <span class="number">5</span>);<span class="comment">// 第 1 位显示 1</span></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  Display(<span class="number">2</span>, <span class="number">4</span>);<span class="comment">// 第 2 位显示 2</span></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  Display(<span class="number">3</span>, <span class="number">6</span>);<span class="comment">// 第 3 位显示 3</span></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  Display(<span class="number">4</span>, <span class="number">3</span>);<span class="comment">// 第 4 位显示 4</span></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span>(<span class="params">unsigned <span class="built_in">char</span> com, unsigned <span class="built_in">char</span> num</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  digitalWrite(SEG_A, LOW);<span class="comment">// 去除余晖</span></span><br><span class="line">  digitalWrite(SEG_B, LOW);</span><br><span class="line">  digitalWrite(SEG_C, LOW);</span><br><span class="line">  digitalWrite(SEG_D, LOW);</span><br><span class="line">  digitalWrite(SEG_E, LOW);</span><br><span class="line">  digitalWrite(SEG_F, LOW);</span><br><span class="line">  digitalWrite(SEG_G, LOW);</span><br><span class="line">  digitalWrite(SEG_H, LOW);</span><br><span class="line">  <span class="keyword">switch</span> (com)<span class="comment">// 选通位选</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      digitalWrite(COM1, LOW);<span class="comment">// 选择位 1</span></span><br><span class="line">      digitalWrite(COM2, HIGH);</span><br><span class="line">      digitalWrite(COM3, HIGH);</span><br><span class="line">      digitalWrite(COM4, HIGH);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      digitalWrite(COM1, HIGH);</span><br><span class="line">      digitalWrite(COM2, LOW);<span class="comment">// 选择位 2</span></span><br><span class="line">      digitalWrite(COM3, HIGH);</span><br><span class="line">      digitalWrite(COM4, HIGH);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      digitalWrite(COM1, HIGH);</span><br><span class="line">      digitalWrite(COM2, HIGH);</span><br><span class="line">      digitalWrite(COM3, LOW);<span class="comment">// 选择位 3</span></span><br><span class="line">      digitalWrite(COM4, HIGH);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      digitalWrite(COM1, HIGH);</span><br><span class="line">      digitalWrite(COM2, HIGH);</span><br><span class="line">      digitalWrite(COM3, HIGH);</span><br><span class="line">      digitalWrite(COM4, LOW);<span class="comment">// 选择位 4</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="literal">default</span>: <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  digitalWrite(SEG_A, table[num][<span class="number">7</span>]);<span class="comment">//a 查询码值表</span></span><br><span class="line">  digitalWrite(SEG_B, table[num][<span class="number">6</span>]);</span><br><span class="line">  digitalWrite(SEG_C, table[num][<span class="number">5</span>]);</span><br><span class="line">  digitalWrite(SEG_D, table[num][<span class="number">4</span>]);</span><br><span class="line">  digitalWrite(SEG_E, table[num][<span class="number">3</span>]);</span><br><span class="line">  digitalWrite(SEG_F, table[num][<span class="number">2</span>]);</span><br><span class="line">  digitalWrite(SEG_G, table[num][<span class="number">1</span>]);</span><br><span class="line">  digitalWrite(SEG_H, table[num][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1602 液晶实验">1602 液晶实验</h3><p><strong> 任务：</strong> 使用 1602 液晶显示屏, 通过编写程序实现文字和图案的显示。 要求：设计合适的电路连接图, 编写程序实现文字和图案的显示, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/19.jpg?x-oss-process=style/Comprass_Copyright" alt="19"></p><p>LCD 1602 是一款简易通用液晶, 可以显示 ASCII 码的英文字母 , 数。 字和标点符号（不能显示中文）。总共可以显示 2 行, 每行 16 个字符, 本实验使用 Arduino 直接驱动 1602 液晶显示文字。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;LiquidCrystal.h&gt; // 申明 1602 液晶的函数库</span></span><br><span class="line"><span class="comment">// 申明 1602 液晶的引脚所连接的 Arduino 数字端口, 8 线或 4 线数据模式, 任选其一</span></span><br><span class="line"><span class="function">LiquidCrystal <span class="title">lcd</span>(<span class="params"><span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span></span>)</span>; <span class="comment">//8 数据口模式连线声明</span></span><br><span class="line"><span class="comment">//LiquidCrystal lcd(12,11,10,5,4,3,2); //4 数据口模式连线声明</span></span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  lcd.begin(<span class="number">16</span>, <span class="number">2</span>);     <span class="comment">// 初始化 1602 液晶工作                       模式</span></span><br><span class="line">  <span class="comment">// 定义 1602 液晶显示范围为 2 行 16 列字符</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    lcd.home();        <span class="comment">// 把光标移回左上角, 即从头开始输出</span></span><br><span class="line">    lcd.print(<span class="string">&quot;Hello World&quot;</span>); <span class="comment">// 显示</span></span><br><span class="line">    lcd.setCursor(<span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// 把光标定位在第 1 行, 第 0 列</span></span><br><span class="line">    lcd.print(<span class="string">&quot;Welcome to BST-Arduino&quot;</span>);       <span class="comment">// 显示</span></span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      lcd.noDisplay();</span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">      lcd.display();</span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      lcd.scrollDisplayLeft();</span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    lcd.clear();</span><br><span class="line">    lcd.setCursor(<span class="number">0</span>, <span class="number">0</span>);       <span class="comment">// 把光标移回左上角, 即从头开始输出</span></span><br><span class="line">    lcd.print(<span class="string">&quot;Hi,&quot;</span>); <span class="comment">// 显示</span></span><br><span class="line">    lcd.setCursor(<span class="number">0</span>, <span class="number">1</span>);  <span class="comment">// 把光标定位在第 1 行, 第 0 列</span></span><br><span class="line">    lcd.print(<span class="string">&quot;Arduino is fun&quot;</span>);       <span class="comment">// 显示</span></span><br><span class="line">    delay(<span class="number">2000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;&#125;<span class="comment">// 初始化已完成显示, 主循环无动作</span></span><br></pre></td></tr></table></figure><h3 id="舵机控制实验"> 舵机控制实验 </h3><p><strong> 任务：</strong> 使用外部舵机, 通过编写程序实现舵机的控制。 要求：设计合适的电路连接图, 编写程序实现舵机的控制, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/20.jpg?x-oss-process=style/Comprass_Copyright" alt="20"></p><p> 舵机也叫伺服电机, 伺服马达（Servo ）。早期在机器人模型上使用最多, 用于控制模型的舵面。舵机接受一个控制指令后可以自动转动到一个比较精确的角度, 非常适合在关节型机器人产品使用。</p><p><img src="https://blog.jingvc.com/pic/20-2.png?x-oss-process=style/Comprass_Copyright" alt="20-2"></p><p>在串口监视器输入数字后, 可控制舵机实现转动；</p><p>Arduino 控制舵机有两种方法：</p><ul><li>通过普通数字口产生不同占空比的方波, 模拟 PWM 信号进行舵机定位。</li><li>利用 Arduino 自带 Servo 函数控制。优点：编程简单；缺点：UNO 只能利用数字 9 口和 10 口控制 2 路舵机。</li><li>UNO 驱动能力有限, 控制 2 个及以上舵机时需外接电源。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UART send 1~9==&gt;20~180 degree</span></span><br><span class="line"><span class="built_in">int</span> servopin = <span class="number">9</span>; <span class="comment">// 设置舵机驱动脚到数字口 9</span></span><br><span class="line"><span class="built_in">int</span> myangle;<span class="comment">// 定义角度变量 </span></span><br><span class="line"><span class="built_in">int</span> pulsewidth;<span class="comment">// 定义脉宽变量</span></span><br><span class="line"><span class="built_in">int</span> val;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">servopulse</span>(<span class="params"><span class="built_in">int</span> servopin, <span class="built_in">int</span> myangle</span>) <span class="comment">/* 定义一个脉冲函数, 用来模拟方式产生 PWM 值 */</span></span></span><br><span class="line">&#123;</span><br><span class="line">  pulsewidth = (myangle * <span class="number">11</span>) + <span class="number">500</span>; <span class="comment">// 将角度转化为 500-2480 的脉宽值</span></span><br><span class="line">  digitalWrite(servopin, HIGH); <span class="comment">// 将舵机接口电平置高</span></span><br><span class="line">  delayMicroseconds(pulsewidth);<span class="comment">// 延时脉宽值的微秒数</span></span><br><span class="line">  digitalWrite(servopin, LOW); <span class="comment">// 将舵机接口电平置低</span></span><br><span class="line">  delay(<span class="number">20</span> - pulsewidth / <span class="number">1000</span>); <span class="comment">// 延时周期内剩余时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(servopin, OUTPUT); <span class="comment">// 设定舵机接口为输出接口</span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);<span class="comment">// 设置波特率为 9600</span></span><br><span class="line">  Serial.println(<span class="string">&quot;servo=o_seral_simple ready&quot;</span> ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  val = Serial.read(); <span class="comment">// 读取串口收到的数据</span></span><br><span class="line">  <span class="keyword">if</span> (val &gt; <span class="string">&#x27;0&#x27;</span> &amp;&amp; val &lt;= <span class="string">&#x27;9&#x27;</span>) <span class="comment">// 判断收到数据值是否符合范围</span></span><br><span class="line">  &#123;</span><br><span class="line">    val = val - <span class="string">&#x27;0&#x27;</span>; <span class="comment">// 将 ASCII 码转换成数值, 例 &#x27;9&#x27;-&#x27;0&#x27;=0x39-0x30=9</span></span><br><span class="line">    val = val * (<span class="number">180</span> / <span class="number">9</span>); <span class="comment">// 将数字转化为角度, 例 9*（180/9）=180</span></span><br><span class="line">    Serial.print(<span class="string">&quot;moving servo to &quot;</span>);</span><br><span class="line">    Serial.print(val, DEC);</span><br><span class="line">    Serial.println();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">50</span>; i++) <span class="comment">// 产生 PWM 个数, 等效延时以保证能转到响应角度</span></span><br><span class="line">    &#123;</span><br><span class="line">      servopulse(servopin, val); <span class="comment">// 模拟产生 PWM</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步进电机实验"> 步进电机实验 </h3><p><strong> 任务：</strong> 使用外部步进电机, 通过编写程序实现步进电机的控制。 要求：设计合适的电路连接图, 编写程序实现步进电机的控制, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/21.jpg?x-oss-process=style/Comprass_Copyright" alt="21"></p><p><img src="https://blog.jingvc.com/pic/21-2.png?x-oss-process=style/Comprass_Copyright" alt="21-2"></p><p> 步进电机是一种将电脉冲转化为角位移的执行机构。当步进驱动器接收到一个脉冲信号, 它就驱动步进电机按设定的方向转动一个固定的角度（即步进角）。可以通过控制脉冲个数来控制角位移量, 从而达到准确定位目的 ；也可以通过控制脉冲频率来控制电机转动的速度和加速度, 从而达到调速目的。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;Stepper.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> steps 100</span></span><br><span class="line"><span class="function">Stepper <span class="title">Stepper</span>(<span class="params">steps, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span></span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  Stepper.setSpeed(<span class="number">90</span>);</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;clockwise&quot;</span>);</span><br><span class="line">    Stepper.step(<span class="number">2048</span>); </span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;counterclockwise&quot;</span>);</span><br><span class="line">    Stepper.step(<span class="number">-1024</span>);</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include&lt;Stepper.h&gt;</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> stepsPerRevolution = <span class="number">64</span>;</span><br><span class="line"><span class="function">Stepper <span class="title">myStepper</span>(<span class="params">stepsPerRevolution, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span></span>)</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> aInPin = A0;</span><br><span class="line"><span class="built_in">int</span> val;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> &#123;</span><br><span class="line">  myStepper.setSpeed(<span class="number">200</span>);</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> &#123;</span><br><span class="line">  val = analogRead(aInPin);</span><br><span class="line">  val = map(val, <span class="number">0</span>, <span class="number">1023</span>, <span class="number">0</span>, <span class="number">99</span>);</span><br><span class="line">  Serial.println(val);</span><br><span class="line">  <span class="keyword">if</span> (val &gt; <span class="number">50</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;clockwise&quot;</span>);</span><br><span class="line">    myStepper.step(stepsPerRevolution / <span class="number">2</span>);</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;counterclockwise&quot;</span>);</span><br><span class="line">    myStepper.step(-stepsPerRevolution / <span class="number">2</span>);</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="红外遥控实验">红外遥控实验 </h3><p><strong> 任务：</strong> 使用红外遥控器, 通过编写程序实现红外遥控的功能。 要求：设计合适的电路连接图, 编写程序实现红外遥控的功能, 记录测试数据并进行分析。</p><p>红外遥控系统由调制, 发射, 接收和解调等部分组成。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/22.jpg?x-oss-process=style/Comprass_Copyright" alt="22"></p><p> 一体化红外接收头（1838）, 内部集成了红外接收电路, 包括红外检测二极管, 放大器, 限幅器, 带通滤波电容, 积分电路, 比较器等。能够将接收到的调制波进行解调, 还原为遥控器发射出的原始编码。红外检测二极管将红外光信号转换为微弱的电信号。本实验利用红外遥控器发出的红外载波信号, 经一体化红外接收头接收并解调, 来控制相应 LED 通断。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;IRremote.h&gt;// 包含红外库 </span></span><br><span class="line"><span class="built_in">int</span> RECV_PIN = <span class="number">11</span>;<span class="comment">// 端口声明</span></span><br><span class="line"><span class="built_in">int</span> LED1 = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">int</span> LED2 = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">int</span> LED3 = <span class="number">4</span>;</span><br><span class="line"><span class="built_in">int</span> LED4 = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">int</span> LED5 = <span class="number">6</span>;</span><br><span class="line"><span class="built_in">int</span> LED6 = <span class="number">7</span>;</span><br><span class="line"><span class="built_in">long</span> on1  = <span class="number">0x00FF6897</span>;<span class="comment">// 编码示例, 与发送匹配用</span></span><br><span class="line"><span class="built_in">long</span> off1 = <span class="number">0x00ff30CF</span>;</span><br><span class="line"><span class="built_in">long</span> on2 = <span class="number">0x00FF9867</span>;</span><br><span class="line"><span class="built_in">long</span> off2 = <span class="number">0x00FF18E7</span>;</span><br><span class="line"><span class="built_in">long</span> on3 = <span class="number">0x00FFB04F</span>;</span><br><span class="line"><span class="built_in">long</span> off3 = <span class="number">0x00FF7A85</span>;</span><br><span class="line"><span class="built_in">long</span> on4 = <span class="number">0x00FF10EF</span>;</span><br><span class="line"><span class="built_in">long</span> off4 = <span class="number">0x00FF42BD</span>;</span><br><span class="line"><span class="built_in">long</span> on5 = <span class="number">0x00FF38C7</span>;</span><br><span class="line"><span class="built_in">long</span> off5 = <span class="number">0x00FF4AB5</span>;</span><br><span class="line"><span class="built_in">long</span> on6 = <span class="number">0x00FF5AA5</span>;</span><br><span class="line"><span class="built_in">long</span> off6 = <span class="number">0x00FF52AD</span>;</span><br><span class="line"><span class="function">IRrecv <span class="title">irrecv</span>(<span class="params">RECV_PIN</span>)</span>;</span><br><span class="line">decode_results results;<span class="comment">// 结构声明</span></span><br><span class="line"><span class="comment">// Dumps out the decode_results structure.</span></span><br><span class="line"><span class="comment">// Call this after IRrecv::decode()</span></span><br><span class="line"><span class="comment">// void * to work around compiler issue</span></span><br><span class="line"><span class="comment">//void dump(void *v) &#123;</span></span><br><span class="line"><span class="comment">//  decode_results *results = (decode_results *)v</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dump</span>(<span class="params">decode_results *results</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">int</span> count = results-&gt;rawlen;</span><br><span class="line">  <span class="keyword">if</span> (results-&gt;decode_type == UNKNOWN)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Could not decode message&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (results-&gt;decode_type == NEC)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;Decoded NEC: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (results-&gt;decode_type == SONY)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;Decoded SONY: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (results-&gt;decode_type == RC5)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;Decoded RC5: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (results-&gt;decode_type == RC6)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;Decoded RC6: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.print(results-&gt;<span class="keyword">value</span>, HEX);</span><br><span class="line">    Serial.print(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">    Serial.print(results-&gt;bits, DEC);</span><br><span class="line">    Serial.println(<span class="string">&quot; bits)&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.print(<span class="string">&quot;Raw (&quot;</span>);</span><br><span class="line">  Serial.print(count, DEC);</span><br><span class="line">  Serial.print(<span class="string">&quot;): &quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ((i % <span class="number">2</span>) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(results-&gt;rawbuf[i]*USECPERTICK, DEC);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(-(<span class="built_in">int</span>)results-&gt;rawbuf[i]*USECPERTICK, DEC);</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  pinMode(RECV_PIN, INPUT);   <span class="comment">// 端口模式, 输入</span></span><br><span class="line">  pinMode(LED1, OUTPUT);<span class="comment">// 端口模式, 输出</span></span><br><span class="line">  pinMode(LED2, OUTPUT);<span class="comment">// 端口模式, 输出</span></span><br><span class="line">  pinMode(LED3, OUTPUT);<span class="comment">// 端口模式, 输出</span></span><br><span class="line">  pinMode(LED4, OUTPUT);<span class="comment">// 端口模式, 输出</span></span><br><span class="line">  pinMode(LED5, OUTPUT);<span class="comment">// 端口模式, 输出</span></span><br><span class="line">  pinMode(LED6, OUTPUT);<span class="comment">// 端口模式, 输出</span></span><br><span class="line">  pinMode(<span class="number">13</span>, OUTPUT);<span class="comment">// 端口模式, 输出</span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);<span class="comment">// 波特率 9600</span></span><br><span class="line">  irrecv.enableIRIn(); <span class="comment">// Start the receiver</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> <span class="keyword">on</span> = <span class="number">0</span>;</span><br><span class="line">unsigned <span class="built_in">long</span> last = millis();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (irrecv.decode(&amp;results)) <span class="comment">// 调用库函数：解码</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// If it&#x27;s been at least 1/4 second since the last</span></span><br><span class="line">    <span class="comment">// IR received, toggle the relay</span></span><br><span class="line">    <span class="keyword">if</span> (millis() - last &gt; <span class="number">250</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">on</span> = !<span class="keyword">on</span>;</span><br><span class="line">      digitalWrite(<span class="number">13</span>, <span class="keyword">on</span> ? HIGH : LOW);</span><br><span class="line">      dump(&amp;results);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == on1 )</span><br><span class="line">      digitalWrite(LED1, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == off1 )</span><br><span class="line">      digitalWrite(LED1, LOW);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == on2 )</span><br><span class="line">      digitalWrite(LED2, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == off2 )</span><br><span class="line">      digitalWrite(LED2, LOW);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == on3 )</span><br><span class="line">      digitalWrite(LED3, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == off3 )</span><br><span class="line">      digitalWrite(LED3, LOW);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == on4 )</span><br><span class="line">      digitalWrite(LED4, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == off4 )</span><br><span class="line">      digitalWrite(LED4, LOW);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == on5 )</span><br><span class="line">      digitalWrite(LED5, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == off5 )</span><br><span class="line">      digitalWrite(LED5, LOW);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == on6 )</span><br><span class="line">      digitalWrite(LED6, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (results.<span class="keyword">value</span> == off6 )</span><br><span class="line">      digitalWrite(LED6, LOW);</span><br><span class="line">    last = millis();</span><br><span class="line">    irrecv.resume(); <span class="comment">// Receive the next value</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="超声波测距实验"> 超声波测距实验 </h3><p><strong> 任务：</strong> 使用超声波传感器, 通过编写程序实现距离的测量。 要求：设计合适的电路连接图, 编写程序实现距离的测量, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/23.jpg?x-oss-process=style/Comprass_Copyright" alt="23"></p><p>HC-SR04 超 超 声波测距模块可提供 2cm-400cm 的非接触式距离感测 , 测距精度达 3mm, 模块包括超声波发射器, 接收器与控制电路。</p><p><img src="https://blog.jingvc.com/pic/23-2.png?x-oss-process=style/Comprass_Copyright" alt="23-2"></p><p> 本实验利用超声波测得的距离从串口中显示。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> TrigPin = <span class="number">2</span>; </span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> EchoPin = <span class="number">3</span>; </span><br><span class="line"><span class="built_in">float</span> cm; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> </span><br><span class="line">&#123; </span><br><span class="line">  Serial.begin(<span class="number">9600</span>); </span><br><span class="line">  pinMode(TrigPin, OUTPUT); </span><br><span class="line">  pinMode(EchoPin, INPUT); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> </span><br><span class="line">&#123; </span><br><span class="line">  digitalWrite(TrigPin, LOW); <span class="comment">// 低高低电平发一个短时间脉冲去 TrigPin </span></span><br><span class="line">  delayMicroseconds(<span class="number">2</span>); </span><br><span class="line">  digitalWrite(TrigPin, HIGH); </span><br><span class="line">  delayMicroseconds(<span class="number">10</span>); </span><br><span class="line">  digitalWrite(TrigPin, LOW); </span><br><span class="line">  cm = pulseIn(EchoPin, HIGH) / <span class="number">58.0</span>; <span class="comment">// 将回波时间换算成 cm </span></span><br><span class="line">  cm = (<span class="built_in">int</span>(cm * <span class="number">100.0</span>)) / <span class="number">100.0</span>; <span class="comment">// 保留两位小数 </span></span><br><span class="line">  Serial.print(cm); Serial.print(<span class="string">&quot;cm&quot;</span>); </span><br><span class="line">  Serial.println(); </span><br><span class="line">  delay(<span class="number">1000</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;LiquidCrystal.h&gt;</span></span><br><span class="line"><span class="function">LiquidCrystal <span class="title">lcd</span>(<span class="params"><span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span></span>)</span>; <span class="comment">//4 数据口模式 </span></span><br><span class="line"><span class="built_in">int</span> Echo = A5, Trig = A4, Distance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  pinMode(Echo, INPUT);</span><br><span class="line">  pinMode(Trig, OUTPUT);</span><br><span class="line">  lcd.begin(<span class="number">16</span>, <span class="number">2</span>);     <span class="comment">// 初始化 1602 工作模式为 2 行 16 列</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Distance_test</span>()</span>  &#123;</span><br><span class="line">  digitalWrite(Trig, LOW);</span><br><span class="line">  delayMicroseconds(<span class="number">2</span>);</span><br><span class="line">  digitalWrite(Trig, HIGH);</span><br><span class="line">  delayMicroseconds(<span class="number">10</span>);</span><br><span class="line">  digitalWrite(Trig, LOW);</span><br><span class="line">  <span class="built_in">float</span> Fdistance = pulseIn(Echo, HIGH);  <span class="comment">// 读取高电平时间(单位：微秒)</span></span><br><span class="line">  Fdistance = Fdistance / <span class="number">58</span>;    <span class="comment">//Y 米 =（X 秒 *344）/2, X 秒 =（ 2*Y 米）/344</span></span><br><span class="line">                                 <span class="comment">//==》X 秒 =0.0058*Y 米 ==》厘米 = 微秒 /58</span></span><br><span class="line">  Serial.print(<span class="string">&quot;Distance:&quot;</span>);</span><br><span class="line">  Serial.println(Fdistance);    <span class="comment">// 回车后显示距离</span></span><br><span class="line">  Distance = Fdistance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> &#123;</span><br><span class="line">  Distance_test();</span><br><span class="line">  <span class="keyword">if</span> ((<span class="number">2</span> &lt; Distance) &amp; (Distance &lt; <span class="number">400</span>)) <span class="comment">// 超声波测距范围 2cm 到 400cm</span></span><br><span class="line">  &#123;</span><br><span class="line">    lcd.home();        <span class="comment">// 把光标移回左上角, 即从头开始输出</span></span><br><span class="line">    lcd.print(<span class="string">&quot;    Distance: &quot;</span>);       <span class="comment">// 显示</span></span><br><span class="line">    lcd.setCursor(<span class="number">6</span>, <span class="number">2</span>);  <span class="comment">// 把光标定位在第 2 行, 第 6 列</span></span><br><span class="line">    lcd.print(Distance);       <span class="comment">// 显示距离</span></span><br><span class="line">    lcd.print(<span class="string">&quot;cm&quot;</span>);        <span class="comment">// 显示</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    lcd.home();        <span class="comment">// 把光标移回左上角, 即从头开始输出</span></span><br><span class="line">    lcd.print(<span class="string">&quot;!!! Out of range&quot;</span>);       <span class="comment">// 显示超出距离</span></span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">250</span>);</span><br><span class="line">  lcd.clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="继电器实验"> 继电器实验 </h3><p><strong> 任务：</strong> 使用外部继电器, 通过编写程序实现继电器的控制。 要求：设计合适的电路连接图, 编写程序实现继电器的控制, 记录测试数据并进行分析。</p><p><strong>连接 UNO 板与电脑,UNO 板与拓展板 </strong></p><p><img src="https://blog.jingvc.com/pic/24.jpg?x-oss-process=style/Comprass_Copyright" alt="24"></p><p>Arduino I/O 口 输出电流能力有限（&lt; 40 mA ）, 当想要驱动大电流负载或高电压负载（如灯泡, 马达或大风扇）时,<br> 会需要一个中继电路, 最简单的办法是使用继电器。</p><p><img src="https://blog.jingvc.com/pic/24-2.png?x-oss-process=style/Comprass_Copyright" alt="24-2"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> buttonPin = <span class="number">2</span>; <span class="comment">// 按鈕(pushbutton)</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> relayPin = <span class="number">13</span>; <span class="comment">// 繼電器(Relay)</span></span><br><span class="line"><span class="built_in">int</span> relayState = <span class="number">0</span>; <span class="comment">// 繼電器狀態</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span>()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>); <span class="comment">// 開啟 Serial port, 通訊速率為 9600 bps</span></span><br><span class="line">  pinMode(buttonPin, INPUT); <span class="comment">// 把 buttonPin 設置成 INPUT</span></span><br><span class="line">  pinMode(relayPin, OUTPUT); <span class="comment">// 把 relayPin 設置成 OUTPUT</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">switchRelay</span>()</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (relayState == <span class="number">0</span>)</span><br><span class="line">    relayState = <span class="number">1</span>; <span class="comment">// 把繼電器狀態改為 ON</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    relayState = <span class="number">0</span>; <span class="comment">// 把繼電器狀態改為 OFF</span></span><br><span class="line">  digitalWrite(relayPin, relayState); <span class="comment">// 讓繼電器作動, 切換開關</span></span><br><span class="line">  Serial.print(<span class="string">&quot;Relay status: &quot;</span>); <span class="comment">// 把繼電器的狀態印到 Serial Port</span></span><br><span class="line">  Serial.println(relayState);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span>()</span> &#123;</span><br><span class="line">  <span class="built_in">int</span> buttonState; <span class="comment">// 讀取按鈕狀態</span></span><br><span class="line">  buttonState = digitalRead(buttonPin); <span class="comment">// 檢查按鈕是否被按下(pressed)</span></span><br><span class="line">  <span class="keyword">if</span> (buttonState == HIGH) &#123;</span><br><span class="line">    switchRelay(); <span class="comment">// 切換繼電器開關</span></span><br><span class="line">    delay(<span class="number">500</span>); <span class="comment">// 稍候 0.5 秒, 以免風扇切換太頻繁</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
    
    
    <summary type="html">学习电子电路实验基础,常用电子仪器及Arduino开发板平台上学习传感,显示,控制等模拟输入输出方法</summary>
    
    
    
    <category term="实践" scheme="https://jingvc.com/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="电子工程训练" scheme="https://jingvc.com/tags/%E7%94%B5%E5%AD%90%E5%B7%A5%E7%A8%8B%E8%AE%AD%E7%BB%83/"/>
    
  </entry>
  
  <entry>
    <title>基金选购指北</title>
    <link href="https://jingvc.com/post/b5c3.html"/>
    <id>https://jingvc.com/post/b5c3.html</id>
    <published>2023-03-01T00:00:00.000Z</published>
    <updated>2023-03-10T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="To-Do">To Do:</h2><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>先买几支基金</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>理论框架与简述 &amp; 数学推导</p>            </div><div class='checkbox yellow'><input type="checkbox" />            <p>Wind 数据收集</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>搭建机器学习云环境</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>机器学习理论与公式推导</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>ML- 模型训练、验证、评价</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>深度学习模型</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>DL- 模型训练、验证、评价</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>制定投资策略</p>            </div><h2 id="含义">含义</h2><p>基金：把空闲的钱交给专业投资人，委托其做资产配置；</p><img src="https://blog.jingvc.com/pic/%E5%9F%BA%E9%87%91%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB.png?x-oss-process=style/Comprass_Copyright"/><h2 id="指标：">指标：</h2><h3 id="基金的基本情况">基金的基本情况</h3><p>基金的基本情况一般有 <strong> 基金类型、基金公司、基金经理、评级、成立时间和规模等</strong>，了解这些我们可以大体了解一下基本情况。</p><h3 id="基金的估值和净值">基金的估值和净值</h3><p><strong>单位净值</strong>：是指当前的基金总净资产除以基金总份额，就是你持有的市值。累计就是把以前分红都加起来一起，没有分红过的基金这俩值是一样的。</p><h3 id="累计收益率走势">累计收益率走势</h3><p>基金从成立开始的累计收益，和累计净值走势对比，累计收益率走势更接近真实，如果一只基金长期累计收益率跑赢基准，而且回撤也较小，那么该基金未来业绩应该也不会差。</p><h3 id="基金对比排名走势">基金对比排名走势</h3><p>很直观的看出基金的业绩表现，算是一种参考，很好的选择基金的参考，可以很直观的看到基金业绩情况，同时可以和同类平均、沪深 300 有个对比。</p><h3 id="风险评估">风险评估</h3><h4 id="夏普比率">夏普比率</h4><p>它是用来衡量金融资产绩效表现的一个指标。夏普比率的核心思想就是选择收益率相近的基金承担的风险越小越好，选择风险水平相同的基金则收益率越高越好。总之，夏普比率越大，说明这只基金的绩效越好。</p><h4 id="标准差">标准差</h4><p>它反映了基金总回报率的波动幅度大小，数值越大，表明波动程度越厉害，稳定度越小，投资风险就越高。咱们基民买基金注重的是业绩。</p><h4 id="阿尔法系数、贝塔系数、R- 平方">阿尔法系数、贝塔系数、R 平方</h4><p>这类指标在我们实际中应用不多，多用于国外成熟的基金市场。</p><p>阿尔法系数，越大越好，贝塔系数，越低越好，R 平方，越高越精准。</p><h2 id="理论基础">理论基础</h2><h3 id="Sharpe">Sharpe</h3><h3 id="Markowitz">Markowitz</h3><h3 id="Fama">Fama</h3><h2 id="Machine-Learning">Machine Learning</h2><p>在量化投资的课程中，从代码层面接触了机器学习领域，但理论上还差很多，这学期选修了数院的专业课来弥补理论不足；</p><h3 id="机器学习">机器学习</h3><h4 id="Linear-Regression">Linear Regression</h4><h4 id="Random-Forest">Random Forest,</h4><h4 id="SVM">SVM</h4><h4 id="XGBoost">XGBoost</h4><h3 id="深度学习">深度学习</h3><h4 id="BP">BP</h4><h4 id="CNN">CNN</h4><h4 id="LSTM">LSTM</h4><h2 id="策略：">策略：</h2><h3 id="配比">配比</h3><h4 id="定期不定额">定期不定额</h4><p>4321——30% 低风险， 20% 较低风险（债券基金 / 养老基金）、30% 中等风险（混合型）、20% 较高风险（股票型 / 指数型）</p>]]></content>
    
    
    <summary type="html">了解基金，使用投资组合、资产定价理论等理论,利用机器学习方法来预测基金业绩，进而进行择机与择基</summary>
    
    
    
    <category term="Investment" scheme="https://jingvc.com/categories/Investment/"/>
    
    
    <category term="基金" scheme="https://jingvc.com/tags/%E5%9F%BA%E9%87%91/"/>
    
  </entry>
  
  <entry>
    <title>计量经济学基础</title>
    <link href="https://jingvc.com/post/3081.html"/>
    <id>https://jingvc.com/post/3081.html</id>
    <published>2023-02-25T00:00:00.000Z</published>
    <updated>2023-02-26T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一元线性回归模型参数估计">一元线性回归模型参数估计</h2><ul><li><p>回归方程与模型设定</p></li><li><p>经典假设 / 高斯假设——5 条（X, $\mu_i$）——同时满足为 BLUE 估计量</p></li><li><p>高斯 - 马尔可夫定理——同正态分布</p></li><li><p>OLS 估计, 离差形式估计量<br>$\widehat{\beta_1} = \frac {\sum x_i y_i} {\sum x_i^2}$</p></li><li><p>极大似然估计</p></li><li><p>经典假设下, OLS 估计的小样本与大样本性质</p></li><li><p>$\sigma$ 的估计, $\widehat{\sigma}$   估计参数的方差与总方差<br>$\widehat{\sigma^2}=\frac {e_i^2} {n-2}$</p></li><li><p>拟合优度 $R^2$ and $adj-R^2$</p></li><li><p>显著性检验 -t 统计量</p></li><li><p>$1-\alpha$ 置信水平下,  求参数或者估计量的置信区间</p></li><li><p>预测值的估计量 $\widehat {Y_0}$ 为 $E(Y|X=X_0)$ 的无偏估计量</p></li></ul><h2 id="多元线性回归">多元线性回归</h2><ul><li><p>展开式与矩阵形式的方程及模型设定</p></li><li><p>经典假设——5 条<br>及 $E(\mu_i)=0$ , $E(\mu’\mu)=\sigma^2I$ , $\mu\thicksim N(0,\sigma^2I)$</p></li><li><p>OLS 估计</p></li><li><p>极大似然估计</p></li><li><p>MM 矩估计<br>$\widehat{\beta}=(X’X)^{-1}X’Y$  ,(离差形式：$\widehat{\beta}=(x’x)^{-1}x’Y$)</p></li><li><p>满足经典假设的估计量性质：<br>线性性<br>无偏性<br>有效性 $cov(\widehat{\beta})=\sigma^2(X’X)^{-1}$</p></li><li><p>$\widehat{\sigma}^2=\frac{e’e} {n-k-1}$</p></li><li><p>拟合优度：<br>$R^2=\frac{ESS}{TSS}$  and $adj-R^2=1-(1-R^2)*\frac{n-1}{n-k-1}$<br>AIC(赤池信息准则)=$ln\frac{e’e}{n}+\frac{2(k+1)}{n}$<br>AC(施瓦茨准测)=$ln\frac{e’e}{n}+\frac{k}{n}lnn$</p></li><li><p>回归方程显著——F 统计量<br>$F=\frac{ESS/k}{RSS/n-k-1}=\frac{R^2}{1-R^2}\times\frac{n-k-1}{k}\thicksim F(k,n-k-1)$</p></li><li><p>受约束回归 / 解释变量数量是否变动：<br>构造 F 统计量<br>$F=\frac{RSS_R-RSS_U/(k_U-k_R)}{RSS_U/(n-k-1)}\thicksim F(k_U-k_R,n-k-1)$</p></li><li><p>变量显著性检验——t 统计量<br>$t=\frac{\widehat{\beta}-\beta}{se(\widehat{\beta}) }\thicksim t(n-2)$</p></li><li><p>参数置信区间：<br>$(\widehat{\beta}-t_{\frac{\alpha} {2} }\times se(\widehat{\beta} ),\widehat{\beta}+t_{\frac{\alpha} {2} }\times se(\widehat{\beta} ) )$</p><p>$se(\widehat{\beta} )=\widehat{\sigma} C_{ii}$</p></li><li><p>$E(Y_0)$ 的置信区间<br>$\widehat{Y_0}-t_{\frac{\alpha}{2}}\times se(\widehat{Y_0}),\widehat{Y_0}+t_{\frac{\alpha}{2}}\times se(\widehat{Y_0})$</p><p>$se(\widehat{Y_0})=\widehat{\sigma}\sqrt{X_0(X’X)^{-1}X_0’}$</p></li><li><p>$Y_0$ 的置信区间<br>$e_0=Y_0-\widehat{Y_0}$</p><p>$[\widehat{Y_0}-t_{\frac{\alpha}{2}}\times se(e_0),\widehat{Y_0}+t_{\frac{\alpha}{2}}\times se(e_0)]$</p><p>$se(e_0)=\widehat{\sigma}\sqrt{1+X_0(X’X)^{-1}X_0’}$</p></li></ul><h2 id="引入虚拟变量">引入虚拟变量</h2><ul><li>加法方式</li><li>乘法方式</li></ul><h2 id="违背基本假定">违背基本假定</h2><ul><li>误差项存在异方差</li><li>误差项之间序列相关</li><li>误差项与解释变量之间相关, 内生性问题</li><li>解释变量之间多重共线性</li><li>模型设定偏误</li></ul><h3 id="多重共线性">多重共线性</h3><ul><li><p>$c_1 x_{i1}+c_2 x_{i2}+…+c_k x_{ik}=0$ , 其中 $c_i$ 不全为 0——完全共线性</p></li><li><p>$c_1 x_{i1}+c_2 x_{i2}+…+c_k x_{ik}+v_i=0$, 其中 $c_i$ 不全为 0, $v_i$ 为随机误差项——近似共线性 / 交互相关</p></li><li><p>$\text{Rank}(X)&lt;k+1$——完全共线性</p></li><li><p>产生原因：<br>解释变量之间有相同变化趋势<br>模型设定问题<br>数据资料限制</p></li><li><p>多重共线性后果<br>OLS 估计量不存在 , 因为 $(X’X)^{-1}$ 不存在<br>OLS 估计量非有效, $Cov(\widehat{\beta})=\sigma^2(X’X)^{-1}$ 增大<br>$r^2=\frac{\sum x_{1i} x_{2i}}{\sum x_{1i} \sum x_{2i}}$</p><p>$r^2=0$ 时, 完全不共线, $var(\widehat{\beta})=\frac{\sigma^2}{\sum x_1^2}$</p><p>$0&lt;r^2&lt;1$, 近似共线, $var(\widehat{\beta})=\frac{\sigma^2}{\sum x_1^2} \times \frac{1}{1-r^2}&gt;\frac{\sigma^2}{\sum x_1^2}$, 其中 $\frac{1}{1-r^2}$ 为方差膨胀因子；</p><p>$r^2=1$, 完全贡献, $var(\widehat{\beta})=\infty$</p><p>估计量不具有经济含义<br>估计量反映的时解释变量对被解释变量的共同影响<br>变量显著性检验失去意义<br>存在多重共线性时, 估计参数的标准差和方差变大, 使 t 统计量变小<br>模型预测功能失效<br>预测的区间变大</p></li><li><p>检验多重共线性问题<br>检验是否存在多重共线性以及存在共线性的变量是哪些<br>是否存在：变量间的相关系数 $r^2$；或者看 OLS 估计中 $R^2$ 及 $F$ 统计量较大, 但 $t$ 统计量较小 / 不显著<br><strong>判定系数法</strong>：对每一解释变量以其他变量作为解释变量作辅助回归, $X_{ji}=\alpha_1 X_{1i}+\alpha_2 X_{2i}+…+\alpha_k X_{ki}$ 的判定系数 $R^2_j$, 给定显著水平下, 计算 $F=\frac{R^2_j/(k-1)}{(1-R^2_j)/(n-k)}\thicksim F(k-1,n-k)$<br><strong>排除变量法</strong>：比较排除一个解释变量与加入改解释变量的 $R^2$<br><strong>逐步回归法</strong>：逐步加入解释变量, 观察 $R^2$ 变化是否显著</p></li><li><p>克服多重共线性：<br>排除引起多重共线性的变量——逐步回归法<br>减小参数估计量的方差——岭回归法<br><strong>以引入偏误为代价, 减小参数估计量的方差</strong></p><p>$\widehat{\beta}=(X’X+D)^{-1}X’Y$</p></li></ul><h3 id="异方差">异方差</h3><ul><li><p>$var(\mu_i)=\sigma^2_i$, 选取不同的样本, 随机误差项的方差不再是常数, 则认为存在异方差；<br>同方差：$\sigma^2_i=$ 常数 $\neq f(X_i)$  and 异方差：$\sigma_i^2=f(X_i)$<br>由 $\sigma^2_i=f(X_i)$ 中 $\sigma$ 与 $X$ 的关系, 可得单调递增型 / 单调递减型 / 复杂型</p></li><li><p>异方差的后果：<br>参数估计量非有效：<br>OLS 估计量仍然无偏, 但不具有有效性, 由于 $E(\mu’\mu)=\sigma^2I$<br>大样本下具有一致性, 但不具有渐进有效性<br>变量显著性检验失去意义：<br>t 统计量的构造建立在 $\sigma^2$ 不变从而正确估计 $se(\widehat{\beta})$<br>模型预测失效：<br>预测值的置信区间使用到了参数的标准差估计量 $se(\widehat{\beta})$</p></li><li><p>检验异方差：<br>检验随机误差项与解释变量之间的相关性及相关“形式”</p><p>$var{\mu_i}=E(\mu_i^2)\approx \widetilde{e_i}^2$</p><p>$\widetilde{e_i}=Y_i-(\widehat{Y_i})_{ols}$</p><p><strong>图示法</strong>：<br>X-Y 的散点图——是否存在明显的散点扩大、缩小或复杂变化</p><p>X-$\widetilde{e}^2$ 的散点图——平行于 X 轴 / 正相关 / 负相关 / 曲线<br><strong>布罗施 - 帕甘 (B-P) 检验</strong>：<br>检验随机项的方差是否与解释变量相关</p><p>$\widetilde{e}^2=\delta_0+\delta_1X_{i1}+\delta_2X_{i2}+…+\delta_kX_{ik}+\varepsilon_i$</p><p>检验联合假设 $H_0:\delta_0=\delta_1=\delta_2=…=\delta_k=0$, 同方差的原假设</p><p>有 $R^2$ 构造 F 统计量或拉格朗日乘数(LM)</p><p>$F=\frac{R^2/k}{(1-R^2)/(n-k-1)}\thicksim F(k,n-k-1)$</p><p>$LM=n·R^2\thicksim X^2(K)$</p><p><strong>怀特 (White) 检验</strong>：<br>以二元为例<br>$Y_i=\beta_0+\beta_1X_{i1}+\beta_2X_{i2}+\mu_i$<br>计算 $\widetilde{e_i}^2=Y_i-\widehat{Y_i}$<br>辅助回归： $\widetilde{e_i}^2=\alpha_0+\alpha_1X_{i1}+\alpha_2X_{i2}+\alpha_3X_{i1}^2+\alpha_4X_{i2}^2+\alpha_5X_{i1}X_{i2}+\varepsilon_i$<br>同方差假定下： $nR^2\sim X^2(h)$ 渐进服从分布, 存在异方差时, 表明随机项的平方与解释变量的某种组合存在相关性</p></li><li><p>异方差的修正：<br><strong>加权最小二乘法</strong><br>对原模型进行加权, 使其不存在异方差, 之后使用 OLS 估计</p><p>$\sum W_ie_i^2$：对较小的 $e_i^2$ 赋予较大的权数, 较大的 $e_i^2$ 赋予较大的权数</p><p>$var(\mu_i)=E(\mu_i^2)=f(X_{ij})\sigma^2$</p><p>$\frac{1}{f(X_{ij})}Y_i=\frac{1}{f(X_{ij})}\beta_0+\frac{1}{f(X_{ij})}\beta_1X_{i1}+\frac{1}{f(X_{ij})}\beta_2X_{i2}+…+\frac{1}{f(X_{ij})}\beta_kX_{ik}+\frac{1}{f(X_{ij})}\mu_i$</p><p>$\Rightarrow var(\mu_i^*)=\frac{1}{f(X_{ij})}E(\mu_i^2)=\sigma^2$</p><p>$\Rightarrow \widehat {\beta} = (X ^ { * ’} X ^ * ) ^ {-1} X ^ {* ’} Y ^ *$</p><p>方差 $\mu$ 与 $X$ 的函数关系时估计, 成为可行的广义最小二乘法；</p><p><strong>异方差稳健标准误法</strong><br>异方差只影响估计量的标准差和方差, 不影响无偏性与一致性, 修正相应方差即可；<br>得到的并非有效估计量, 但可以得到 OLS 正确方差估计, 使统计检验及预测区间更加可靠；</p></li></ul><h3 id="内生解释变量">内生解释变量</h3><ul><li><p>内生解释变量：<br>内生解释变量与随机误差项同期相关, 异期不相关；<br>内生解释变量与随机干扰项同期相关；</p></li><li><p>内生解释变量产生原因：<br>被解释变量与解释变量双向因果——联立因果关系<br>使用联立方程模型来描述互为因果关系；<br>联立方程模型的每个方程为结构方程；<br>遗漏了重要解释变量, 且所遗漏的解释变量与其他解释变量同期相关<br>解释变量存在测量误差</p></li><li><p>内生解释变量问题的后果：<br>不同性质的内生解释变量会产生不同的后果<br>对截距项和斜率项同时存在影响, 可能高估也可能低估；<br>参数估计量有偏；大样本下, 不同期相关是一致估计量, 同期相关是非一致估计量；</p></li><li><p>工具变量法：<br>满足条件：与内生解释变量相关性；与随机误差项不相关 - 外生性；与其他解释变量不高度相关；<br>利用 MM 矩估计：矩条件——正规方程组；<br>一元：$\widehat{\beta_1}=\frac{\sum z_i y_i}{\sum z_i x_i}$<br>多元：$\widehat{\beta}=(Z’X)^{-1}Z’Y$<br>大样本下为一致估计量；小样本下仍然是有偏的；</p></li><li><p>三种估计方法：<br><strong>IV</strong>：<br>第一步是 OLS 法, 进行 X 关于工具变量 Z 的回归: $\widehat{X}_i=\widehat{\alpha}_0+\widehat{\alpha}_1Z_i$</p><p>由第一步得到的 $\widehat{X}_i$ 为解释变量再次进行 OLS 回归：$\widehat{Y}_i=\widetilde{\beta}_0+\widetilde{\beta}_1 \widehat{X}_i$</p><p>得到 $\widehat{\beta}_1=\frac{\sum z_i y_i}{\sum z_i x_i}$</p><p><strong>2SLS</strong>: 一个内生解释变量有多个工具变量<br>$Y_i=\beta_0+\beta_1X_i+\beta_2Z_i+\mu_i$ , (Z 外生变量, X 为内生变量)</p><p>第一阶段, 内生解释变量 X 关于工具变量 $Z_1$ 和 $Z_2$ 及 $Z$ 的 OLS 回归（即关于含 IV 在内的所有外生变量回归）, 得到 X 的拟合值：</p><p>$\widehat {X} _ i = \widehat {\alpha} _0 + \widehat {\alpha} <em>1 Z</em> {i1} + \widehat {\alpha} <em>2 Z</em>{i2} + \widehat {\alpha} _3 Z _ {i}$</p><p>第二阶段, 以第一阶段的 $\widehat{X}_i$ 替代原模型的 $X_i$ 进行回归：</p><p>$Y_i=\beta_0+\beta_1\widehat{X}_i+\beta_2Z_i+\mu_i$</p><p>得到一致估计量；</p><p><strong>GMM 广义矩估计</strong>：一个内生解释变量有多个工具变量<br>识别问题：1 个内生解释变量对应一个 IV 为恰好识别；否则为过度识别, 过度识别可使用 2SLS 方法；</p></li><li><p>内生性检验：<br>比较工具变量估计与直接 OLS 估计的结果是否有显著差异, 若差异显著, 为内生变量；<br><strong>豪斯曼 (Hausman) 检验</strong>：<br>第一步：将内生变量 X 关于 $Z_1$ and $Z_2$ 作 OLS 估计, 得到残差 V：</p><p>$X_i=\alpha_0+\alpha_1Z_{i1}+\alpha_2Z_{i2}+v_i$</p><p>第二步：将残差加入原模型, 再做 OLS 估计：</p><p>$Y_i=\beta_0+\beta_1X_i+\beta_2Z_{i1}+\delta \widehat{V}_i+\varepsilon_i$</p><p>如果 $\widehat{V}$ 的参数显著为 0, 表明随机误差项 v 与 Y 同期无关, 进而与原模型随机误差项 $\mu$ 同期无关, 外生变量 $Z_1,Z_2$ 显然与 $\mu$ 同期无关, 则 X 与 $\mu$ 同期无关；</p><p>不拒绝 $\delta=0$ 的假设, 则可判断 X 是同期外生变量, 否则 X 为同期内生变量；</p><p>若有多个内生变量, 则逐个与外生变量做 OLS, 并将得到的残差都引入原模型；</p></li><li><p>过度识别约束检验：<br>内生解释变量对应的 IV 多于 1 个时, 要对其外生性进行检验：<br>对原模型进行 2SLS<br>记录的残差项关于 IV 及所有外生变量作 ols<br>对工具变量前的系数做联合 F 检验</p></li></ul><h3 id="模型设定偏误">模型设定偏误</h3><ul><li><p>偏误类型：<br>相关变量遗漏；<br>若遗漏的变量与解释变量相关, 估计的参数 $\beta_1$ 有偏 / 不一致；<br>不相关, 则斜率项无偏, 截距项有偏<br>方差估计有偏；<br>无关变量误选；<br>包含无关变量, 参数估计是无偏的, 但不具有最小方差；<br>错误的函数形式；<br>全方位的偏误；</p></li><li><p>检验是否遗漏变量或函数形势设定偏误：<br><strong>残差图示法</strong>：做残差序列与 t 或 X 的散点图；<br>遗漏变量时散点图有规律变动；<br>函数形式有误, 残差序列成正负交替变化<br><strong>一般性设定偏误检验</strong>：RESET 检验<br>将遗漏变量引入模型, 检验参数是否显著；</p><p>事先不知道是否遗漏变量, 采用 Y 的估计值 $\widehat{Y}$ 的若干次幂充当该替代变量</p><p>估计原模型, 得到残差及被解释变量的估计量</p><p>根据图形引入 $\widehat{Y}$ 的若干次幂</p><p>对增加变量的模型进行检验, F/t 检验</p></li></ul><h3 id="序列相关">序列相关</h3><ul><li><p>随机项之间存在相关性:<br>$cov(\mu_i,\mu_j)=E(\mu_i,\mu_j)\neq 0$<br>$var(\mu)=E(\mu \mu’)=\sigma^2\Omega\neq\sigma^2I$</p></li><li><p>仅存在 $cov(\mu_t,\mu_{t+1})\neq0$ 时, 为一阶列相关或自相关；<br>$\mu_{t+1}=\rho \mu_t+\varepsilon_t$<br>$\rho$ 为自协方差系数或一阶自相关系数；</p></li><li><p><strong>白噪声</strong>：</p><p>$\varepsilon_t$    满足：</p><p>$E(\varepsilon_t)=0$ , $var(\varepsilon_t)=\sigma^2$ , $cov(\varepsilon_i,\varepsilon_{i-s})=0$</p></li><li><p>产生序列相关的原因：<br>经济变量固有的惯性——时间序列上的前后关联；<br>模型设定偏误——遗漏重要的解释变量或函数形式设定偏误；<br>数据的“编造”——新生成的数据与原始数据存在相关性；</p></li><li><p>序列相关的后果：<br><strong>参数估计量非有效</strong> $E(\mu’\mu)\neq\sigma^2I$, 参数的有效性证明建立在同方差及相互独立的基础上；<br>大样本情形下, 参数估计量是一致的, 但不具有渐进有效性；<br><strong>变量显著性检验失去意义</strong>：显著性检验同样建立在随机误差项同方差及相互独立的基础上, 存在序列相关时, 参数的方差估计存在偏误, t 统计量存在偏误；<br><strong>模型预测失效</strong>：异方差, 参数估计量方差的估计量存在偏误, 预测区间精度降低；</p></li><li><p>序列相关检验：<br>首先 OLS 估计, 得到随机误差项的近似估计 $\widetilde{e_t}=Y_t-\widehat{Y_t}$, 分析随机误差项之间的相关性；<br><strong>图示法</strong>——$\widetilde{e_t}-t$ 的散点图<br><strong>回归检验法</strong>：<br>以 $\widetilde{e_t}$ 为被解释变量, $\widetilde{e} _ {t-1}$ ,  $\widetilde{e} _ {t-2}$ ,  $\widetilde{e} _t ^ 2$ 等作为解释变量建立回归方程；</p><p>利于确定序列相关的形式, 适用于任何类型的序列相关问题检验；<br><strong>杜宾 - 瓦森 D.W. 检验法</strong>：检验序列自相关；<br>假定条件：<br>解释变量 X 随机</p><p>随机误差项 $\mu_t$ 一阶自相关, $\mu_t=\rho\mu_{t-1}+\varepsilon_t$</p><p>回归模型中不含有被解释变量滞后项</p><p>回归具有截距项</p><p>构造 $D.W.$ 统计量 $=\frac{\sum_{t=2} ^ n (\widetilde{e} _ t-\widetilde{e} _ {t-1})}{\sum_{t=1} ^n \widetilde{e} _ t ^ 2}$</p><p>临界值的下限 $d_L$ 与上限 $d_U$, 只与样本容量 n 及解释变量 k 有关, 与解释变量 X 取值无关；</p><p>给定显著水平 $\alpha$, 由 n 及 k 查询 DW 分布表；</p><p>比较、判断：</p><p>​$0&lt;DW&lt;d_L$, 存在正相关</p><p>​$d_L&lt;DW&lt;d_U$, 不能确定</p><p>​$d_U&lt;DW&lt;4-d_U$, 无自相关</p><p>​$4-d_u&lt;DW&lt;4-d_L$, 不能确定</p><p>​$4-d_L&lt;DW&lt;4$, 存在负相关</p><p>​<img src="https://blog.jingvc.com/pic/Pasted%20image%2020230103121521.png?x-oss-process=style/Comprass_Copyright" alt=""><br>​当 n 较大时, $D.W.\approx 2(1-\rho)$</p><p>​一阶自回归中, 估计 $\rho= \frac {\sum_ { t=2} ^ n \widetilde {e} _ t \widetilde {e} _  {t - 1} } {\sum_ { t = 2}  ^ n \widetilde {e} _ t ^ 2}$</p><p>​完全一阶正相关, $\rho=1$, $D.W.\approx 0$</p><p>​完全一阶负相关, $\rho=-1$, $D.W.\approx 4$</p><p>​完全一阶不相关, $\rho=0$, $D.W.\approx 2$</p><p><strong>拉格朗日乘数检验</strong>: 适合高阶序列相关及模型中包含被解释变量滞后项的情形（<strong>BG 检验</strong>）<br>$Y_t=\beta_0+\beta_1X_{t1}+\beta_2X_{t2}+…+\beta_kX_{tk}+\mu_t$</p><p>怀疑 $\mu_t$ 存在 $p$ 阶序列相关：</p><p>$\mu_t=\rho_1\mu_{t-1}+\rho_2\mu_{t-2}+…+\rho_p\mu_{t-p}+\varepsilon_t$</p><p>BG 检验：构造受约束回归方程:</p><p>$Y_t=\beta_0+\beta_1X_{t1}+\beta_2X_{t2}+…+\beta_kX_{tk}+\rho_1\mu_{t-1}+\rho_2\mu_{t-2}+…+\rho_p\mu_{t-p}+\varepsilon_t$</p><p>约束条件 $H_0:\rho_1=\rho_2=…=\rho_p=0$</p><p>计算残差序列 $\widetilde{e}_t$</p><p>构造辅助回归：</p><p>$\widetilde {e} _ t = \beta _ 0 + \beta _ 1 X _ {t 1} + \beta _ 2 X _ {t 2} + … +\beta _ k X _ {tk} +\rho _ 1 \widetilde {e}  _ {t - 1} + \rho _ 2 \widetilde {e} _ {t -2} +… + \rho_p \widetilde {e} _ {t - p} + \varepsilon _ t$</p><p>计算辅助回归的 $R^2$</p><p>约束为真时, 大样本下 $LM=n·R^2\thicksim \chi^2(p)$</p><p>给定显著水平 $\alpha$, 比较 $\chi_\alpha^2(p)$ 与 $LM$ 值, 可由 1 阶逐步向高阶进行检验</p></li><li><p>序列相关补救:<br><strong>广义最小二乘法(GLS)</strong>：<br>$Cov(\mu \mu’)=E(\mu \mu’)=\sigma^2\Omega$</p><p>存在可逆矩阵 D 使 $\Omega=D’D$</p><p>变换原模型：$D^{-1}Y=D^{-1}X\beta+D^{-1}\mu$, 使模型同方差且随机误差项相互独立</p><p>$E(\mu_* \mu_*')=\sigma^2I$</p><p>OLS 估计：$\widehat{\beta}_*=(X’\Omega^{-1}X)^{-1}X’\Omega^{-1}Y$</p><p><strong>广义差分法</strong>：将模型变化为不存在序列相关的差分模型, 再 OLS 估计：<br>$Y_t=\beta_0+\beta_1X_{t1}+\beta_2X_{t2}+…+\beta_kX_{tk}+\mu_t$</p><p>怀疑 $\mu_t$ 存在 p 阶序列相关：</p><p>$\mu_t=\rho_1\mu_{t-1}+\rho_2\mu_{t-2}+…+\rho_p\mu_{t-p}+\varepsilon_t$</p><p>差分变化：$Y_t-\rho_1Y_{t-1}-…-\rho_pY_{t-p}=\beta_0(1-\rho_1-…\rho_k)+\beta_1(X_{t,1}-\rho_1X_{t-1,1}-…-\rho_pX_{t-p,1})+…+\beta_k(X_{t,k}-\rho_1X_{t-1,k}-…-\rho_pX_{t-p,k})$</p><p>OLS 估计差分模型, 得到参数无偏、有效估计量；</p></li><li><p>随机误差项相关系数估计：<br><strong>科克伦 - 奥科特迭代法</strong>：<br>$Y_i=\beta_0+\beta_1X_i+\mu_i$ 作 $ols$ 估计得到 $\widetilde{e}_t$</p><p>ols 估计 $\widetilde {e} _ t = \rho_1 \widetilde {e} _ {t-1} + \rho_2\widetilde {e} _ {t-2} +…+ \rho_p \widetilde {e} _ {t-p} + \varepsilon _ t$, 得到相关系数第一次估计值</p><p>将估计值代入广义差分模型, 进行 OLS 估计, 得到 $\beta$ 估计值</p><p>由参数估计值计算 $\widehat{Y}_i$ 作为被解释变量, 再次作 OLS 估计, 得到新的 $\widetilde{e}_t$, 对残差相关系数作二次估计</p><p>一般迭代两次就可以得到较为满意的结果, 科克伦 - 奥科特两步法；</p></li><li><p>FGLS 可行的广义最小二乘法：可以求得 $\Omega$ 或随机项的相关系数；</p></li><li><p>序列相关稳健标准误法：<br><strong>Newey-West 标准误</strong>, 可以得到序列相关的正确标准误, 得到 OLS 正确方差估计；</p></li><li><p>虚假序列相关：<br>由模型设定偏误引起, 可以通过调整模型避免；</p></li></ul><h2 id="Time-Series-Basic-Knowledge">Time-Series Basic Knowledge</h2><ul><li><p>时间序列平稳可以替代随机抽样假定, 随机误差项仍满足正态分布的假定；</p></li><li><p>避免虚假回归（为回归）：<br>时间序列不平稳时, 产生伪回归现象；</p><p>$Y_t=Y_0+\sum e_1t$</p><p>$X_t=X_0+\sum e_2t$</p><p>$e_1t$ 与 $e_2t$ 弱相关关系, 由此产生的两个随机游走时间序列应同样没有相关关系, 但回归测试后发现存在</p><p>显著相关关系；<br>对两个序列做差分, 可能会使序列变得平稳；<br>回归之前需要先检验, 如果检验不平稳, 需要处理为平稳序列；</p></li><li><p>平稳性：<br>过去的变化及波动应该处于合理的区间, 以保障预测存在合理性；<br>严平稳性 -$y_t$</p><p>${y_1,y_2,…,y_t}$ 的联合概率分布与 ${y_{1+k},y_{2+k},…,y_{t+k}}$ 的联合概率分布相同</p><p>弱平稳性（常用）</p><p>$y_t$ 的均值、方差不随时间变化, 协方差仅与观测值之间的距离而与所处的时间点无关</p><p>$E(y_t)=\mu$</p><p>$var(y_t)=E(y_t-\mu)^2=\sigma^2$</p><p>$cov(y_t,y_{t+k})=\gamma_{k}=E[(y_t-\mu)(y_{t+k}-\mu)]=E[(y_{t+m}-\mu)(y_{t+m+k}-\mu)]$</p><p>非平稳时, 期望值是依赖时间变化的</p></li><li><p>常见非平稳随机过程 (stochastic processes)<br>无漂浮随机游走 (Random Walk without Drift)<br>$Y_t=Y_{t-1}+e_t$</p><p>其中 $e_t$ 是均值为 0, 方差为 $\sigma^2$ 的白噪声 (shock)</p><p>$Y_t=Y_0+\sum e_t$</p><p>then:</p><p>$E(Y_t)=E(Y_0+\sum e_t)=Y_0$</p><p>$var(Y_t)=t\sigma ^2$</p><p>随时间的增加, 方差会增大；</p><p>有漂浮随机游走 (Random Walk with Drift)</p><p>$y_t=\delta+y_{t-1}+e_t$  (漂浮项 $\delta$ , 使时间序列有时间趋势——非平稳)</p><p>$X_t=\phi X_{t-1}+\mu_t$</p><p>当 $-1&lt;\phi&lt;1$ 时, 该随机过程平稳</p></li><li><p>平稳性检验：<br>避免伪回归现象；<br>判断方法：<br><strong>散点图判断平稳性</strong>（看均值或者离散程度）；<br>平稳时间序列围绕一个值上下波动；<br><strong>样本自相关函数判断平稳性</strong>：</p><p>总体自相关函数(autocorrelation function, ACF)</p><p>$\rho_k=\frac{\gamma_k}{\gamma_0}=\frac{cov(y_t,y_{t+k})}{var(y_t)}$</p><p>样本 ACF</p><p>$\widehat {\rho_k} = \frac {\widehat {\gamma} _ k} {\widehat {\gamma} _ 0 } = \frac {\sum(y_t - \overline {y} ) (y _ {t+k}-\overline {y} ) }  {\sum(y_t -\overline {y} ) ^ 2 }$</p><p>白噪声的 $ACF=0$ , 是没有信息可以提取的平稳序列；</p><p>非平稳序列的 ACF 衰减比较慢；</p><p>White Noise (i.i.d- independent and identically distributed)<br>Gaussian white noise: 服从 0 均值, $\sigma^2$ 方差的正态分布;</p><p>All the ACFS are zeros;</p><p>Test: Q 统计量 $H_0:\rho_1=\rho_2=…=\rho_k=0$</p><p>Portmanteau (Q)Statistic： $Q^*=T\sum^{m}_{l=1}\widehat{\rho}_l^2\thicksim\chi^2(m)$</p><p>非平稳时间序列 ACF 特征：当 k 增大时, 衰减比较慢；</p><p>平稳时间序列 ACF 特征：当 k 增大时, 衰减比较快；</p><p><strong>单位根 (unit root)</strong><br>$y_t=\rho y_{t-1}+e_t$</p><p>$y_t-\rho y_{t-1}=e_t$</p><p>$y_t-\rho L y_t=e_t$</p><p>$(1-\rho L)y_t=e_t$</p><p>$\Rightarrow 1-\rho z=0$</p><p>$z=\frac{1}{\rho}&gt;1$ 为平稳序列</p><p>$\rho=1$ 则该过程为无漂移随机游走随机过程, 该过程非平稳, 称该过程具有单位根；可以做一次差分使序列变得平稳；（一个单位根）</p><p>$|\rho|&lt;1$ 时, 可以证明 $y_t$ 是平稳的；</p><p>若 $y_t=2y_{t-1}-y_{t-2}+e_t$ 可得 $z_1=1, z_2=1$ 存在两个单位根, 做两次差分, 变得平稳；</p><p><strong>Dickey-Fuller 单位根检验</strong><br>适用于一阶自相关</p><p>$y_t=\rho y_{t-1}+e_t$</p><p>两边同时减去 $y_{t-1}$</p><p>then:  $y_t-y_{t-1}=(\rho-1)y_{t-1}+e_t$  即 $\Delta y_t=\delta y_{t-1}+e_t$</p><p>检验原假设：$H_0:\delta=0$ (非平稳)</p><p><strong>Augmented Dickey-Fuller (ADF) test</strong><br>适用于高阶序列相关或包含明显时间趋势项的情形</p><p>$\Delta y_t = \delta y _ {t-1} + \sum ^ {L} _ {j=1} \lambda_j \Delta y _ {t-j} + e_t$</p><p>$\Delta y_t = \alpha+\delta y_ {t-1}+\sum^{L} _ {j=1} \lambda_j \Delta y_{t-j}+ e_t$</p><p>$\Delta y_t=\alpha+\beta t+\delta y_{t-1} + \sum^{L} _ {j=1} \lambda_j \Delta y_{t-j} + e_t$</p><p>带有时间趋势项的非平稳序列, 可以通过去除趋势项使其变的平稳；</p><p>针对 $H_0:\delta=0$ (非平稳)</p><p>模型 3-2-1 的顺序进行检验</p></li><li><p>单整序列：<br>一阶差分可以变平稳 $I(1)$</p></li></ul><h2 id="协整与误差修正">协整与误差修正</h2><ul><li><p>变量之间存在长期稳定的关系, 即变量之间协整, 可以使用经典回归模型方法建立回归模型；</p></li><li><p>经济变量之间长期均衡：$Y_t=\alpha_0+\alpha_1X_t+\mu_t$, 可以确定 Y 的均衡值<br>存在长期均衡关系时, Y 对其均衡点的偏离本质上是“临时性”的<br>长期均衡下, $\mu_t=Y_t-\alpha_0-\alpha_1X_t$ 应该是 0 均值的 I(0), 平稳序列</p></li><li><p>协整：<br>两个单整序列, 单整阶数相同时才可能协整；<br>(d,d)阶协整——表明变量之间存在长期稳定的比例关系, 可以建立回归模型；$Y_t,X_t\thicksim CI(1,1)$</p></li><li><p>协整检验：<strong>EG 检验</strong><br>OLS 估计 $Y_t=\alpha_0+\alpha_1X_t+\mu_t$, 得到残差 $\widehat{e}_t$<br>检验残差序列是否 I(0)——ADF 检验</p></li><li><p>多变量协整检验<br>协整变量间可能存在多种稳定的线性组合<br>仍是 OLS 估计后, 估计误差 (加总) 是否为 I(0)序列<br>设置一个变量为被解释变量, 其他为解释变量, 检验残差序列是否平稳, 若不平稳则更改被解释变量直到平稳；</p></li><li><p>高阶单整变量的协整检验<br>没有成熟的临界值分布表</p></li><li><p>只能有协整检验均衡：<br>协整的随机误差是平稳的, 均衡方程的随机误差是白噪声</p></li><li><p>误差修正：<br>非平稳时间序列, 直接差分后建立回归模型 $\Delta Y_t=\alpha_1\Delta X_t+v_t$</p><p>$v_t$ 可能序列相关</p><p>采用差分形式估计, 关于变量水平值的重要信息将被忽略, 只表达了 X 与 Y 之间的短期关系, 没有揭示长期关系；</p><p>Y 在 t 期的变化, 不仅取决于 X 本身的变化, 还取决于 X 与 Y 在 t-1 期末的状态；</p></li><li><p>误差修正模型：（ECM 模型 -DHSY 模型）<br>$Y_t=\alpha_0+\alpha_1X_t+\mu_t$<br>加入一阶滞后项：$Y_t=\beta_0+\beta_1X_t+\beta_2X_{t-1}+\beta_3Y_{t-1}+\mu_t$<br>变量可能非平稳, 进行差分变换:$\Delta Y_t= \beta_1\Delta X_t-(1-\beta_3)(Y_{t-1}-\frac{\beta_0}{1-\beta_3}-\frac{\beta_1+\beta_2}{1-\beta_3})+\mu_t$<br>$\Delta Y_t= \beta_1\Delta X_t-\lambda(Y_{t-1}-\alpha_0-\alpha_1X_{t-1})+\mu_t$<br>$Y$ 的变化取决于 $X$ 的变化及前一期的非均衡程度：$\Delta Y_t= \beta_1\Delta X_t-\lambda ecm_{t-1}+\mu_t$<br>长期均衡解：$\alpha_0+\alpha_1X_t$ , $\alpha_1$ 为 Y 关于 X 的长期弹性<br>短期非均衡模型：$Y_t=\beta_0+\beta_1X_t+\beta_2X_{t-1}+\beta_3Y_{t-1}+\mu_t$, $\beta_1$ 为短期弹性</p></li><li><p>误差修正：引入更多滞后项<br>二阶误差：增加 $\Delta Y_{t-1}$ 及 $\Delta X_{t-1}$ 项</p></li><li><p>误差修正：多变量<br>增加另一个变量的短期弹性</p></li><li><p>建立误差修正模型：<br>优点：Granger 表述定理<br>消除变量可能存在的趋势因素<br>消除多重共线性<br>保留变量水平值信息<br>可以使用经典回归方法估计, 及 F/t 检验<br>协整变量, 建立短期模型；<br><strong>EG 两步法</strong>：OLS 协整回归, 将 OLS 估计的非均衡误差项的滞后一期加入回归, 估计短期弹性；</p><p>$\Delta Y_t=lagged(\Delta Y_t,\Delta X_t)-\lambda ecm_{t-1}+\mu_t$</p><p><strong>直接估计法</strong>：对 $\Delta Y_t=\lambda \alpha_0+\beta \Delta X_t-\lambda Y_{t-1}+\lambda \alpha_1X_{t-1}+\mu_t$ 作 OLS 估计</p></li></ul><h2 id="格兰杰因果检验">格兰杰因果检验</h2><ul><li><p>随机时间序列模型：不同时点观测值之间的关系；<br>无条件预测；简化结构模型；</p></li><li><p>序列自回归模型：<br>仅使用时序变量的滞后项及随机扰动项建立模型</p><p>$AR(p):X_t=\phi_1X_{t-1}+…+\phi_pX_{t-p}+\mu_t$</p><p>MA(q): $\mu_t=\varepsilon_t-\theta_1\varepsilon_{t-1}-…-\theta_q\varepsilon_{t-q}$</p><p>ARMA(p, q): $X_t=\phi_1X_{t-1}+…+\phi_pX_{t-p}+\varepsilon_t-\theta_1\varepsilon_{t-1}-…-\theta_q\varepsilon_{t-q}$</p><p>可使用过去的行为预测未来</p></li><li><p>AR(p)模型的平稳性<br>引入滞后算子：<br>$X_t-\phi_1X_{t-1}-…-\phi_pX_{t-p}=\varepsilon_t$</p><p>$(1-\phi_1 L^1-…-\phi_pL^p)X_t=\varepsilon_t$</p><p>得到 AR(p)的特征方程<br>$\phi(z)=(1-\phi_1 z^1-…-\phi_p z^p)=0$</p><p>所有根 z 的模大于 1, 则是平稳的；</p><p>高阶自回归平稳性充分条件：$|\phi_1|+…+|\phi_p|&lt;1$</p></li><li><p>MA(q)的平稳性：<br>有限阶的 MA 模型总是平稳的</p></li><li><p>ARMA(p, q)的平稳性取决与 AR(p)部分的平稳性</p></li><li><p>由 ACF 及 PACF 判断模型类别：拖尾 / 截尾</p></li><li><p>向量自回归：<br>单个时间序列拓展到多个时间序列<br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020230103151055.png?x-oss-process=style/Comprass_Copyright" alt=""><br>最佳滞后阶数 P 的确定：LR 估计量, SIC, SC<br>应用：<br>预测<br>存在结构约束<br>脉冲响应分析或方差分解分析, 冲击对各个变量变化的贡献度；</p></li><li><p>格兰杰因果检验：<br>VAR 模型可以检验变量间的关系, 变量的变化受其自身及其他变量过去行为的影响；<br>单向：一个变量的过去行为影响另一个变量的当前行为；<br>双向：双方的过去行为对双方的当前行为都存在影响；<br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020230103151855.png?x-oss-process=style/Comprass_Copyright" alt=""><br>通过受约束回归的 F 检验：<br>$Y_t$ 关于 Y 的滞后项回归得到 $RSS_U$<br>$Y_t$ 关于 Y 及 X 的滞后项回归得到 $RSS_R$<br>构造 F 统计量  $=\frac{RSS_R-RSS_U/m}{RSS_U/(n-k)}\thicksim F_{\alpha}(m,n-k)$</p></li></ul>]]></content>
    
    
    <summary type="html">计量经济学基础知识, 一些知识框架</summary>
    
    
    
    <category term="Econometric" scheme="https://jingvc.com/categories/Econometric/"/>
    
    
    <category term="线性回归" scheme="https://jingvc.com/tags/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>时间序列基础</title>
    <link href="https://jingvc.com/post/15219.html"/>
    <id>https://jingvc.com/post/15219.html</id>
    <published>2023-02-25T00:00:00.000Z</published>
    <updated>2023-02-26T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Time Series Models , 整体是有关未来的预测, 可能是由 Y 自身出发进行 <br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221212171816.png?x-oss-process=style/Comprass_Copyright" alt=""></p><h2 id="plot 先观察变量的变化趋势">plot 先观察变量的变化趋势 </h2><h2 id="数据处理"> 数据处理 </h2><ul><li><p> 滞后  (Lags 即是上一期的数据)   L.Y</p></li><li><p> 一阶差分  (First difference)      D.Y</p><p>$\Delta Y_t=Y_t-Y_{t-1}\Rightarrow \Delta Y_t=Y_t-L.Y_{t}=(1-L)Y_t$</p><p>$\Delta^2 Y_t==(1-L)^2 Y_t$</p><p>$\Delta^3 Y_t==(1-L)^3 Y_t$</p></li><li><p> 自然对数与增长率 <br>取对数可将指数增长变成线性变化 </p><p> 应对存在的异方差问题 </p><p>$Growth \ Rate =\frac{Y_t-Y_{t-1}}{Y_{t-1}}=\frac{\Delta Y_t}{Y_{t-1}} \approx \Delta ln(Y_t)$</p><p>$\Delta ln(Y_t)=ln(Y_t)-ln(Y_{t-1})$</p></li><li><p> 自协方差 <br>$Cov(Y_t,Y_{t-1})$<br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221212174013.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p> 自相关系数 <br>$\rho \Rightarrow (X \ and \ Y)$</p><p>$\widehat{\rho} \Rightarrow (\widehat{X} \ and \ Y)$</p><p>$j^{th}autocorrelation=\rho_j=\frac{cov(Y_t,Y_{t-1})} {\sqrt{var(Y_t)var(Y_{t-j} ) } }$</p><p> 自协方差及自相关均可以在 stata 做时间序列图 </p>  <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pwcorr</span> y1 L2.ya,sig  <span class="comment">//y1 与滞后一阶 </span></span><br><span class="line"><span class="keyword">corrgram</span> y1,lag(20)  <span class="comment">//y1 与滞后 20 阶之前的自相关系数 </span></span><br><span class="line"><span class="keyword">ac</span> y1                <span class="comment">// 作自相关系数图 &amp; 置信区间 </span></span><br></pre></td></tr></table></figure></li></ul><h2 id="平稳性及其检验"> 平稳性及其检验 </h2><p> 过去的变化及波动应该处于合理的区间, 以保障预测存在合理性；</p><ul><li><p> 严平稳性 -$y_t$<br>${y_1,y_2,…,y_t}$ 的联合概率分布与 ${y_{1+k},y_{2+k},…,y_{t+k}}$ 的联合概率分布相同 </p></li><li><p> 弱平稳性（常用）<br>$y_t$ 的均值、方差不随时间变化, 协方差仅与观测值之间的距离而与所处的时间点无关 </p><p>$E(y_t)=\mu$</p><p>$var(y_t)=E(y_t-\mu)^2=\sigma^2$</p><p>$cov(y_t,y_{t+k})=\gamma_{k}=E[(y_t-\mu)(y_{t+k}-\mu)]=E[(y_{t+m}-\mu)(y_{t+m+k}-\mu)]$</p></li><li><p> 非平稳时, 期望值是依赖时间变化的 </p></li></ul><h2 id="常见非平稳随机过程 -stochastic-processes"> 常见非平稳随机过程 (stochastic processes)</h2><ul><li><p> 无漂浮随机游走 (Random Walk without Drift)<br>$Y_t=Y_{t-1}+e_t$</p><p> 其中 $e_t$ 是均值为 0, 方差为 $\sigma^2$ 的白噪声 (shock)</p><p>$Y_t=Y_0+\sum e_t$</p><p>then:</p><p>$E(Y_t)=E(Y_0+\sum e_t)=Y_0$</p><p>$var(Y_t)=t\sigma ^2$</p><p> 随时间的增加, 方差会增大；</p></li><li><p> 有漂浮随机游走 (Random Walk with Drift)</p><p>$y_t=\delta+y_{t-1}+e_t$  (漂浮项 $\delta$ , 使时间序列有时间趋势——非平稳)</p></li></ul><h2 id="伪回归现象 -spurious-regression"> 伪回归现象 (spurious regression)</h2><ul><li><p> 时间序列不平稳时, 产生伪回归现象；</p><p>$Y_t=Y_0+\sum e_1t$</p><p>$X_t=X_0+\sum e_2t$</p><p>$e_1t$ 与 $e_2t$ 弱相关关系, 由此产生的两个随机游走时间序列应同样没有相关关系, 但回归测试后发现存在显著相关关系；</p><p> 对两个序列做差分, 可能会使序列变得平稳；</p><p> 回归之前需要先检验, 如果检验不平稳, 需要处理为平稳序列；</p></li></ul><h2 id="平稳性检验"> 平稳性检验 </h2><ul><li><p> 避免伪回归现象；</p></li><li><p> 判断方法：</p><p> 散点图判断平稳性（看均值或者离散程度）；</p></li><li><p> 样本自相关函数判断平稳性：</p><p> 总体自相关函数 (autocorrelation function, ACF)</p><p>$\rho_k=\frac{\gamma_k} {\gamma_0}=\frac{cov(y_t,y_{t+k} ) } {var(y_t) }$</p><p> 样本 ACF</p><p>$\widehat {\rho_k} = \frac{\widehat {\gamma} _ k } {\widehat {\gamma} _ 0 } = \frac {\sum(y _ t - \overline {y} ) (y _ {t+k} - \overline{y} ) }  {\sum(y_t - \overline {y} ) ^ 2 }$</p><p> 白噪声的 $ACF=0$ , 是没有信息可以提取的平稳序列；</p><p> 非平稳序列的 ACF 衰减比较慢；</p></li><li><p>White Noise (i.i.d- independent and identically distributed)<br>Gaussian white noise: 服从 0 均值, $\sigma^2$ 方差的正态分布;</p><p>All the ACFS are zeros;<br>Test:</p><p>Portmanteau (Q)Statistic：$Q^*=T\sum^{m}_{l=1}\widehat{\rho}_l^2$</p>  <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">wntestq</span> yt,lags(50)  <span class="comment">// 选择 50 以内的全部滞后期, 即选择 50 个 ACF 加总 </span></span><br></pre></td></tr></table></figure><p> 非平稳时间序列 ACF 特征：当 k 增大时, 衰减比较慢；</p><p> 平稳时间序列 ACF 特征：当 k 增大时, 衰减比较快；</p></li><li><p> 单位根 (unit root)<br>$y_t=\rho y_{t-1}+e_t$</p><p>$y_t-\rho y_{t-1}=e_t$</p><p>$y_t-\rho L y_t=e_t$</p><p>$(1-\rho L)y_t=e_t$</p><p>$\Rightarrow 1-\rho z=0$</p><p>$z=\frac{1}{\rho}&gt;1$ 为平稳序列 </p><p>$\rho=1$ 则该过程为无漂移随机游走随机过程, 该过程非平稳, 称该过程具有单位根；可以做一次差分使序列变得平稳；（一个单位根）</p><p>$|\rho|&lt;1$ 时, 可以证明 $y_t$ 是平稳的；</p><p> 若 $y_t=2y_{t-1}-y_{t-2}+e_t$ 可得 $z_1=1, z_2=1$ 存在两个单位根, 做两次差分, 变得平稳；</p></li><li><p>Dickey-Fuller 单位根检验 <br>$y_t=\rho y_{t-1}+e_t$</p><p> 两边同时减去 $y_{t-1}$</p><p>then:  $y_t-y_{t-1}=(\rho-1)y_{t-1}+e_t$  即 $\Delta y_t=\delta y_{t-1}+e_t$</p><p> 检验原假设：$H_0:\delta=0$</p>  <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dfuller</span> dlny  <span class="comment">//test for unit root</span></span><br></pre></td></tr></table></figure></li><li><p>Augmented Dickey-Fuller (ADF) test<br>$\Delta y_t = \delta y_{t-1} + \sum^{L} _ {j=1} \lambda_j \Delta y_{t-j}+e_t$</p><p>$\Delta y_t=\alpha+\delta y_{t-1} + \sum^{L} _ {j=1} \lambda_j \Delta y_{t-j}+e_t$</p><p>$\Delta y_t=\alpha+\beta t+\delta y_{t-1}+\sum^{L} _ {j=1} \lambda_j \Delta y_{t-j}+e_t$</p><p> 带有时间趋势项的非平稳序列, 可以通过去除趋势项使其变的平稳；</p></li></ul><h2 id="AR 模型">AR 模型 </h2><ul><li><p> 时间序列分析是短期预测方法, 时间序列模型不是不同变量间的“因果”关系为基础, 而是寻找时间序列自身的变化规律；</p></li><li><p>Autoregression Integrated Moving Average model （or Box-Jenkins 方法）</p><p> 先将非平稳序列处理平稳, 再建模；</p><p> 依据变量自身的变化规律, 利用外推机制描述时间序列的变化；</p></li><li><p>AR 模型 (Autoregression Model)</p><p> 一阶自回归—AR(1)</p><p>$y_t=\phi_0+\phi_1 y_{t-1}+e_t$</p><p>p 阶自回归—AR(p)</p><p>$y_t=\phi_0+\phi_1 y_{t-1}+\phi_2 y_{t-2}+\phi_3 y_{t-3}+…+\phi_p y_{t-p}+e_t$</p></li><li><p>AR 模型识别 </p><p>(1) 利用 ACF (Autocorrelation Function) 和 PACF (Partial Autocorrelation Function)</p><p>ACF 自相关函数 $\rho_k=\frac{\gamma_k}{\gamma_0}=\frac{cov(y_t,y_{t+k})}{var(y_t)}$</p><p>PACF：描述 $y_t$ 与 $y_{t-k}$ 之间的条件相关性, 即在消除中间变量 $y_{t-1},…,y_{t-k+1}$ 带来的间接相关性后, $y_t$ 与 $y_{t+k}$ 之间的直接相关性；</p><p>PACF 由 Yule-Walker 方程求出；</p><p><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214143044.png?x-oss-process=style/Comprass_Copyright" alt=""><br>(2) 利用 AIC、SIC 等信息准则 <br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214143216.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p>AR 模型估计：<br>OLS</p><p>MLE</p></li><li><p>AR 模型预测 <br>(1) 1-step ahead Forecasting</p><p><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214143450.png?x-oss-process=style/Comprass_Copyright" alt=""><br>(2) 2-step ahead forecasting</p><p><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214143501.png?x-oss-process=style/Comprass_Copyright" alt=""><br>(3) multistep ahead Forecasting</p></li></ul><h2 id="MA-moving-average- 模型">MA (moving average) 模型 </h2><ul><li><p> 模型设定 </p><p>MA(1)</p><p>MA(q)</p><p><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214144016.png?x-oss-process=style/Comprass_Copyright" alt=""></p></li><li><p> 模型识别 <br>$AR(\infty) \rightarrow MA(1)$</p><p>PACF: decay</p><p>ACF: cut off</p></li><li><p> 模型估计 <br>MLE</p></li><li><p> 模型预测 <br>1-step ahead</p><p>2-step ahead</p><p>3-step ahead</p></li></ul><h2 id="ARMA 模型">ARMA 模型 </h2><ul><li> 结合 AR 和 MA 模型 </li></ul><h2 id="ARIMA-p-d-q- 模型建模">ARIMA(p, d, q) 模型建模 </h2><ul><li> 对原序列进行平稳性检验, 如果不满足平稳性的条件, 可以通过差分变 <br>换或者其他变换（如先取对数然后再差分）将该序列变为平稳序列；</li><li> 对平稳序列计算 ACF 和 PACF, 初步确定 ARMA 模型的阶数 p 和 q, 并 <br>在初始估计中选择尽可能较少的参数；</li><li> 估计 ARMA 模型的参数, 借助 t 统计量初步判断参数的显著性, 尽可能 <br>剔除不显著的参数, 保持模型的结构精简；</li><li> 对估计的 ARMA 模型的扰动项进行检验, 看其是否为白噪声序列；</li><li> 当有几个较为相似的 ARMA 模型可供选择时, 可以通过 AIC 或 SIC 等 <br>标准来选择最优模型。</li></ul><h2 id="协整"> 协整 </h2><ul><li> 不平稳的变量, 不能使用经典回归模型, 否则会出现伪回归问题；</li><li> 非平稳 → 差分转换成平稳 → 适合描述短期状态或非均衡状态− 长期均衡状态应该使用变量本身（level data）</li><li> 如果在一个回归中涉及的两个或多个时间序列“一起漂移”或“同步”, 则可能没有伪回归问题。</li><li> 协整：<br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214144742.png?x-oss-process=style/Comprass_Copyright" alt=""></li><li> 协整检验：<br>两变量 Engle-Granger 检验 <br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214144848.png?x-oss-process=style/Comprass_Copyright" alt=""></li></ul><h2 id="误差修正"> 误差修正 </h2><ul><li>ECM 模型 <br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214144946.png?x-oss-process=style/Comprass_Copyright" alt=""></li></ul><h2 id="Granger 因果关系检验">Granger 因果关系检验 </h2><ul><li> 一般在 VAR 模型框架下进行 <br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214145044.png?x-oss-process=style/Comprass_Copyright" alt=""></li><li> 检验假设 <br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214145101.png?x-oss-process=style/Comprass_Copyright" alt=""></li></ul><h2 id="ARCH- 和 GARCH">ARCH 和 GARCH</h2><ul><li> 金融时间序列 <br>原数据是随机游走（random walk）过程（非平稳的）；<br>一阶差分后是平稳的, 但是表现为剧烈波动性, 这种波动性表现在两个方面：<br>— 波动性随时间而变化；波动性聚集现象（volatility clustering）</li><li> 自回归条件异方差模型 (Autoregressive Conditional Heteroscedasticity , ARCH)<br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214145313-1677489095438-27.png?x-oss-process=style/Comprass_Copyright" alt=""></li><li> 广义自回归条件异方差模型 (Generalized Autoregressive Conditional Heteroscedasticity, GARCH)<br><img src="https://blog.jingvc.com/pic/Pasted%20image%2020221214145345-1677489102170-32.png?x-oss-process=style/Comprass_Copyright" alt=""></li></ul>]]></content>
    
    
    <summary type="html">时间序列基础知识, 由数据处理到平稳性检验与预测模型。</summary>
    
    
    
    <category term="Econometric" scheme="https://jingvc.com/categories/Econometric/"/>
    
    
    <category term="Time-series" scheme="https://jingvc.com/tags/Time-series/"/>
    
  </entry>
  
</feed>
